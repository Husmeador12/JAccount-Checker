<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PVPNetConnect.Fakes</name>
    </assembly>
    <members>
        <member name="T:PVPNetConnect.Fakes.ShimClassDefinition">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.ClassDefinition</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimClassDefinition.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimClassDefinition.#ctor(PVPNetConnect.ClassDefinition)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimClassDefinition.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimClassDefinition.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimClassDefinition.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimClassDefinition.Constructor">
            <summary>Establecer el shim de ClassDefinition.ClassDefinition()</summary>
        </member>
        <member name="T:PVPNetConnect.Fakes.ShimClassDefinition.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="T:PVPNetConnect.Fakes.ShimError">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.Error</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimError.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimError.#ctor(PVPNetConnect.Error)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimError.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimError.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimError.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimError.Constructor">
            <summary>Establecer el shim de Error.Error()</summary>
        </member>
        <member name="T:PVPNetConnect.Fakes.ShimError.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="T:PVPNetConnect.Fakes.ShimLocaleValue">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.LocaleValue</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimLocaleValue.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimLocaleValue.#ctor(PVPNetConnect.LocaleValue)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimLocaleValue.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimLocaleValue.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimLocaleValue.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimLocaleValue.ConstructorString">
            <summary>Establecer el shim de LocaleValue.LocaleValue(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimLocaleValue.ValueGet">
            <summary>Establecer el shim de LocaleValue.get_Value()</summary>
        </member>
        <member name="T:PVPNetConnect.Fakes.ShimLocaleValue.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimLocaleValue.AllInstances.ValueGet">
            <summary>Establecer el shim de LocaleValue.get_Value()</summary>
        </member>
        <member name="T:PVPNetConnect.Fakes.ShimLoginQueueValue">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.LoginQueueValue</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimLoginQueueValue.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimLoginQueueValue.#ctor(PVPNetConnect.LoginQueueValue)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimLoginQueueValue.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimLoginQueueValue.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimLoginQueueValue.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimLoginQueueValue.ConstructorString">
            <summary>Establecer el shim de LoginQueueValue.LoginQueueValue(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimLoginQueueValue.ValueGet">
            <summary>Establecer el shim de LoginQueueValue.get_Value()</summary>
        </member>
        <member name="T:PVPNetConnect.Fakes.ShimLoginQueueValue.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimLoginQueueValue.AllInstances.ValueGet">
            <summary>Establecer el shim de LoginQueueValue.get_Value()</summary>
        </member>
        <member name="T:PVPNetConnect.Fakes.ShimPVPNetConnection">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.PVPNetConnection</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimPVPNetConnection.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimPVPNetConnection.#ctor(PVPNetConnect.PVPNetConnection)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimPVPNetConnection.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimPVPNetConnection.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AcceptAllCertificatesObjectX509CertificateX509ChainSslPolicyErrors">
            <summary>Establecer el shim de PVPNetConnection.AcceptAllCertificates(Object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AcceptInviteForMatchmakingGameString">
            <summary>Establecer el shim de PVPNetConnection.AcceptInviteForMatchmakingGame(String gameId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AcceptPoppedGameBoolean">
            <summary>Establecer el shim de PVPNetConnection.AcceptPoppedGame(Boolean accept)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AcceptTeamInviteTeamId">
            <summary>Establecer el shim de PVPNetConnection.AcceptTeamInvite(TeamId teamId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AcceptTradeStringInt32">
            <summary>Establecer el shim de PVPNetConnection.AcceptTrade(String SummonerInternalName, Int32 ChampionId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AttachTeamToQueueMatchMakerParams">
            <summary>Establecer el shim de PVPNetConnection.AttachTeamToQueue(MatchMakerParams matchMakerParams)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AttachToQueueMatchMakerParams">
            <summary>Establecer el shim de PVPNetConnection.AttachToQueue(MatchMakerParams matchMakerParams)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AttachToQueueMatchMakerParamsSearchingForMatchNotificationCallback">
            <summary>Establecer el shim de PVPNetConnection.AttachToQueue(MatchMakerParams matchMakerParams, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AttemptTradeStringInt32">
            <summary>Establecer el shim de PVPNetConnection.AttemptTrade(String SummonerInternalName, Int32 ChampionId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.BanChampionInt32">
            <summary>Establecer el shim de PVPNetConnection.BanChampion(Int32 championId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.BanObserverFromGameDoubleDouble">
            <summary>Establecer el shim de PVPNetConnection.BanObserverFromGame(Double gameId, Double accountId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.BanUserFromGameDoubleDouble">
            <summary>Establecer el shim de PVPNetConnection.BanUserFromGame(Double gameId, Double accountId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.BeginReceive">
            <summary>Establecer el shim de PVPNetConnection.BeginReceive()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.CallKudosString">
            <summary>Establecer el shim de PVPNetConnection.CallKudos(String arg0)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.CallKudosStringLcdsResponseStringCallback">
            <summary>Establecer el shim de PVPNetConnection.CallKudos(String arg0, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.CancelFromQueueIfPossibleDouble">
            <summary>Establecer el shim de PVPNetConnection.CancelFromQueueIfPossible(Double summonerId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.CancelFromQueueIfPossibleInt32">
            <summary>Establecer el shim de PVPNetConnection.CancelFromQueueIfPossible(Int32 arg0)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.CancelInt32">
            <summary>Establecer el shim de PVPNetConnection.Cancel(Int32 id)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.ChampionSelectCompleted">
            <summary>Establecer el shim de PVPNetConnection.ChampionSelectCompleted()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.ConnectStringStringRegionString">
            <summary>Establecer el shim de PVPNetConnection.Connect(String user, String password, Region region, String clientVersion)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.Constructor">
            <summary>Establecer el shim de PVPNetConnection.PVPNetConnection()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.CreateDefaultSummonerString">
            <summary>Establecer el shim de PVPNetConnection.CreateDefaultSummoner(String SummonerName)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.CreatePlayer">
            <summary>Establecer el shim de PVPNetConnection.CreatePlayer()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.CreatePlayerPlayerDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.CreatePlayer(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.CreatePracticeGamePracticeGameConfig">
            <summary>Establecer el shim de PVPNetConnection.CreatePracticeGame(PracticeGameConfig practiceGameConfig)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.CreatePracticeGamePracticeGameConfigGameDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.CreatePracticeGame(PracticeGameConfig practiceGameConfig, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.CreateTeamStringString">
            <summary>Establecer el shim de PVPNetConnection.CreateTeam(String teamName, String tagName)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.CreateTeamStringStringTeamDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.CreateTeam(String teamName, String tagName, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.DeclineObserverReconnect">
            <summary>Establecer el shim de PVPNetConnection.DeclineObserverReconnect()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.DeclineTeamInviteTeamId">
            <summary>Establecer el shim de PVPNetConnection.DeclineTeamInvite(TeamId teamId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.DeclineTrade">
            <summary>Establecer el shim de PVPNetConnection.DeclineTrade()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.DisbandTeamTeamId">
            <summary>Establecer el shim de PVPNetConnection.DisbandTeam(TeamId teamId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.Disconnect">
            <summary>Establecer el shim de PVPNetConnection.Disconnect()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.ErrorStringErrorType">
            <summary>Establecer el shim de PVPNetConnection.Error(String message, ErrorType type)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.ErrorStringStringErrorType">
            <summary>Establecer el shim de PVPNetConnection.Error(String message, String errorCode, ErrorType type)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.FindPlayerDouble">
            <summary>Establecer el shim de PVPNetConnection.FindPlayer(Double summonerId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.FindPlayerDoublePlayerDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.FindPlayer(Double summonerId, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.FindTeamByIdString">
            <summary>Establecer el shim de PVPNetConnection.FindTeamById(String TeamName)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.FindTeamByIdTeamId">
            <summary>Establecer el shim de PVPNetConnection.FindTeamById(TeamId teamId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.FindTeamByIdTeamIdTeamDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.FindTeamById(TeamId teamId, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.FindTeamByNameStringTeamDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.FindTeamByName(String TeamName, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetAggregatedStatsDoubleStringString">
            <summary>Establecer el shim de PVPNetConnection.GetAggregatedStats(Double summonerId, String gameMode, String season)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetAggregatedStatsDoubleStringStringAggregatedStatsCallback">
            <summary>Establecer el shim de PVPNetConnection.GetAggregatedStats(Double summonerId, String gameMode, String season, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetAllLeaguesForPlayerDouble">
            <summary>Establecer el shim de PVPNetConnection.GetAllLeaguesForPlayer(Double summonerId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetAllLeaguesForPlayerDoubleSummonerLeaguesDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.GetAllLeaguesForPlayer(Double summonerId, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetAllMyLeagues">
            <summary>Establecer el shim de PVPNetConnection.GetAllMyLeagues()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetAllMyLeaguesSummonerLeaguesDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.GetAllMyLeagues(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetAllPublicSummonerDataByAccountDouble">
            <summary>Establecer el shim de PVPNetConnection.GetAllPublicSummonerDataByAccount(Double accountId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetAllPublicSummonerDataByAccountDoubleAllPublicSummonerDataDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.GetAllPublicSummonerDataByAccount(Double accountId, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetAllSummonerDataByAccountDouble">
            <summary>Establecer el shim de PVPNetConnection.GetAllSummonerDataByAccount(Double accountId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetAllSummonerDataByAccountDoubleAllSummonerDataCallback">
            <summary>Establecer el shim de PVPNetConnection.GetAllSummonerDataByAccount(Double accountId, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetAuthKey">
            <summary>Establecer el shim de PVPNetConnection.GetAuthKey()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetAvailableChampions">
            <summary>Establecer el shim de PVPNetConnection.GetAvailableChampions()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetAvailableQueues">
            <summary>Establecer el shim de PVPNetConnection.GetAvailableQueues()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetChallengerLeagueString">
            <summary>Establecer el shim de PVPNetConnection.GetChallengerLeague(String queueType)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetChallengerLeagueStringLeagueListDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.GetChallengerLeague(String queueType, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetChampionsForBan">
            <summary>Establecer el shim de PVPNetConnection.GetChampionsForBan()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetErrorCodeTypedObject">
            <summary>Establecer el shim de PVPNetConnection.GetErrorCode(TypedObject message)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetErrorMessageTypedObject">
            <summary>Establecer el shim de PVPNetConnection.GetErrorMessage(TypedObject message)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetGameMapList">
            <summary>Establecer el shim de PVPNetConnection.GetGameMapList()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetGarenaToken">
            <summary>Establecer el shim de PVPNetConnection.GetGarenaToken()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetIpAddress">
            <summary>Establecer el shim de PVPNetConnection.GetIpAddress()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetLatestGameTimerStateDoubleStringInt32">
            <summary>Establecer el shim de PVPNetConnection.GetLatestGameTimerState(Double arg0, String arg1, Int32 arg2)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetLatestGameTimerStateDoubleStringInt32GameDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.GetLatestGameTimerState(Double arg0, String arg1, Int32 arg2, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetLeaguesForTeamString">
            <summary>Establecer el shim de PVPNetConnection.GetLeaguesForTeam(String teamName)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetLeaguesForTeamStringSummonerLeaguesDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.GetLeaguesForTeam(String teamName, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetLoginDataPacketForUser">
            <summary>Establecer el shim de PVPNetConnection.GetLoginDataPacketForUser()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetLoginDataPacketForUserLoginDataPacketCallback">
            <summary>Establecer el shim de PVPNetConnection.GetLoginDataPacketForUser(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetMasteryBookDouble">
            <summary>Establecer el shim de PVPNetConnection.GetMasteryBook(Double summonerId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetMasteryBookDoubleMasteryBookDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.GetMasteryBook(Double summonerId, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetMyLeaguePositions">
            <summary>Establecer el shim de PVPNetConnection.GetMyLeaguePositions()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetMyLeaguePositionsSummonerLeagueItemsDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.GetMyLeaguePositions(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetPointsBalance">
            <summary>Establecer el shim de PVPNetConnection.GetPointsBalance()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetPointsBalancePointSummaryCallback">
            <summary>Establecer el shim de PVPNetConnection.GetPointsBalance(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetPotentialTraders">
            <summary>Establecer el shim de PVPNetConnection.GetPotentialTraders()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetQueueInformationDouble">
            <summary>Establecer el shim de PVPNetConnection.GetQueueInformation(Double queueId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetRecentGamesDouble">
            <summary>Establecer el shim de PVPNetConnection.GetRecentGames(Double accountId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetRecentGamesDoubleRecentGamesCallback">
            <summary>Establecer el shim de PVPNetConnection.GetRecentGames(Double accountId, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetResultInt32">
            <summary>Establecer el shim de PVPNetConnection.GetResult(Int32 id)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetSpellBookDouble">
            <summary>Establecer el shim de PVPNetConnection.GetSpellBook(Double summonerId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetSpellBookDoubleSpellBookDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.GetSpellBook(Double summonerId, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetStoreUrl">
            <summary>Establecer el shim de PVPNetConnection.GetStoreUrl()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetSummonerByNameString">
            <summary>Establecer el shim de PVPNetConnection.GetSummonerByName(String summonerName)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetSummonerByNameStringPublicSummonerCallback">
            <summary>Establecer el shim de PVPNetConnection.GetSummonerByName(String summonerName, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetSummonerIconInventoryDouble">
            <summary>Establecer el shim de PVPNetConnection.GetSummonerIconInventory(Double summonerId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetSummonerIconsDoubleArray">
            <summary>Establecer el shim de PVPNetConnection.GetSummonerIcons(Double[] summonerIds)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetSummonerInternalNameByNameString">
            <summary>Establecer el shim de PVPNetConnection.GetSummonerInternalNameByName(String summonerName)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetSummonerNamesDoubleArray">
            <summary>Establecer el shim de PVPNetConnection.GetSummonerNames(Double[] summonerIds)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetSummonerRuneInventoryDouble">
            <summary>Establecer el shim de PVPNetConnection.GetSummonerRuneInventory(Double summonerId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetSummonerRuneInventoryDoubleSummonerRuneInventoryCallback">
            <summary>Establecer el shim de PVPNetConnection.GetSummonerRuneInventory(Double summonerId, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetSumonerActiveBoosts">
            <summary>Establecer el shim de PVPNetConnection.GetSumonerActiveBoosts()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetSumonerActiveBoostsSummonerActiveBoostsDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.GetSumonerActiveBoosts(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetTeamAggregatedStatsTeamId">
            <summary>Establecer el shim de PVPNetConnection.GetTeamAggregatedStats(TeamId arg0)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetTeamEndOfGameStatsTeamIdDouble">
            <summary>Establecer el shim de PVPNetConnection.GetTeamEndOfGameStats(TeamId arg0, Double arg1)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.GetTeamEndOfGameStatsTeamIdDoubleEndOfGameStatsCallback">
            <summary>Establecer el shim de PVPNetConnection.GetTeamEndOfGameStats(TeamId arg0, Double arg1, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.Handshake">
            <summary>Establecer el shim de PVPNetConnection.Handshake()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.HexToIntString">
            <summary>Establecer el shim de PVPNetConnection.HexToInt(String hex)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.InvokeStringObjectObject">
            <summary>Establecer el shim de PVPNetConnection.Invoke(String destination, Object operation, Object body)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.InvokeTypedObject">
            <summary>Establecer el shim de PVPNetConnection.Invoke(TypedObject packet)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.InvokeWithCallbackStringObjectObjectRiotGamesObject">
            <summary>Establecer el shim de PVPNetConnection.InvokeWithCallback(String destination, Object operation, Object body, RiotGamesObject cb)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.IsConnected">
            <summary>Establecer el shim de PVPNetConnection.IsConnected()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.IsLoggedIn">
            <summary>Establecer el shim de PVPNetConnection.IsLoggedIn()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.IsNameValidAndAvailableString">
            <summary>Establecer el shim de PVPNetConnection.IsNameValidAndAvailable(String teamName)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.IsTagValidAndAvailableString">
            <summary>Establecer el shim de PVPNetConnection.IsTagValidAndAvailable(String tagName)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.Join">
            <summary>Establecer el shim de PVPNetConnection.Join()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.JoinGameDouble">
            <summary>Establecer el shim de PVPNetConnection.JoinGame(Double gameId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.JoinGameDoubleString">
            <summary>Establecer el shim de PVPNetConnection.JoinGame(Double gameId, String password)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.JoinInt32">
            <summary>Establecer el shim de PVPNetConnection.Join(Int32 id)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.KickPlayerDoubleTeamId">
            <summary>Establecer el shim de PVPNetConnection.KickPlayer(Double summonerId, TeamId teamId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.KickPlayerDoubleTeamIdTeamDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.KickPlayer(Double summonerId, TeamId teamId, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.LeaveTeamInt32TeamId">
            <summary>Establecer el shim de PVPNetConnection.LeaveTeam(Int32 arg0, TeamId teamId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.ListAllPracticeGames">
            <summary>Establecer el shim de PVPNetConnection.ListAllPracticeGames()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.LoadPreferencesByKeyStringDoubleBoolean">
            <summary>Establecer el shim de PVPNetConnection.LoadPreferencesByKey(String arg0, Double arg1, Boolean arg2)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.Login">
            <summary>Establecer el shim de PVPNetConnection.Login()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.LoginAuthenticationCredentials">
            <summary>Establecer el shim de PVPNetConnection.Login(AuthenticationCredentials arg0)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.LoginAuthenticationCredentialsSessionCallback">
            <summary>Establecer el shim de PVPNetConnection.Login(AuthenticationCredentials arg0, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.MessageReceivedObject">
            <summary>Establecer el shim de PVPNetConnection.MessageReceived(Object messageBody)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.NextInvokeID">
            <summary>Establecer el shim de PVPNetConnection.NextInvokeID()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.ObserveGameDouble">
            <summary>Establecer el shim de PVPNetConnection.ObserveGame(Double gameId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.ObserveGameDoubleString">
            <summary>Establecer el shim de PVPNetConnection.ObserveGame(Double gameId, String password)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.OnConnectAddPVPNetConnectionOnConnectHandler">
            <summary>Establecer el shim de PVPNetConnection.add_OnConnect(OnConnectHandler value)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.OnConnectRemovePVPNetConnectionOnConnectHandler">
            <summary>Establecer el shim de PVPNetConnection.remove_OnConnect(OnConnectHandler value)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.OnDisconnectAddPVPNetConnectionOnDisconnectHandler">
            <summary>Establecer el shim de PVPNetConnection.add_OnDisconnect(OnDisconnectHandler value)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.OnDisconnectRemovePVPNetConnectionOnDisconnectHandler">
            <summary>Establecer el shim de PVPNetConnection.remove_OnDisconnect(OnDisconnectHandler value)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.OnErrorAddPVPNetConnectionOnErrorHandler">
            <summary>Establecer el shim de PVPNetConnection.add_OnError(OnErrorHandler value)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.OnErrorRemovePVPNetConnectionOnErrorHandler">
            <summary>Establecer el shim de PVPNetConnection.remove_OnError(OnErrorHandler value)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.OnLoginAddPVPNetConnectionOnLoginHandler">
            <summary>Establecer el shim de PVPNetConnection.add_OnLogin(OnLoginHandler value)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.OnLoginQueueUpdateAddPVPNetConnectionOnLoginQueueUpdateHandler">
            <summary>Establecer el shim de PVPNetConnection.add_OnLoginQueueUpdate(OnLoginQueueUpdateHandler value)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.OnLoginQueueUpdateRemovePVPNetConnectionOnLoginQueueUpdateHandler">
            <summary>Establecer el shim de PVPNetConnection.remove_OnLoginQueueUpdate(OnLoginQueueUpdateHandler value)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.OnLoginRemovePVPNetConnectionOnLoginHandler">
            <summary>Establecer el shim de PVPNetConnection.remove_OnLogin(OnLoginHandler value)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.OnMessageReceivedAddPVPNetConnectionOnMessageReceivedHandler">
            <summary>Establecer el shim de PVPNetConnection.add_OnMessageReceived(OnMessageReceivedHandler value)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.OnMessageReceivedRemovePVPNetConnectionOnMessageReceivedHandler">
            <summary>Establecer el shim de PVPNetConnection.remove_OnMessageReceived(OnMessageReceivedHandler value)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.PeekResultInt32">
            <summary>Establecer el shim de PVPNetConnection.PeekResult(Int32 id)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.PerformLCDSHeartBeatInt32StringInt32String">
            <summary>Establecer el shim de PVPNetConnection.PerformLCDSHeartBeat(Int32 arg0, String arg1, Int32 arg2, String arg3)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.PurgeFromQueues">
            <summary>Establecer el shim de PVPNetConnection.PurgeFromQueues()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.QuitGame">
            <summary>Establecer el shim de PVPNetConnection.QuitGame()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.RemoveBotChampionInt32BotParticipant">
            <summary>Establecer el shim de PVPNetConnection.RemoveBotChampion(Int32 arg0, BotParticipant arg1)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.RetrieveInProgressSpectatorGameInfoString">
            <summary>Establecer el shim de PVPNetConnection.RetrieveInProgressSpectatorGameInfo(String summonerName)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.RetrieveInProgressSpectatorGameInfoStringPlatformGameLifecycleDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.RetrieveInProgressSpectatorGameInfo(String summonerName, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.RetrievePlayerStatsByAccountIdDoubleString">
            <summary>Establecer el shim de PVPNetConnection.RetrievePlayerStatsByAccountId(Double accountId, String season)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.RetrievePlayerStatsByAccountIdDoubleStringPlayerLifetimeStatsCallback">
            <summary>Establecer el shim de PVPNetConnection.RetrievePlayerStatsByAccountId(Double accountId, String season, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.RetrieveTopPlayedChampionsDoubleString">
            <summary>Establecer el shim de PVPNetConnection.RetrieveTopPlayedChampions(Double accountId, String gameMode)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.SaveMasteryBookMasteryBookDTO">
            <summary>Establecer el shim de PVPNetConnection.SaveMasteryBook(MasteryBookDTO masteryBookPage)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.SavePreferencesObject">
            <summary>Establecer el shim de PVPNetConnection.SavePreferences(Object arg0)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.SaveSpellBookSpellBookDTO">
            <summary>Establecer el shim de PVPNetConnection.SaveSpellBook(SpellBookDTO Spellbook)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.SelectBotChampionInt32BotParticipant">
            <summary>Establecer el shim de PVPNetConnection.SelectBotChampion(Int32 arg0, BotParticipant arg1)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.SelectChampionInt32">
            <summary>Establecer el shim de PVPNetConnection.SelectChampion(Int32 championId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.SelectChampionSkinInt32Int32">
            <summary>Establecer el shim de PVPNetConnection.SelectChampionSkin(Int32 championId, Int32 skinId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.SelectDefaultSpellBookPageSpellBookPageDTO">
            <summary>Establecer el shim de PVPNetConnection.SelectDefaultSpellBookPage(SpellBookPageDTO spellBookPage)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.SelectDefaultSpellBookPageSpellBookPageDTOSpellBookPageDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.SelectDefaultSpellBookPage(SpellBookPageDTO spellBookPage, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.SelectSpellsInt32Int32">
            <summary>Establecer el shim de PVPNetConnection.SelectSpells(Int32 spellOneId, Int32 spellTwoId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.SendConnect">
            <summary>Establecer el shim de PVPNetConnection.SendConnect()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.SetClientReceivedGameMessageDoubleString">
            <summary>Establecer el shim de PVPNetConnection.SetClientReceivedGameMessage(Double gameId, String arg1)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.SetClientReceivedMaestroMessageDoubleString">
            <summary>Establecer el shim de PVPNetConnection.SetClientReceivedMaestroMessage(Double arg0, String arg1)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.SetPreferenceEnabledStringBoolean">
            <summary>Establecer el shim de PVPNetConnection.SetPreferenceEnabled(String arg0, Boolean arg1)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.SimulateBannedFromGame">
            <summary>Establecer el shim de PVPNetConnection.SimulateBannedFromGame()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.SimulateBroadcastNotificationStringString">
            <summary>Establecer el shim de PVPNetConnection.SimulateBroadcastNotification(String Message, String Severity)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.SimulateEndOfGame">
            <summary>Establecer el shim de PVPNetConnection.SimulateEndOfGame()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.SimulateEogPointChange">
            <summary>Establecer el shim de PVPNetConnection.SimulateEogPointChange()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.SimulatePlayerLeftQueue">
            <summary>Establecer el shim de PVPNetConnection.SimulatePlayerLeftQueue()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.SimulateSimpleDialogMessage">
            <summary>Establecer el shim de PVPNetConnection.SimulateSimpleDialogMessage()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.SimulateStartedGame">
            <summary>Establecer el shim de PVPNetConnection.SimulateStartedGame()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.SimulateStoreAccountBalanceInt32Int32">
            <summary>Establecer el shim de PVPNetConnection.SimulateStoreAccountBalance(Int32 ip, Int32 rp)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.StartChampionSelectionDoubleDouble">
            <summary>Establecer el shim de PVPNetConnection.StartChampionSelection(Double gameId, Double optomisticLock)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.StartChampionSelectionDoubleDoubleStartChampSelectDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.StartChampionSelection(Double gameId, Double optomisticLock, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.StartHeartbeat">
            <summary>Establecer el shim de PVPNetConnection.StartHeartbeat()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.SubscribeStringDouble">
            <summary>Establecer el shim de PVPNetConnection.Subscribe(String service, Double accountId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.SwitchObserverToPlayerDoubleInt32">
            <summary>Establecer el shim de PVPNetConnection.SwitchObserverToPlayer(Double gameId, Int32 team)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.SwitchPlayerToObserverDouble">
            <summary>Establecer el shim de PVPNetConnection.SwitchPlayerToObserver(Double gameId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.SwitchTeamsDouble">
            <summary>Establecer el shim de PVPNetConnection.SwitchTeams(Double gameId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.TeamChangeOwnerInt32TeamId">
            <summary>Establecer el shim de PVPNetConnection.TeamChangeOwner(Int32 arg0, TeamId teamId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.TeamInvitePlayerDoubleTeamId">
            <summary>Establecer el shim de PVPNetConnection.TeamInvitePlayer(Double summonerId, TeamId teamId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.TeamInvitePlayerDoubleTeamIdTeamDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.TeamInvitePlayer(Double summonerId, TeamId teamId, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.UpdateProfileIconIdInt32">
            <summary>Establecer el shim de PVPNetConnection.UpdateProfileIconId(Int32 iconId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.WrapBodyObjectStringObject">
            <summary>Establecer el shim de PVPNetConnection.WrapBody(Object body, String destination, Object operation)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection._BeginReceiveb__1de">
            <summary>Establecer el shim de PVPNetConnection.&lt;BeginReceive&gt;b__1de()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection._Disconnectb__1dc">
            <summary>Establecer el shim de PVPNetConnection.&lt;Disconnect&gt;b__1dc()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection._StartHeartbeatb__1d7">
            <summary>Establecer el shim de PVPNetConnection.&lt;StartHeartbeat&gt;b__1d7()</summary>
        </member>
        <member name="T:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.AcceptAllCertificatesObjectX509CertificateX509ChainSslPolicyErrors">
            <summary>Establecer el shim de PVPNetConnection.AcceptAllCertificates(Object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.AcceptInviteForMatchmakingGameString">
            <summary>Establecer el shim de PVPNetConnection.AcceptInviteForMatchmakingGame(String gameId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.AcceptPoppedGameBoolean">
            <summary>Establecer el shim de PVPNetConnection.AcceptPoppedGame(Boolean accept)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.AcceptTeamInviteTeamId">
            <summary>Establecer el shim de PVPNetConnection.AcceptTeamInvite(TeamId teamId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.AcceptTradeStringInt32">
            <summary>Establecer el shim de PVPNetConnection.AcceptTrade(String SummonerInternalName, Int32 ChampionId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.AttachTeamToQueueMatchMakerParams">
            <summary>Establecer el shim de PVPNetConnection.AttachTeamToQueue(MatchMakerParams matchMakerParams)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.AttachToQueueMatchMakerParams">
            <summary>Establecer el shim de PVPNetConnection.AttachToQueue(MatchMakerParams matchMakerParams)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.AttachToQueueMatchMakerParamsSearchingForMatchNotificationCallback">
            <summary>Establecer el shim de PVPNetConnection.AttachToQueue(MatchMakerParams matchMakerParams, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.AttemptTradeStringInt32">
            <summary>Establecer el shim de PVPNetConnection.AttemptTrade(String SummonerInternalName, Int32 ChampionId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.BanChampionInt32">
            <summary>Establecer el shim de PVPNetConnection.BanChampion(Int32 championId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.BanObserverFromGameDoubleDouble">
            <summary>Establecer el shim de PVPNetConnection.BanObserverFromGame(Double gameId, Double accountId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.BanUserFromGameDoubleDouble">
            <summary>Establecer el shim de PVPNetConnection.BanUserFromGame(Double gameId, Double accountId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.BeginReceive">
            <summary>Establecer el shim de PVPNetConnection.BeginReceive()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.CallKudosString">
            <summary>Establecer el shim de PVPNetConnection.CallKudos(String arg0)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.CallKudosStringLcdsResponseStringCallback">
            <summary>Establecer el shim de PVPNetConnection.CallKudos(String arg0, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.CancelFromQueueIfPossibleDouble">
            <summary>Establecer el shim de PVPNetConnection.CancelFromQueueIfPossible(Double summonerId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.CancelFromQueueIfPossibleInt32">
            <summary>Establecer el shim de PVPNetConnection.CancelFromQueueIfPossible(Int32 arg0)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.CancelInt32">
            <summary>Establecer el shim de PVPNetConnection.Cancel(Int32 id)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.ChampionSelectCompleted">
            <summary>Establecer el shim de PVPNetConnection.ChampionSelectCompleted()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.ConnectStringStringRegionString">
            <summary>Establecer el shim de PVPNetConnection.Connect(String user, String password, Region region, String clientVersion)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.CreateDefaultSummonerString">
            <summary>Establecer el shim de PVPNetConnection.CreateDefaultSummoner(String SummonerName)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.CreatePlayer">
            <summary>Establecer el shim de PVPNetConnection.CreatePlayer()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.CreatePlayerPlayerDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.CreatePlayer(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.CreatePracticeGamePracticeGameConfig">
            <summary>Establecer el shim de PVPNetConnection.CreatePracticeGame(PracticeGameConfig practiceGameConfig)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.CreatePracticeGamePracticeGameConfigGameDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.CreatePracticeGame(PracticeGameConfig practiceGameConfig, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.CreateTeamStringString">
            <summary>Establecer el shim de PVPNetConnection.CreateTeam(String teamName, String tagName)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.CreateTeamStringStringTeamDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.CreateTeam(String teamName, String tagName, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.DeclineObserverReconnect">
            <summary>Establecer el shim de PVPNetConnection.DeclineObserverReconnect()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.DeclineTeamInviteTeamId">
            <summary>Establecer el shim de PVPNetConnection.DeclineTeamInvite(TeamId teamId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.DeclineTrade">
            <summary>Establecer el shim de PVPNetConnection.DeclineTrade()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.DisbandTeamTeamId">
            <summary>Establecer el shim de PVPNetConnection.DisbandTeam(TeamId teamId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.Disconnect">
            <summary>Establecer el shim de PVPNetConnection.Disconnect()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.ErrorStringErrorType">
            <summary>Establecer el shim de PVPNetConnection.Error(String message, ErrorType type)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.ErrorStringStringErrorType">
            <summary>Establecer el shim de PVPNetConnection.Error(String message, String errorCode, ErrorType type)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.FindPlayerDouble">
            <summary>Establecer el shim de PVPNetConnection.FindPlayer(Double summonerId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.FindPlayerDoublePlayerDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.FindPlayer(Double summonerId, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.FindTeamByIdString">
            <summary>Establecer el shim de PVPNetConnection.FindTeamById(String TeamName)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.FindTeamByIdTeamId">
            <summary>Establecer el shim de PVPNetConnection.FindTeamById(TeamId teamId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.FindTeamByIdTeamIdTeamDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.FindTeamById(TeamId teamId, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.FindTeamByNameStringTeamDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.FindTeamByName(String TeamName, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetAggregatedStatsDoubleStringString">
            <summary>Establecer el shim de PVPNetConnection.GetAggregatedStats(Double summonerId, String gameMode, String season)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetAggregatedStatsDoubleStringStringAggregatedStatsCallback">
            <summary>Establecer el shim de PVPNetConnection.GetAggregatedStats(Double summonerId, String gameMode, String season, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetAllLeaguesForPlayerDouble">
            <summary>Establecer el shim de PVPNetConnection.GetAllLeaguesForPlayer(Double summonerId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetAllLeaguesForPlayerDoubleSummonerLeaguesDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.GetAllLeaguesForPlayer(Double summonerId, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetAllMyLeagues">
            <summary>Establecer el shim de PVPNetConnection.GetAllMyLeagues()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetAllMyLeaguesSummonerLeaguesDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.GetAllMyLeagues(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetAllPublicSummonerDataByAccountDouble">
            <summary>Establecer el shim de PVPNetConnection.GetAllPublicSummonerDataByAccount(Double accountId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetAllPublicSummonerDataByAccountDoubleAllPublicSummonerDataDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.GetAllPublicSummonerDataByAccount(Double accountId, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetAllSummonerDataByAccountDouble">
            <summary>Establecer el shim de PVPNetConnection.GetAllSummonerDataByAccount(Double accountId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetAllSummonerDataByAccountDoubleAllSummonerDataCallback">
            <summary>Establecer el shim de PVPNetConnection.GetAllSummonerDataByAccount(Double accountId, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetAuthKey">
            <summary>Establecer el shim de PVPNetConnection.GetAuthKey()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetAvailableChampions">
            <summary>Establecer el shim de PVPNetConnection.GetAvailableChampions()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetAvailableQueues">
            <summary>Establecer el shim de PVPNetConnection.GetAvailableQueues()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetChallengerLeagueString">
            <summary>Establecer el shim de PVPNetConnection.GetChallengerLeague(String queueType)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetChallengerLeagueStringLeagueListDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.GetChallengerLeague(String queueType, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetChampionsForBan">
            <summary>Establecer el shim de PVPNetConnection.GetChampionsForBan()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetErrorCodeTypedObject">
            <summary>Establecer el shim de PVPNetConnection.GetErrorCode(TypedObject message)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetErrorMessageTypedObject">
            <summary>Establecer el shim de PVPNetConnection.GetErrorMessage(TypedObject message)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetGameMapList">
            <summary>Establecer el shim de PVPNetConnection.GetGameMapList()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetGarenaToken">
            <summary>Establecer el shim de PVPNetConnection.GetGarenaToken()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetIpAddress">
            <summary>Establecer el shim de PVPNetConnection.GetIpAddress()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetLatestGameTimerStateDoubleStringInt32">
            <summary>Establecer el shim de PVPNetConnection.GetLatestGameTimerState(Double arg0, String arg1, Int32 arg2)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetLatestGameTimerStateDoubleStringInt32GameDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.GetLatestGameTimerState(Double arg0, String arg1, Int32 arg2, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetLeaguesForTeamString">
            <summary>Establecer el shim de PVPNetConnection.GetLeaguesForTeam(String teamName)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetLeaguesForTeamStringSummonerLeaguesDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.GetLeaguesForTeam(String teamName, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetLoginDataPacketForUser">
            <summary>Establecer el shim de PVPNetConnection.GetLoginDataPacketForUser()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetLoginDataPacketForUserLoginDataPacketCallback">
            <summary>Establecer el shim de PVPNetConnection.GetLoginDataPacketForUser(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetMasteryBookDouble">
            <summary>Establecer el shim de PVPNetConnection.GetMasteryBook(Double summonerId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetMasteryBookDoubleMasteryBookDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.GetMasteryBook(Double summonerId, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetMyLeaguePositions">
            <summary>Establecer el shim de PVPNetConnection.GetMyLeaguePositions()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetMyLeaguePositionsSummonerLeagueItemsDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.GetMyLeaguePositions(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetPointsBalance">
            <summary>Establecer el shim de PVPNetConnection.GetPointsBalance()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetPointsBalancePointSummaryCallback">
            <summary>Establecer el shim de PVPNetConnection.GetPointsBalance(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetPotentialTraders">
            <summary>Establecer el shim de PVPNetConnection.GetPotentialTraders()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetQueueInformationDouble">
            <summary>Establecer el shim de PVPNetConnection.GetQueueInformation(Double queueId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetRecentGamesDouble">
            <summary>Establecer el shim de PVPNetConnection.GetRecentGames(Double accountId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetRecentGamesDoubleRecentGamesCallback">
            <summary>Establecer el shim de PVPNetConnection.GetRecentGames(Double accountId, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetResultInt32">
            <summary>Establecer el shim de PVPNetConnection.GetResult(Int32 id)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetSpellBookDouble">
            <summary>Establecer el shim de PVPNetConnection.GetSpellBook(Double summonerId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetSpellBookDoubleSpellBookDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.GetSpellBook(Double summonerId, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetStoreUrl">
            <summary>Establecer el shim de PVPNetConnection.GetStoreUrl()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetSummonerByNameString">
            <summary>Establecer el shim de PVPNetConnection.GetSummonerByName(String summonerName)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetSummonerByNameStringPublicSummonerCallback">
            <summary>Establecer el shim de PVPNetConnection.GetSummonerByName(String summonerName, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetSummonerIconInventoryDouble">
            <summary>Establecer el shim de PVPNetConnection.GetSummonerIconInventory(Double summonerId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetSummonerIconsDoubleArray">
            <summary>Establecer el shim de PVPNetConnection.GetSummonerIcons(Double[] summonerIds)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetSummonerInternalNameByNameString">
            <summary>Establecer el shim de PVPNetConnection.GetSummonerInternalNameByName(String summonerName)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetSummonerNamesDoubleArray">
            <summary>Establecer el shim de PVPNetConnection.GetSummonerNames(Double[] summonerIds)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetSummonerRuneInventoryDouble">
            <summary>Establecer el shim de PVPNetConnection.GetSummonerRuneInventory(Double summonerId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetSummonerRuneInventoryDoubleSummonerRuneInventoryCallback">
            <summary>Establecer el shim de PVPNetConnection.GetSummonerRuneInventory(Double summonerId, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetSumonerActiveBoosts">
            <summary>Establecer el shim de PVPNetConnection.GetSumonerActiveBoosts()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetSumonerActiveBoostsSummonerActiveBoostsDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.GetSumonerActiveBoosts(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetTeamAggregatedStatsTeamId">
            <summary>Establecer el shim de PVPNetConnection.GetTeamAggregatedStats(TeamId arg0)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetTeamEndOfGameStatsTeamIdDouble">
            <summary>Establecer el shim de PVPNetConnection.GetTeamEndOfGameStats(TeamId arg0, Double arg1)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.GetTeamEndOfGameStatsTeamIdDoubleEndOfGameStatsCallback">
            <summary>Establecer el shim de PVPNetConnection.GetTeamEndOfGameStats(TeamId arg0, Double arg1, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.Handshake">
            <summary>Establecer el shim de PVPNetConnection.Handshake()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.HexToIntString">
            <summary>Establecer el shim de PVPNetConnection.HexToInt(String hex)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.InvokeStringObjectObject">
            <summary>Establecer el shim de PVPNetConnection.Invoke(String destination, Object operation, Object body)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.InvokeTypedObject">
            <summary>Establecer el shim de PVPNetConnection.Invoke(TypedObject packet)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.InvokeWithCallbackStringObjectObjectRiotGamesObject">
            <summary>Establecer el shim de PVPNetConnection.InvokeWithCallback(String destination, Object operation, Object body, RiotGamesObject cb)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.IsConnected">
            <summary>Establecer el shim de PVPNetConnection.IsConnected()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.IsLoggedIn">
            <summary>Establecer el shim de PVPNetConnection.IsLoggedIn()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.IsNameValidAndAvailableString">
            <summary>Establecer el shim de PVPNetConnection.IsNameValidAndAvailable(String teamName)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.IsTagValidAndAvailableString">
            <summary>Establecer el shim de PVPNetConnection.IsTagValidAndAvailable(String tagName)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.Join">
            <summary>Establecer el shim de PVPNetConnection.Join()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.JoinGameDouble">
            <summary>Establecer el shim de PVPNetConnection.JoinGame(Double gameId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.JoinGameDoubleString">
            <summary>Establecer el shim de PVPNetConnection.JoinGame(Double gameId, String password)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.JoinInt32">
            <summary>Establecer el shim de PVPNetConnection.Join(Int32 id)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.KickPlayerDoubleTeamId">
            <summary>Establecer el shim de PVPNetConnection.KickPlayer(Double summonerId, TeamId teamId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.KickPlayerDoubleTeamIdTeamDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.KickPlayer(Double summonerId, TeamId teamId, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.LeaveTeamInt32TeamId">
            <summary>Establecer el shim de PVPNetConnection.LeaveTeam(Int32 arg0, TeamId teamId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.ListAllPracticeGames">
            <summary>Establecer el shim de PVPNetConnection.ListAllPracticeGames()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.LoadPreferencesByKeyStringDoubleBoolean">
            <summary>Establecer el shim de PVPNetConnection.LoadPreferencesByKey(String arg0, Double arg1, Boolean arg2)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.Login">
            <summary>Establecer el shim de PVPNetConnection.Login()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.LoginAuthenticationCredentials">
            <summary>Establecer el shim de PVPNetConnection.Login(AuthenticationCredentials arg0)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.LoginAuthenticationCredentialsSessionCallback">
            <summary>Establecer el shim de PVPNetConnection.Login(AuthenticationCredentials arg0, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.MessageReceivedObject">
            <summary>Establecer el shim de PVPNetConnection.MessageReceived(Object messageBody)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.NextInvokeID">
            <summary>Establecer el shim de PVPNetConnection.NextInvokeID()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.ObserveGameDouble">
            <summary>Establecer el shim de PVPNetConnection.ObserveGame(Double gameId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.ObserveGameDoubleString">
            <summary>Establecer el shim de PVPNetConnection.ObserveGame(Double gameId, String password)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.OnConnectAddPVPNetConnectionOnConnectHandler">
            <summary>Establecer el shim de PVPNetConnection.add_OnConnect(OnConnectHandler value)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.OnConnectRemovePVPNetConnectionOnConnectHandler">
            <summary>Establecer el shim de PVPNetConnection.remove_OnConnect(OnConnectHandler value)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.OnDisconnectAddPVPNetConnectionOnDisconnectHandler">
            <summary>Establecer el shim de PVPNetConnection.add_OnDisconnect(OnDisconnectHandler value)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.OnDisconnectRemovePVPNetConnectionOnDisconnectHandler">
            <summary>Establecer el shim de PVPNetConnection.remove_OnDisconnect(OnDisconnectHandler value)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.OnErrorAddPVPNetConnectionOnErrorHandler">
            <summary>Establecer el shim de PVPNetConnection.add_OnError(OnErrorHandler value)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.OnErrorRemovePVPNetConnectionOnErrorHandler">
            <summary>Establecer el shim de PVPNetConnection.remove_OnError(OnErrorHandler value)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.OnLoginAddPVPNetConnectionOnLoginHandler">
            <summary>Establecer el shim de PVPNetConnection.add_OnLogin(OnLoginHandler value)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.OnLoginQueueUpdateAddPVPNetConnectionOnLoginQueueUpdateHandler">
            <summary>Establecer el shim de PVPNetConnection.add_OnLoginQueueUpdate(OnLoginQueueUpdateHandler value)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.OnLoginQueueUpdateRemovePVPNetConnectionOnLoginQueueUpdateHandler">
            <summary>Establecer el shim de PVPNetConnection.remove_OnLoginQueueUpdate(OnLoginQueueUpdateHandler value)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.OnLoginRemovePVPNetConnectionOnLoginHandler">
            <summary>Establecer el shim de PVPNetConnection.remove_OnLogin(OnLoginHandler value)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.OnMessageReceivedAddPVPNetConnectionOnMessageReceivedHandler">
            <summary>Establecer el shim de PVPNetConnection.add_OnMessageReceived(OnMessageReceivedHandler value)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.OnMessageReceivedRemovePVPNetConnectionOnMessageReceivedHandler">
            <summary>Establecer el shim de PVPNetConnection.remove_OnMessageReceived(OnMessageReceivedHandler value)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.PeekResultInt32">
            <summary>Establecer el shim de PVPNetConnection.PeekResult(Int32 id)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.PerformLCDSHeartBeatInt32StringInt32String">
            <summary>Establecer el shim de PVPNetConnection.PerformLCDSHeartBeat(Int32 arg0, String arg1, Int32 arg2, String arg3)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.PurgeFromQueues">
            <summary>Establecer el shim de PVPNetConnection.PurgeFromQueues()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.QuitGame">
            <summary>Establecer el shim de PVPNetConnection.QuitGame()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.RemoveBotChampionInt32BotParticipant">
            <summary>Establecer el shim de PVPNetConnection.RemoveBotChampion(Int32 arg0, BotParticipant arg1)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.RetrieveInProgressSpectatorGameInfoString">
            <summary>Establecer el shim de PVPNetConnection.RetrieveInProgressSpectatorGameInfo(String summonerName)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.RetrieveInProgressSpectatorGameInfoStringPlatformGameLifecycleDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.RetrieveInProgressSpectatorGameInfo(String summonerName, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.RetrievePlayerStatsByAccountIdDoubleString">
            <summary>Establecer el shim de PVPNetConnection.RetrievePlayerStatsByAccountId(Double accountId, String season)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.RetrievePlayerStatsByAccountIdDoubleStringPlayerLifetimeStatsCallback">
            <summary>Establecer el shim de PVPNetConnection.RetrievePlayerStatsByAccountId(Double accountId, String season, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.RetrieveTopPlayedChampionsDoubleString">
            <summary>Establecer el shim de PVPNetConnection.RetrieveTopPlayedChampions(Double accountId, String gameMode)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.SaveMasteryBookMasteryBookDTO">
            <summary>Establecer el shim de PVPNetConnection.SaveMasteryBook(MasteryBookDTO masteryBookPage)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.SavePreferencesObject">
            <summary>Establecer el shim de PVPNetConnection.SavePreferences(Object arg0)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.SaveSpellBookSpellBookDTO">
            <summary>Establecer el shim de PVPNetConnection.SaveSpellBook(SpellBookDTO Spellbook)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.SelectBotChampionInt32BotParticipant">
            <summary>Establecer el shim de PVPNetConnection.SelectBotChampion(Int32 arg0, BotParticipant arg1)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.SelectChampionInt32">
            <summary>Establecer el shim de PVPNetConnection.SelectChampion(Int32 championId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.SelectChampionSkinInt32Int32">
            <summary>Establecer el shim de PVPNetConnection.SelectChampionSkin(Int32 championId, Int32 skinId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.SelectDefaultSpellBookPageSpellBookPageDTO">
            <summary>Establecer el shim de PVPNetConnection.SelectDefaultSpellBookPage(SpellBookPageDTO spellBookPage)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.SelectDefaultSpellBookPageSpellBookPageDTOSpellBookPageDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.SelectDefaultSpellBookPage(SpellBookPageDTO spellBookPage, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.SelectSpellsInt32Int32">
            <summary>Establecer el shim de PVPNetConnection.SelectSpells(Int32 spellOneId, Int32 spellTwoId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.SendConnect">
            <summary>Establecer el shim de PVPNetConnection.SendConnect()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.SetClientReceivedGameMessageDoubleString">
            <summary>Establecer el shim de PVPNetConnection.SetClientReceivedGameMessage(Double gameId, String arg1)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.SetClientReceivedMaestroMessageDoubleString">
            <summary>Establecer el shim de PVPNetConnection.SetClientReceivedMaestroMessage(Double arg0, String arg1)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.SetPreferenceEnabledStringBoolean">
            <summary>Establecer el shim de PVPNetConnection.SetPreferenceEnabled(String arg0, Boolean arg1)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.SimulateBannedFromGame">
            <summary>Establecer el shim de PVPNetConnection.SimulateBannedFromGame()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.SimulateBroadcastNotificationStringString">
            <summary>Establecer el shim de PVPNetConnection.SimulateBroadcastNotification(String Message, String Severity)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.SimulateEndOfGame">
            <summary>Establecer el shim de PVPNetConnection.SimulateEndOfGame()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.SimulateEogPointChange">
            <summary>Establecer el shim de PVPNetConnection.SimulateEogPointChange()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.SimulatePlayerLeftQueue">
            <summary>Establecer el shim de PVPNetConnection.SimulatePlayerLeftQueue()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.SimulateSimpleDialogMessage">
            <summary>Establecer el shim de PVPNetConnection.SimulateSimpleDialogMessage()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.SimulateStartedGame">
            <summary>Establecer el shim de PVPNetConnection.SimulateStartedGame()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.SimulateStoreAccountBalanceInt32Int32">
            <summary>Establecer el shim de PVPNetConnection.SimulateStoreAccountBalance(Int32 ip, Int32 rp)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.StartChampionSelectionDoubleDouble">
            <summary>Establecer el shim de PVPNetConnection.StartChampionSelection(Double gameId, Double optomisticLock)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.StartChampionSelectionDoubleDoubleStartChampSelectDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.StartChampionSelection(Double gameId, Double optomisticLock, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.StartHeartbeat">
            <summary>Establecer el shim de PVPNetConnection.StartHeartbeat()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.SubscribeStringDouble">
            <summary>Establecer el shim de PVPNetConnection.Subscribe(String service, Double accountId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.SwitchObserverToPlayerDoubleInt32">
            <summary>Establecer el shim de PVPNetConnection.SwitchObserverToPlayer(Double gameId, Int32 team)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.SwitchPlayerToObserverDouble">
            <summary>Establecer el shim de PVPNetConnection.SwitchPlayerToObserver(Double gameId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.SwitchTeamsDouble">
            <summary>Establecer el shim de PVPNetConnection.SwitchTeams(Double gameId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.TeamChangeOwnerInt32TeamId">
            <summary>Establecer el shim de PVPNetConnection.TeamChangeOwner(Int32 arg0, TeamId teamId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.TeamInvitePlayerDoubleTeamId">
            <summary>Establecer el shim de PVPNetConnection.TeamInvitePlayer(Double summonerId, TeamId teamId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.TeamInvitePlayerDoubleTeamIdTeamDTOCallback">
            <summary>Establecer el shim de PVPNetConnection.TeamInvitePlayer(Double summonerId, TeamId teamId, Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.UpdateProfileIconIdInt32">
            <summary>Establecer el shim de PVPNetConnection.UpdateProfileIconId(Int32 iconId)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances.WrapBodyObjectStringObject">
            <summary>Establecer el shim de PVPNetConnection.WrapBody(Object body, String destination, Object operation)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances._BeginReceiveb__1de">
            <summary>Establecer el shim de PVPNetConnection.&lt;BeginReceive&gt;b__1de()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances._Disconnectb__1dc">
            <summary>Establecer el shim de PVPNetConnection.&lt;Disconnect&gt;b__1dc()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPVPNetConnection.AllInstances._StartHeartbeatb__1d7">
            <summary>Establecer el shim de PVPNetConnection.&lt;StartHeartbeat&gt;b__1d7()</summary>
        </member>
        <member name="T:PVPNetConnect.Fakes.ShimPacket">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.Packet</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimPacket.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimPacket.#ctor(PVPNetConnect.Packet)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimPacket.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimPacket.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPacket.AddByte">
            <summary>Establecer el shim de Packet.Add(Byte b)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPacket.AddToRawByte">
            <summary>Establecer el shim de Packet.AddToRaw(Byte b)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPacket.AddToRawByteArray">
            <summary>Establecer el shim de Packet.AddToRaw(Byte[] b)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPacket.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPacket.Constructor">
            <summary>Establecer el shim de Packet.Packet()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPacket.GetData">
            <summary>Establecer el shim de Packet.GetData()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPacket.GetPacketType">
            <summary>Establecer el shim de Packet.GetPacketType()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPacket.GetRawData">
            <summary>Establecer el shim de Packet.GetRawData()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPacket.GetSize">
            <summary>Establecer el shim de Packet.GetSize()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPacket.IsComplete">
            <summary>Establecer el shim de Packet.IsComplete()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPacket.SetSizeInt32">
            <summary>Establecer el shim de Packet.SetSize(Int32 size)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPacket.SetTypeInt32">
            <summary>Establecer el shim de Packet.SetType(Int32 type)</summary>
        </member>
        <member name="T:PVPNetConnect.Fakes.ShimPacket.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPacket.AllInstances.AddByte">
            <summary>Establecer el shim de Packet.Add(Byte b)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPacket.AllInstances.AddToRawByte">
            <summary>Establecer el shim de Packet.AddToRaw(Byte b)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPacket.AllInstances.AddToRawByteArray">
            <summary>Establecer el shim de Packet.AddToRaw(Byte[] b)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPacket.AllInstances.GetData">
            <summary>Establecer el shim de Packet.GetData()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPacket.AllInstances.GetPacketType">
            <summary>Establecer el shim de Packet.GetPacketType()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPacket.AllInstances.GetRawData">
            <summary>Establecer el shim de Packet.GetRawData()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPacket.AllInstances.GetSize">
            <summary>Establecer el shim de Packet.GetSize()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPacket.AllInstances.IsComplete">
            <summary>Establecer el shim de Packet.IsComplete()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPacket.AllInstances.SetSizeInt32">
            <summary>Establecer el shim de Packet.SetSize(Int32 size)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimPacket.AllInstances.SetTypeInt32">
            <summary>Establecer el shim de Packet.SetType(Int32 type)</summary>
        </member>
        <member name="T:PVPNetConnect.Fakes.ShimRTMPSDecoder">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RTMPSDecoder</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimRTMPSDecoder.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimRTMPSDecoder.#ctor(PVPNetConnect.RTMPSDecoder)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimRTMPSDecoder.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimRTMPSDecoder.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.ByteArrayToIDByteArray">
            <summary>Establecer el shim de RTMPSDecoder.ByteArrayToID(Byte[] data)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.Constructor">
            <summary>Establecer el shim de RTMPSDecoder.RTMPSDecoder()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.Decode">
            <summary>Establecer el shim de RTMPSDecoder.Decode()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.DecodeAMF0">
            <summary>Establecer el shim de RTMPSDecoder.DecodeAMF0()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.DecodeByteArray">
            <summary>Establecer el shim de RTMPSDecoder.Decode(Byte[] data)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.DecodeConnectByteArray">
            <summary>Establecer el shim de RTMPSDecoder.DecodeConnect(Byte[] data)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.DecodeInvokeByteArray">
            <summary>Establecer el shim de RTMPSDecoder.DecodeInvoke(Byte[] data)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.ReadArray">
            <summary>Establecer el shim de RTMPSDecoder.ReadArray()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.ReadByte">
            <summary>Establecer el shim de RTMPSDecoder.ReadByte()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.ReadByteArray">
            <summary>Establecer el shim de RTMPSDecoder.ReadByteArray()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.ReadByteAsInt">
            <summary>Establecer el shim de RTMPSDecoder.ReadByteAsInt()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.ReadBytesInt32">
            <summary>Establecer el shim de RTMPSDecoder.ReadBytes(Int32 length)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.ReadDSA">
            <summary>Establecer el shim de RTMPSDecoder.ReadDSA()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.ReadDSK">
            <summary>Establecer el shim de RTMPSDecoder.ReadDSK()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.ReadDate">
            <summary>Establecer el shim de RTMPSDecoder.ReadDate()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.ReadDouble">
            <summary>Establecer el shim de RTMPSDecoder.ReadDouble()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.ReadFlags">
            <summary>Establecer el shim de RTMPSDecoder.ReadFlags()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.ReadInt">
            <summary>Establecer el shim de RTMPSDecoder.ReadInt()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.ReadIntAMF0">
            <summary>Establecer el shim de RTMPSDecoder.ReadIntAMF0()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.ReadList">
            <summary>Establecer el shim de RTMPSDecoder.ReadList()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.ReadObject">
            <summary>Establecer el shim de RTMPSDecoder.ReadObject()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.ReadObjectAMF0">
            <summary>Establecer el shim de RTMPSDecoder.ReadObjectAMF0()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.ReadRemainingInt32Int32">
            <summary>Establecer el shim de RTMPSDecoder.ReadRemaining(Int32 flag, Int32 bits)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.ReadString">
            <summary>Establecer el shim de RTMPSDecoder.ReadString()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.ReadStringAMF0">
            <summary>Establecer el shim de RTMPSDecoder.ReadStringAMF0()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.ReadXML">
            <summary>Establecer el shim de RTMPSDecoder.ReadXML()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.ReadXMLString">
            <summary>Establecer el shim de RTMPSDecoder.ReadXMLString()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.Reset">
            <summary>Establecer el shim de RTMPSDecoder.Reset()</summary>
        </member>
        <member name="T:PVPNetConnect.Fakes.ShimRTMPSDecoder.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.AllInstances.ByteArrayToIDByteArray">
            <summary>Establecer el shim de RTMPSDecoder.ByteArrayToID(Byte[] data)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.AllInstances.Decode">
            <summary>Establecer el shim de RTMPSDecoder.Decode()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.AllInstances.DecodeAMF0">
            <summary>Establecer el shim de RTMPSDecoder.DecodeAMF0()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.AllInstances.DecodeByteArray">
            <summary>Establecer el shim de RTMPSDecoder.Decode(Byte[] data)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.AllInstances.DecodeConnectByteArray">
            <summary>Establecer el shim de RTMPSDecoder.DecodeConnect(Byte[] data)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.AllInstances.DecodeInvokeByteArray">
            <summary>Establecer el shim de RTMPSDecoder.DecodeInvoke(Byte[] data)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.AllInstances.ReadArray">
            <summary>Establecer el shim de RTMPSDecoder.ReadArray()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.AllInstances.ReadByte">
            <summary>Establecer el shim de RTMPSDecoder.ReadByte()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.AllInstances.ReadByteArray">
            <summary>Establecer el shim de RTMPSDecoder.ReadByteArray()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.AllInstances.ReadByteAsInt">
            <summary>Establecer el shim de RTMPSDecoder.ReadByteAsInt()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.AllInstances.ReadBytesInt32">
            <summary>Establecer el shim de RTMPSDecoder.ReadBytes(Int32 length)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.AllInstances.ReadDSA">
            <summary>Establecer el shim de RTMPSDecoder.ReadDSA()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.AllInstances.ReadDSK">
            <summary>Establecer el shim de RTMPSDecoder.ReadDSK()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.AllInstances.ReadDate">
            <summary>Establecer el shim de RTMPSDecoder.ReadDate()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.AllInstances.ReadDouble">
            <summary>Establecer el shim de RTMPSDecoder.ReadDouble()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.AllInstances.ReadFlags">
            <summary>Establecer el shim de RTMPSDecoder.ReadFlags()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.AllInstances.ReadInt">
            <summary>Establecer el shim de RTMPSDecoder.ReadInt()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.AllInstances.ReadIntAMF0">
            <summary>Establecer el shim de RTMPSDecoder.ReadIntAMF0()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.AllInstances.ReadList">
            <summary>Establecer el shim de RTMPSDecoder.ReadList()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.AllInstances.ReadObject">
            <summary>Establecer el shim de RTMPSDecoder.ReadObject()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.AllInstances.ReadObjectAMF0">
            <summary>Establecer el shim de RTMPSDecoder.ReadObjectAMF0()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.AllInstances.ReadRemainingInt32Int32">
            <summary>Establecer el shim de RTMPSDecoder.ReadRemaining(Int32 flag, Int32 bits)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.AllInstances.ReadString">
            <summary>Establecer el shim de RTMPSDecoder.ReadString()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.AllInstances.ReadStringAMF0">
            <summary>Establecer el shim de RTMPSDecoder.ReadStringAMF0()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.AllInstances.ReadXML">
            <summary>Establecer el shim de RTMPSDecoder.ReadXML()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.AllInstances.ReadXMLString">
            <summary>Establecer el shim de RTMPSDecoder.ReadXMLString()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSDecoder.AllInstances.Reset">
            <summary>Establecer el shim de RTMPSDecoder.Reset()</summary>
        </member>
        <member name="T:PVPNetConnect.Fakes.ShimRTMPSEncoder">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RTMPSEncoder</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimRTMPSEncoder.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimRTMPSEncoder.#ctor(PVPNetConnect.RTMPSEncoder)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimRTMPSEncoder.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimRTMPSEncoder.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSEncoder.AddHeadersByteArray">
            <summary>Establecer el shim de RTMPSEncoder.AddHeaders(Byte[] data)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSEncoder.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSEncoder.Constructor">
            <summary>Establecer el shim de RTMPSEncoder.RTMPSEncoder()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSEncoder.EncodeConnectDictionaryOfStringObject">
            <summary>Establecer el shim de RTMPSEncoder.EncodeConnect(Dictionary`2&lt;String,Object&gt; paramaters)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSEncoder.EncodeInvokeInt32Object">
            <summary>Establecer el shim de RTMPSEncoder.EncodeInvoke(Int32 id, Object data)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSEncoder.EncodeListOfByteObject">
            <summary>Establecer el shim de RTMPSEncoder.Encode(List`1&lt;Byte&gt; ret, Object obj)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSEncoder.EncodeObject">
            <summary>Establecer el shim de RTMPSEncoder.Encode(Object obj)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSEncoder.EncodeResultObjectStringInt32Int32">
            <summary>Establecer el shim de RTMPSEncoder.EncodeResult(Object data, String resultType, Int32 invokeId, Int32 version)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSEncoder.RandomUID">
            <summary>Establecer el shim de RTMPSEncoder.RandomUID()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSEncoder.WriteArrayListOfByteObjectArray">
            <summary>Establecer el shim de RTMPSEncoder.WriteArray(List`1&lt;Byte&gt; ret, Object[] val)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSEncoder.WriteAssociativeArrayListOfByteDictionaryOfStringObject">
            <summary>Establecer el shim de RTMPSEncoder.WriteAssociativeArray(List`1&lt;Byte&gt; ret, Dictionary`2&lt;String,Object&gt; val)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSEncoder.WriteByteArrayListOfByteByteArray">
            <summary>Establecer el shim de RTMPSEncoder.WriteByteArray(List`1&lt;Byte&gt; ret, Byte[] val)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSEncoder.WriteDateListOfByteDateTime">
            <summary>Establecer el shim de RTMPSEncoder.WriteDate(List`1&lt;Byte&gt; ret, DateTime val)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSEncoder.WriteDoubleListOfByteDouble">
            <summary>Establecer el shim de RTMPSEncoder.WriteDouble(List`1&lt;Byte&gt; ret, Double val)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSEncoder.WriteIntAMF0ListOfByteInt32">
            <summary>Establecer el shim de RTMPSEncoder.WriteIntAMF0(List`1&lt;Byte&gt; ret, Int32 val)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSEncoder.WriteIntListOfByteInt32">
            <summary>Establecer el shim de RTMPSEncoder.WriteInt(List`1&lt;Byte&gt; ret, Int32 val)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSEncoder.WriteObjectListOfByteTypedObject">
            <summary>Establecer el shim de RTMPSEncoder.WriteObject(List`1&lt;Byte&gt; ret, TypedObject val)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSEncoder.WriteStringAMF0ListOfByteString">
            <summary>Establecer el shim de RTMPSEncoder.WriteStringAMF0(List`1&lt;Byte&gt; ret, String val)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSEncoder.WriteStringListOfByteString">
            <summary>Establecer el shim de RTMPSEncoder.WriteString(List`1&lt;Byte&gt; ret, String val)</summary>
        </member>
        <member name="T:PVPNetConnect.Fakes.ShimRTMPSEncoder.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSEncoder.AllInstances.AddHeadersByteArray">
            <summary>Establecer el shim de RTMPSEncoder.AddHeaders(Byte[] data)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSEncoder.AllInstances.EncodeConnectDictionaryOfStringObject">
            <summary>Establecer el shim de RTMPSEncoder.EncodeConnect(Dictionary`2&lt;String,Object&gt; paramaters)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSEncoder.AllInstances.EncodeInvokeInt32Object">
            <summary>Establecer el shim de RTMPSEncoder.EncodeInvoke(Int32 id, Object data)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSEncoder.AllInstances.EncodeListOfByteObject">
            <summary>Establecer el shim de RTMPSEncoder.Encode(List`1&lt;Byte&gt; ret, Object obj)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSEncoder.AllInstances.EncodeObject">
            <summary>Establecer el shim de RTMPSEncoder.Encode(Object obj)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSEncoder.AllInstances.EncodeResultObjectStringInt32Int32">
            <summary>Establecer el shim de RTMPSEncoder.EncodeResult(Object data, String resultType, Int32 invokeId, Int32 version)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSEncoder.AllInstances.WriteArrayListOfByteObjectArray">
            <summary>Establecer el shim de RTMPSEncoder.WriteArray(List`1&lt;Byte&gt; ret, Object[] val)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSEncoder.AllInstances.WriteAssociativeArrayListOfByteDictionaryOfStringObject">
            <summary>Establecer el shim de RTMPSEncoder.WriteAssociativeArray(List`1&lt;Byte&gt; ret, Dictionary`2&lt;String,Object&gt; val)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSEncoder.AllInstances.WriteByteArrayListOfByteByteArray">
            <summary>Establecer el shim de RTMPSEncoder.WriteByteArray(List`1&lt;Byte&gt; ret, Byte[] val)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSEncoder.AllInstances.WriteDateListOfByteDateTime">
            <summary>Establecer el shim de RTMPSEncoder.WriteDate(List`1&lt;Byte&gt; ret, DateTime val)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSEncoder.AllInstances.WriteDoubleListOfByteDouble">
            <summary>Establecer el shim de RTMPSEncoder.WriteDouble(List`1&lt;Byte&gt; ret, Double val)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSEncoder.AllInstances.WriteIntAMF0ListOfByteInt32">
            <summary>Establecer el shim de RTMPSEncoder.WriteIntAMF0(List`1&lt;Byte&gt; ret, Int32 val)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSEncoder.AllInstances.WriteIntListOfByteInt32">
            <summary>Establecer el shim de RTMPSEncoder.WriteInt(List`1&lt;Byte&gt; ret, Int32 val)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSEncoder.AllInstances.WriteObjectListOfByteTypedObject">
            <summary>Establecer el shim de RTMPSEncoder.WriteObject(List`1&lt;Byte&gt; ret, TypedObject val)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSEncoder.AllInstances.WriteStringAMF0ListOfByteString">
            <summary>Establecer el shim de RTMPSEncoder.WriteStringAMF0(List`1&lt;Byte&gt; ret, String val)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRTMPSEncoder.AllInstances.WriteStringListOfByteString">
            <summary>Establecer el shim de RTMPSEncoder.WriteString(List`1&lt;Byte&gt; ret, String val)</summary>
        </member>
        <member name="T:PVPNetConnect.Fakes.ShimRegionInfo">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RegionInfo</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimRegionInfo.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimRegionInfo.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimRegionInfo.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRegionInfo.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRegionInfo.GetLocaleValueEnum">
            <summary>Establecer el shim de RegionInfo.GetLocaleValue(Enum value)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRegionInfo.GetLoginQueueValueEnum">
            <summary>Establecer el shim de RegionInfo.GetLoginQueueValue(Enum value)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRegionInfo.GetServerValueEnum">
            <summary>Establecer el shim de RegionInfo.GetServerValue(Enum value)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimRegionInfo.GetUseGarenaValueEnum">
            <summary>Establecer el shim de RegionInfo.GetUseGarenaValue(Enum value)</summary>
        </member>
        <member name="T:PVPNetConnect.Fakes.ShimServerValue">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.ServerValue</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimServerValue.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimServerValue.#ctor(PVPNetConnect.ServerValue)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimServerValue.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimServerValue.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimServerValue.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimServerValue.ConstructorString">
            <summary>Establecer el shim de ServerValue.ServerValue(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimServerValue.ValueGet">
            <summary>Establecer el shim de ServerValue.get_Value()</summary>
        </member>
        <member name="T:PVPNetConnect.Fakes.ShimServerValue.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimServerValue.AllInstances.ValueGet">
            <summary>Establecer el shim de ServerValue.get_Value()</summary>
        </member>
        <member name="T:PVPNetConnect.Fakes.ShimStringEnum">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.StringEnum</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimStringEnum.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimStringEnum.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimStringEnum.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimStringEnum.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimStringEnum.GetStringValueEnum">
            <summary>Establecer el shim de StringEnum.GetStringValue(Enum value)</summary>
        </member>
        <member name="T:PVPNetConnect.Fakes.ShimStringValue">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.StringValue</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimStringValue.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimStringValue.#ctor(PVPNetConnect.StringValue)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimStringValue.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimStringValue.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimStringValue.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimStringValue.ConstructorString">
            <summary>Establecer el shim de StringValue.StringValue(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimStringValue.ValueGet">
            <summary>Establecer el shim de StringValue.get_Value()</summary>
        </member>
        <member name="T:PVPNetConnect.Fakes.ShimStringValue.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimStringValue.AllInstances.ValueGet">
            <summary>Establecer el shim de StringValue.get_Value()</summary>
        </member>
        <member name="T:PVPNetConnect.Fakes.ShimTypedObject">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.TypedObject</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimTypedObject.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimTypedObject.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimTypedObject.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimTypedObject.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimTypedObject.Bind(System.Collections.ICollection)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimTypedObject.Bind(System.Collections.IDictionary)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimTypedObject.Bind(System.Collections.IEnumerable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimTypedObject.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimTypedObject.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimTypedObject.Bind(System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimTypedObject.Bind(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimTypedObject.Bind(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimTypedObject.Bind(System.Runtime.Serialization.IDeserializationCallback)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimTypedObject.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimTypedObject.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimTypedObject.Constructor">
            <summary>Establecer el shim de TypedObject.TypedObject()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimTypedObject.ConstructorString">
            <summary>Establecer el shim de TypedObject.TypedObject(String type)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimTypedObject.GetArrayString">
            <summary>Establecer el shim de TypedObject.GetArray(String key)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimTypedObject.GetBoolString">
            <summary>Establecer el shim de TypedObject.GetBool(String key)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimTypedObject.GetDoubleString">
            <summary>Establecer el shim de TypedObject.GetDouble(String key)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimTypedObject.GetIntString">
            <summary>Establecer el shim de TypedObject.GetInt(String key)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimTypedObject.GetStringString">
            <summary>Establecer el shim de TypedObject.GetString(String key)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimTypedObject.GetTOString">
            <summary>Establecer el shim de TypedObject.GetTO(String key)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimTypedObject.MakeArrayCollectionObjectArray">
            <summary>Establecer el shim de TypedObject.MakeArrayCollection(Object[] data)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimTypedObject.StaticConstructor">
            <summary>Establecer el shim de TypedObject.TypedObject()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimTypedObject.ToString">
            <summary>Establecer el shim de TypedObject.ToString()</summary>
        </member>
        <member name="T:PVPNetConnect.Fakes.ShimTypedObject.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimTypedObject.AllInstances.GetArrayString">
            <summary>Establecer el shim de TypedObject.GetArray(String key)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimTypedObject.AllInstances.GetBoolString">
            <summary>Establecer el shim de TypedObject.GetBool(String key)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimTypedObject.AllInstances.GetDoubleString">
            <summary>Establecer el shim de TypedObject.GetDouble(String key)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimTypedObject.AllInstances.GetIntString">
            <summary>Establecer el shim de TypedObject.GetInt(String key)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimTypedObject.AllInstances.GetStringString">
            <summary>Establecer el shim de TypedObject.GetString(String key)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimTypedObject.AllInstances.GetTOString">
            <summary>Establecer el shim de TypedObject.GetTO(String key)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimTypedObject.AllInstances.ToString01">
            <summary>Establecer el shim de TypedObject.ToString()</summary>
        </member>
        <member name="T:PVPNetConnect.Fakes.ShimUseGarenaValue">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.UseGarenaValue</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimUseGarenaValue.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimUseGarenaValue.#ctor(PVPNetConnect.UseGarenaValue)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimUseGarenaValue.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.ShimUseGarenaValue.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimUseGarenaValue.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimUseGarenaValue.ConstructorBoolean">
            <summary>Establecer el shim de UseGarenaValue.UseGarenaValue(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimUseGarenaValue.ValueGet">
            <summary>Establecer el shim de UseGarenaValue.get_Value()</summary>
        </member>
        <member name="T:PVPNetConnect.Fakes.ShimUseGarenaValue.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.ShimUseGarenaValue.AllInstances.ValueGet">
            <summary>Establecer el shim de UseGarenaValue.get_Value()</summary>
        </member>
        <member name="T:PVPNetConnect.Fakes.StubClassDefinition">
            <summary>Tipo stub de PVPNetConnect.ClassDefinition</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubClassDefinition.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubClassDefinition.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubClassDefinition</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubClassDefinition.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubClassDefinition.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubClassDefinition.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:PVPNetConnect.Fakes.StubError">
            <summary>Tipo stub de PVPNetConnect.Error</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubError.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubError.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubError</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubError.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubError.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubError.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:PVPNetConnect.Fakes.StubLocaleValue">
            <summary>Tipo stub de PVPNetConnect.LocaleValue</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubLocaleValue.#ctor(System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubLocaleValue.Equals(System.Object)">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:PVPNetConnect.Fakes.StubLocaleValue.EqualsObject">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubLocaleValue.GetHashCode">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="F:PVPNetConnect.Fakes.StubLocaleValue.GetHashCode01">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubLocaleValue.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubLocaleValue</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubLocaleValue.IsDefaultAttribute">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:PVPNetConnect.Fakes.StubLocaleValue.IsDefaultAttribute01">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubLocaleValue.Match(System.Object)">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:PVPNetConnect.Fakes.StubLocaleValue.MatchObject">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:PVPNetConnect.Fakes.StubLocaleValue.TypeIdGet">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubLocaleValue.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubLocaleValue.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubLocaleValue.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubLocaleValue.TypeId">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="T:PVPNetConnect.Fakes.StubLoginQueueValue">
            <summary>Tipo stub de PVPNetConnect.LoginQueueValue</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubLoginQueueValue.#ctor(System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubLoginQueueValue.Equals(System.Object)">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:PVPNetConnect.Fakes.StubLoginQueueValue.EqualsObject">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubLoginQueueValue.GetHashCode">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="F:PVPNetConnect.Fakes.StubLoginQueueValue.GetHashCode01">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubLoginQueueValue.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubLoginQueueValue</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubLoginQueueValue.IsDefaultAttribute">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:PVPNetConnect.Fakes.StubLoginQueueValue.IsDefaultAttribute01">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubLoginQueueValue.Match(System.Object)">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:PVPNetConnect.Fakes.StubLoginQueueValue.MatchObject">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:PVPNetConnect.Fakes.StubLoginQueueValue.TypeIdGet">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubLoginQueueValue.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubLoginQueueValue.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubLoginQueueValue.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubLoginQueueValue.TypeId">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="T:PVPNetConnect.Fakes.StubPVPNetConnection">
            <summary>Tipo stub de PVPNetConnect.PVPNetConnection</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubPVPNetConnection.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubPVPNetConnection.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPVPNetConnection</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubPVPNetConnection.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubPVPNetConnection.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubPVPNetConnection.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:PVPNetConnect.Fakes.StubPacket">
            <summary>Tipo stub de PVPNetConnect.Packet</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubPacket.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubPacket.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPacket</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubPacket.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubPacket.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubPacket.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:PVPNetConnect.Fakes.StubRTMPSDecoder">
            <summary>Tipo stub de PVPNetConnect.RTMPSDecoder</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubRTMPSDecoder.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubRTMPSDecoder.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubRTMPSDecoder</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubRTMPSDecoder.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubRTMPSDecoder.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubRTMPSDecoder.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:PVPNetConnect.Fakes.StubRTMPSEncoder">
            <summary>Tipo stub de PVPNetConnect.RTMPSEncoder</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubRTMPSEncoder.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubRTMPSEncoder.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubRTMPSEncoder</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubRTMPSEncoder.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubRTMPSEncoder.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubRTMPSEncoder.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:PVPNetConnect.Fakes.StubServerValue">
            <summary>Tipo stub de PVPNetConnect.ServerValue</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubServerValue.#ctor(System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubServerValue.Equals(System.Object)">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:PVPNetConnect.Fakes.StubServerValue.EqualsObject">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubServerValue.GetHashCode">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="F:PVPNetConnect.Fakes.StubServerValue.GetHashCode01">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubServerValue.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubServerValue</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubServerValue.IsDefaultAttribute">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:PVPNetConnect.Fakes.StubServerValue.IsDefaultAttribute01">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubServerValue.Match(System.Object)">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:PVPNetConnect.Fakes.StubServerValue.MatchObject">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:PVPNetConnect.Fakes.StubServerValue.TypeIdGet">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubServerValue.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubServerValue.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubServerValue.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubServerValue.TypeId">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="T:PVPNetConnect.Fakes.StubStringValue">
            <summary>Tipo stub de PVPNetConnect.StringValue</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubStringValue.#ctor(System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubStringValue.Equals(System.Object)">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:PVPNetConnect.Fakes.StubStringValue.EqualsObject">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubStringValue.GetHashCode">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="F:PVPNetConnect.Fakes.StubStringValue.GetHashCode01">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubStringValue.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubStringValue</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubStringValue.IsDefaultAttribute">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:PVPNetConnect.Fakes.StubStringValue.IsDefaultAttribute01">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubStringValue.Match(System.Object)">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:PVPNetConnect.Fakes.StubStringValue.MatchObject">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:PVPNetConnect.Fakes.StubStringValue.TypeIdGet">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubStringValue.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubStringValue.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubStringValue.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubStringValue.TypeId">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="T:PVPNetConnect.Fakes.StubTypedObject">
            <summary>Tipo stub de PVPNetConnect.TypedObject</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubTypedObject.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubTypedObject.#ctor(System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubTypedObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Establecer el stub de Dictionary`2.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:PVPNetConnect.Fakes.StubTypedObject.GetObjectDataSerializationInfoStreamingContext">
            <summary>Establecer el stub de Dictionary`2.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubTypedObject.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubTypedObject</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubTypedObject.OnDeserialization(System.Object)">
            <summary>Establecer el stub de Dictionary`2.OnDeserialization(Object sender)</summary>
        </member>
        <member name="F:PVPNetConnect.Fakes.StubTypedObject.OnDeserializationObject">
            <summary>Establecer el stub de Dictionary`2.OnDeserialization(Object sender)</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubTypedObject.ToString">
            <summary>Establecer el stub de TypedObject.ToString()</summary>
        </member>
        <member name="F:PVPNetConnect.Fakes.StubTypedObject.ToString01">
            <summary>Establecer el stub de TypedObject.ToString()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubTypedObject.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubTypedObject.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubTypedObject.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:PVPNetConnect.Fakes.StubUseGarenaValue">
            <summary>Tipo stub de PVPNetConnect.UseGarenaValue</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubUseGarenaValue.#ctor(System.Boolean)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubUseGarenaValue.Equals(System.Object)">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:PVPNetConnect.Fakes.StubUseGarenaValue.EqualsObject">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubUseGarenaValue.GetHashCode">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="F:PVPNetConnect.Fakes.StubUseGarenaValue.GetHashCode01">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubUseGarenaValue.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubUseGarenaValue</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubUseGarenaValue.IsDefaultAttribute">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:PVPNetConnect.Fakes.StubUseGarenaValue.IsDefaultAttribute01">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:PVPNetConnect.Fakes.StubUseGarenaValue.Match(System.Object)">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:PVPNetConnect.Fakes.StubUseGarenaValue.MatchObject">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:PVPNetConnect.Fakes.StubUseGarenaValue.TypeIdGet">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubUseGarenaValue.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubUseGarenaValue.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubUseGarenaValue.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.Fakes.StubUseGarenaValue.TypeId">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Fakes.ShimInternalNameAttribute">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.InternalNameAttribute</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Fakes.ShimInternalNameAttribute.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Fakes.ShimInternalNameAttribute.#ctor(PVPNetConnect.RiotObjects.InternalNameAttribute)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Fakes.ShimInternalNameAttribute.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Fakes.ShimInternalNameAttribute.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Fakes.ShimInternalNameAttribute.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Fakes.ShimInternalNameAttribute.ConstructorString">
            <summary>Establecer el shim de InternalNameAttribute.InternalNameAttribute(String name)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Fakes.ShimInternalNameAttribute.NameGet">
            <summary>Establecer el shim de InternalNameAttribute.get_Name()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Fakes.ShimInternalNameAttribute.NameSetString">
            <summary>Establecer el shim de InternalNameAttribute.set_Name(String value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Fakes.ShimInternalNameAttribute.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Fakes.ShimInternalNameAttribute.AllInstances.NameGet">
            <summary>Establecer el shim de InternalNameAttribute.get_Name()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Fakes.ShimInternalNameAttribute.AllInstances.NameSetString">
            <summary>Establecer el shim de InternalNameAttribute.set_Name(String value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Fakes.ShimRiotGamesObject">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.RiotGamesObject</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Fakes.ShimRiotGamesObject.#ctor(PVPNetConnect.RiotObjects.RiotGamesObject)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Fakes.ShimRiotGamesObject.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Fakes.ShimRiotGamesObject.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Fakes.ShimRiotGamesObject.SetFieldsOf1M0TypedObject``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,PVPNetConnect.TypedObject})">
            <summary>Establecer el shim de RiotGamesObject.SetFields(!!0 obj, TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Fakes.ShimRiotGamesObject.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Fakes.ShimRiotGamesObject.Constructor">
            <summary>Establecer el shim de RiotGamesObject.RiotGamesObject()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Fakes.ShimRiotGamesObject.DataVersionGet">
            <summary>Establecer el shim de RiotGamesObject.get_DataVersion()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Fakes.ShimRiotGamesObject.DataVersionSetInt32">
            <summary>Establecer el shim de RiotGamesObject.set_DataVersion(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Fakes.ShimRiotGamesObject.DoCallbackTypedObject">
            <summary>Establecer el shim de RiotGamesObject.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Fakes.ShimRiotGamesObject.FutureDataGet">
            <summary>Establecer el shim de RiotGamesObject.get_FutureData()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Fakes.ShimRiotGamesObject.FutureDataSetInt32">
            <summary>Establecer el shim de RiotGamesObject.set_FutureData(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Fakes.ShimRiotGamesObject.GetBaseTypedObject">
            <summary>Establecer el shim de RiotGamesObject.GetBaseTypedObject()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Fakes.ShimRiotGamesObject.TypeNameGet">
            <summary>Establecer el shim de RiotGamesObject.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Fakes.ShimRiotGamesObject.TypeNameSetString">
            <summary>Establecer el shim de RiotGamesObject.set_TypeName(String value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Fakes.ShimRiotGamesObject.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Fakes.ShimRiotGamesObject.AllInstances.SetFieldsOf1M0TypedObject``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{PVPNetConnect.RiotObjects.RiotGamesObject,``0,PVPNetConnect.TypedObject})">
            <summary>Establecer el shim de RiotGamesObject.SetFields(!!0 obj, TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Fakes.ShimRiotGamesObject.AllInstances.DataVersionGet">
            <summary>Establecer el shim de RiotGamesObject.get_DataVersion()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Fakes.ShimRiotGamesObject.AllInstances.DataVersionSetInt32">
            <summary>Establecer el shim de RiotGamesObject.set_DataVersion(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Fakes.ShimRiotGamesObject.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de RiotGamesObject.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Fakes.ShimRiotGamesObject.AllInstances.FutureDataGet">
            <summary>Establecer el shim de RiotGamesObject.get_FutureData()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Fakes.ShimRiotGamesObject.AllInstances.FutureDataSetInt32">
            <summary>Establecer el shim de RiotGamesObject.set_FutureData(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Fakes.ShimRiotGamesObject.AllInstances.GetBaseTypedObject">
            <summary>Establecer el shim de RiotGamesObject.GetBaseTypedObject()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Fakes.ShimRiotGamesObject.AllInstances.TypeNameGet">
            <summary>Establecer el shim de RiotGamesObject.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Fakes.ShimRiotGamesObject.AllInstances.TypeNameSetString">
            <summary>Establecer el shim de RiotGamesObject.set_TypeName(String value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Fakes.StubInternalNameAttribute">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.InternalNameAttribute</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Fakes.StubInternalNameAttribute.#ctor(System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Fakes.StubInternalNameAttribute.Equals(System.Object)">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Fakes.StubInternalNameAttribute.EqualsObject">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Fakes.StubInternalNameAttribute.GetHashCode">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Fakes.StubInternalNameAttribute.GetHashCode01">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Fakes.StubInternalNameAttribute.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubInternalNameAttribute</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Fakes.StubInternalNameAttribute.IsDefaultAttribute">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Fakes.StubInternalNameAttribute.IsDefaultAttribute01">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Fakes.StubInternalNameAttribute.Match(System.Object)">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Fakes.StubInternalNameAttribute.MatchObject">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Fakes.StubInternalNameAttribute.TypeIdGet">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Fakes.StubInternalNameAttribute.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Fakes.StubInternalNameAttribute.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Fakes.StubInternalNameAttribute.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Fakes.StubInternalNameAttribute.TypeId">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Fakes.StubRiotGamesObject">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.RiotGamesObject</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Fakes.StubRiotGamesObject.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Fakes.StubRiotGamesObject.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de RiotGamesObject.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Fakes.StubRiotGamesObject.DoCallbackTypedObject">
            <summary>Establecer el stub de RiotGamesObject.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Fakes.StubRiotGamesObject.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubRiotGamesObject</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Fakes.StubRiotGamesObject.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Fakes.StubRiotGamesObject.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Fakes.StubRiotGamesObject.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Kudos.Dto.Fakes.ShimPendingKudosDTO">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Kudos.Dto.PendingKudosDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Kudos.Dto.Fakes.ShimPendingKudosDTO.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Kudos.Dto.Fakes.ShimPendingKudosDTO.#ctor(PVPNetConnect.RiotObjects.Kudos.Dto.PendingKudosDTO)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Kudos.Dto.Fakes.ShimPendingKudosDTO.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Kudos.Dto.Fakes.ShimPendingKudosDTO.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Kudos.Dto.Fakes.ShimPendingKudosDTO.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Kudos.Dto.Fakes.ShimPendingKudosDTO.Constructor">
            <summary>Establecer el shim de PendingKudosDTO.PendingKudosDTO()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Kudos.Dto.Fakes.ShimPendingKudosDTO.ConstructorPendingKudosDTOCallback">
            <summary>Establecer el shim de PendingKudosDTO.PendingKudosDTO(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Kudos.Dto.Fakes.ShimPendingKudosDTO.ConstructorTypedObject">
            <summary>Establecer el shim de PendingKudosDTO.PendingKudosDTO(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Kudos.Dto.Fakes.ShimPendingKudosDTO.DoCallbackTypedObject">
            <summary>Establecer el shim de PendingKudosDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Kudos.Dto.Fakes.ShimPendingKudosDTO.PendingCountsGet">
            <summary>Establecer el shim de PendingKudosDTO.get_PendingCounts()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Kudos.Dto.Fakes.ShimPendingKudosDTO.PendingCountsSetInt32Array">
            <summary>Establecer el shim de PendingKudosDTO.set_PendingCounts(Int32[] value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Kudos.Dto.Fakes.ShimPendingKudosDTO.TypeNameGet">
            <summary>Establecer el shim de PendingKudosDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Kudos.Dto.Fakes.ShimPendingKudosDTO.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Kudos.Dto.Fakes.ShimPendingKudosDTO.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de PendingKudosDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Kudos.Dto.Fakes.ShimPendingKudosDTO.AllInstances.PendingCountsGet">
            <summary>Establecer el shim de PendingKudosDTO.get_PendingCounts()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Kudos.Dto.Fakes.ShimPendingKudosDTO.AllInstances.PendingCountsSetInt32Array">
            <summary>Establecer el shim de PendingKudosDTO.set_PendingCounts(Int32[] value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Kudos.Dto.Fakes.ShimPendingKudosDTO.AllInstances.TypeNameGet">
            <summary>Establecer el shim de PendingKudosDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Kudos.Dto.Fakes.StubPendingKudosDTO">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Kudos.Dto.PendingKudosDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Kudos.Dto.Fakes.StubPendingKudosDTO.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Kudos.Dto.Fakes.StubPendingKudosDTO.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Kudos.Dto.Fakes.StubPendingKudosDTO.#ctor(PVPNetConnect.RiotObjects.Kudos.Dto.PendingKudosDTO.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Kudos.Dto.Fakes.StubPendingKudosDTO.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de PendingKudosDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Kudos.Dto.Fakes.StubPendingKudosDTO.DoCallbackTypedObject">
            <summary>Establecer el stub de PendingKudosDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Kudos.Dto.Fakes.StubPendingKudosDTO.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPendingKudosDTO</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Kudos.Dto.Fakes.StubPendingKudosDTO.TypeNameGet">
            <summary>Establecer el stub de PendingKudosDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Kudos.Dto.Fakes.StubPendingKudosDTO.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Kudos.Dto.Fakes.StubPendingKudosDTO.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Kudos.Dto.Fakes.StubPendingKudosDTO.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Kudos.Dto.Fakes.StubPendingKudosDTO.TypeName">
            <summary>Establecer el stub de PendingKudosDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Leagues.Pojo.LeagueItemDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.#ctor(PVPNetConnect.RiotObjects.Leagues.Pojo.LeagueItemDTO)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.Constructor">
            <summary>Establecer el shim de LeagueItemDTO.LeagueItemDTO()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.ConstructorLeagueItemDTOCallback">
            <summary>Establecer el shim de LeagueItemDTO.LeagueItemDTO(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.ConstructorTypedObject">
            <summary>Establecer el shim de LeagueItemDTO.LeagueItemDTO(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.DoCallbackTypedObject">
            <summary>Establecer el shim de LeagueItemDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.FreshBloodGet">
            <summary>Establecer el shim de LeagueItemDTO.get_FreshBlood()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.FreshBloodSetBoolean">
            <summary>Establecer el shim de LeagueItemDTO.set_FreshBlood(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.HotStreakGet">
            <summary>Establecer el shim de LeagueItemDTO.get_HotStreak()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.HotStreakSetBoolean">
            <summary>Establecer el shim de LeagueItemDTO.set_HotStreak(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.InactiveGet">
            <summary>Establecer el shim de LeagueItemDTO.get_Inactive()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.InactiveSetBoolean">
            <summary>Establecer el shim de LeagueItemDTO.set_Inactive(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.LastPlayedGet">
            <summary>Establecer el shim de LeagueItemDTO.get_LastPlayed()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.LastPlayedSetDouble">
            <summary>Establecer el shim de LeagueItemDTO.set_LastPlayed(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.LeagueNameGet">
            <summary>Establecer el shim de LeagueItemDTO.get_LeagueName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.LeagueNameSetString">
            <summary>Establecer el shim de LeagueItemDTO.set_LeagueName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.LeaguePointsGet">
            <summary>Establecer el shim de LeagueItemDTO.get_LeaguePoints()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.LeaguePointsSetInt32">
            <summary>Establecer el shim de LeagueItemDTO.set_LeaguePoints(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.LossesGet">
            <summary>Establecer el shim de LeagueItemDTO.get_Losses()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.LossesSetInt32">
            <summary>Establecer el shim de LeagueItemDTO.set_Losses(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.MiniSeriesGet">
            <summary>Establecer el shim de LeagueItemDTO.get_MiniSeries()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.MiniSeriesSetObject">
            <summary>Establecer el shim de LeagueItemDTO.set_MiniSeries(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.PlayerOrTeamIdGet">
            <summary>Establecer el shim de LeagueItemDTO.get_PlayerOrTeamId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.PlayerOrTeamIdSetString">
            <summary>Establecer el shim de LeagueItemDTO.set_PlayerOrTeamId(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.PlayerOrTeamNameGet">
            <summary>Establecer el shim de LeagueItemDTO.get_PlayerOrTeamName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.PlayerOrTeamNameSetString">
            <summary>Establecer el shim de LeagueItemDTO.set_PlayerOrTeamName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.PreviousDayLeaguePositionGet">
            <summary>Establecer el shim de LeagueItemDTO.get_PreviousDayLeaguePosition()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.PreviousDayLeaguePositionSetInt32">
            <summary>Establecer el shim de LeagueItemDTO.set_PreviousDayLeaguePosition(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.QueueTypeGet">
            <summary>Establecer el shim de LeagueItemDTO.get_QueueType()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.QueueTypeSetString">
            <summary>Establecer el shim de LeagueItemDTO.set_QueueType(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.RankGet">
            <summary>Establecer el shim de LeagueItemDTO.get_Rank()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.RankSetString">
            <summary>Establecer el shim de LeagueItemDTO.set_Rank(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.TierGet">
            <summary>Establecer el shim de LeagueItemDTO.get_Tier()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.TierSetString">
            <summary>Establecer el shim de LeagueItemDTO.set_Tier(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.TimeLastDecayMessageShownGet">
            <summary>Establecer el shim de LeagueItemDTO.get_TimeLastDecayMessageShown()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.TimeLastDecayMessageShownSetDouble">
            <summary>Establecer el shim de LeagueItemDTO.set_TimeLastDecayMessageShown(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.TimeUntilDecayGet">
            <summary>Establecer el shim de LeagueItemDTO.get_TimeUntilDecay()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.TimeUntilDecaySetDouble">
            <summary>Establecer el shim de LeagueItemDTO.set_TimeUntilDecay(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.TypeNameGet">
            <summary>Establecer el shim de LeagueItemDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.VeteranGet">
            <summary>Establecer el shim de LeagueItemDTO.get_Veteran()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.VeteranSetBoolean">
            <summary>Establecer el shim de LeagueItemDTO.set_Veteran(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.WinsGet">
            <summary>Establecer el shim de LeagueItemDTO.get_Wins()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.WinsSetInt32">
            <summary>Establecer el shim de LeagueItemDTO.set_Wins(Int32 value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de LeagueItemDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.AllInstances.FreshBloodGet">
            <summary>Establecer el shim de LeagueItemDTO.get_FreshBlood()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.AllInstances.FreshBloodSetBoolean">
            <summary>Establecer el shim de LeagueItemDTO.set_FreshBlood(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.AllInstances.HotStreakGet">
            <summary>Establecer el shim de LeagueItemDTO.get_HotStreak()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.AllInstances.HotStreakSetBoolean">
            <summary>Establecer el shim de LeagueItemDTO.set_HotStreak(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.AllInstances.InactiveGet">
            <summary>Establecer el shim de LeagueItemDTO.get_Inactive()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.AllInstances.InactiveSetBoolean">
            <summary>Establecer el shim de LeagueItemDTO.set_Inactive(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.AllInstances.LastPlayedGet">
            <summary>Establecer el shim de LeagueItemDTO.get_LastPlayed()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.AllInstances.LastPlayedSetDouble">
            <summary>Establecer el shim de LeagueItemDTO.set_LastPlayed(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.AllInstances.LeagueNameGet">
            <summary>Establecer el shim de LeagueItemDTO.get_LeagueName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.AllInstances.LeagueNameSetString">
            <summary>Establecer el shim de LeagueItemDTO.set_LeagueName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.AllInstances.LeaguePointsGet">
            <summary>Establecer el shim de LeagueItemDTO.get_LeaguePoints()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.AllInstances.LeaguePointsSetInt32">
            <summary>Establecer el shim de LeagueItemDTO.set_LeaguePoints(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.AllInstances.LossesGet">
            <summary>Establecer el shim de LeagueItemDTO.get_Losses()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.AllInstances.LossesSetInt32">
            <summary>Establecer el shim de LeagueItemDTO.set_Losses(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.AllInstances.MiniSeriesGet">
            <summary>Establecer el shim de LeagueItemDTO.get_MiniSeries()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.AllInstances.MiniSeriesSetObject">
            <summary>Establecer el shim de LeagueItemDTO.set_MiniSeries(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.AllInstances.PlayerOrTeamIdGet">
            <summary>Establecer el shim de LeagueItemDTO.get_PlayerOrTeamId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.AllInstances.PlayerOrTeamIdSetString">
            <summary>Establecer el shim de LeagueItemDTO.set_PlayerOrTeamId(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.AllInstances.PlayerOrTeamNameGet">
            <summary>Establecer el shim de LeagueItemDTO.get_PlayerOrTeamName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.AllInstances.PlayerOrTeamNameSetString">
            <summary>Establecer el shim de LeagueItemDTO.set_PlayerOrTeamName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.AllInstances.PreviousDayLeaguePositionGet">
            <summary>Establecer el shim de LeagueItemDTO.get_PreviousDayLeaguePosition()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.AllInstances.PreviousDayLeaguePositionSetInt32">
            <summary>Establecer el shim de LeagueItemDTO.set_PreviousDayLeaguePosition(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.AllInstances.QueueTypeGet">
            <summary>Establecer el shim de LeagueItemDTO.get_QueueType()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.AllInstances.QueueTypeSetString">
            <summary>Establecer el shim de LeagueItemDTO.set_QueueType(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.AllInstances.RankGet">
            <summary>Establecer el shim de LeagueItemDTO.get_Rank()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.AllInstances.RankSetString">
            <summary>Establecer el shim de LeagueItemDTO.set_Rank(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.AllInstances.TierGet">
            <summary>Establecer el shim de LeagueItemDTO.get_Tier()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.AllInstances.TierSetString">
            <summary>Establecer el shim de LeagueItemDTO.set_Tier(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.AllInstances.TimeLastDecayMessageShownGet">
            <summary>Establecer el shim de LeagueItemDTO.get_TimeLastDecayMessageShown()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.AllInstances.TimeLastDecayMessageShownSetDouble">
            <summary>Establecer el shim de LeagueItemDTO.set_TimeLastDecayMessageShown(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.AllInstances.TimeUntilDecayGet">
            <summary>Establecer el shim de LeagueItemDTO.get_TimeUntilDecay()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.AllInstances.TimeUntilDecaySetDouble">
            <summary>Establecer el shim de LeagueItemDTO.set_TimeUntilDecay(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.AllInstances.TypeNameGet">
            <summary>Establecer el shim de LeagueItemDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.AllInstances.VeteranGet">
            <summary>Establecer el shim de LeagueItemDTO.get_Veteran()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.AllInstances.VeteranSetBoolean">
            <summary>Establecer el shim de LeagueItemDTO.set_Veteran(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.AllInstances.WinsGet">
            <summary>Establecer el shim de LeagueItemDTO.get_Wins()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueItemDTO.AllInstances.WinsSetInt32">
            <summary>Establecer el shim de LeagueItemDTO.set_Wins(Int32 value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueListDTO">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Leagues.Pojo.LeagueListDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueListDTO.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueListDTO.#ctor(PVPNetConnect.RiotObjects.Leagues.Pojo.LeagueListDTO)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueListDTO.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueListDTO.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueListDTO.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueListDTO.Constructor">
            <summary>Establecer el shim de LeagueListDTO.LeagueListDTO()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueListDTO.ConstructorLeagueListDTOCallback">
            <summary>Establecer el shim de LeagueListDTO.LeagueListDTO(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueListDTO.ConstructorTypedObject">
            <summary>Establecer el shim de LeagueListDTO.LeagueListDTO(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueListDTO.DoCallbackTypedObject">
            <summary>Establecer el shim de LeagueListDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueListDTO.EntriesGet">
            <summary>Establecer el shim de LeagueListDTO.get_Entries()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueListDTO.EntriesSetListOfLeagueItemDTO">
            <summary>Establecer el shim de LeagueListDTO.set_Entries(List`1&lt;LeagueItemDTO&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueListDTO.NameGet">
            <summary>Establecer el shim de LeagueListDTO.get_Name()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueListDTO.NameSetString">
            <summary>Establecer el shim de LeagueListDTO.set_Name(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueListDTO.QueueGet">
            <summary>Establecer el shim de LeagueListDTO.get_Queue()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueListDTO.QueueSetString">
            <summary>Establecer el shim de LeagueListDTO.set_Queue(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueListDTO.RequestorsNameGet">
            <summary>Establecer el shim de LeagueListDTO.get_RequestorsName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueListDTO.RequestorsNameSetString">
            <summary>Establecer el shim de LeagueListDTO.set_RequestorsName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueListDTO.RequestorsRankGet">
            <summary>Establecer el shim de LeagueListDTO.get_RequestorsRank()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueListDTO.RequestorsRankSetString">
            <summary>Establecer el shim de LeagueListDTO.set_RequestorsRank(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueListDTO.TierGet">
            <summary>Establecer el shim de LeagueListDTO.get_Tier()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueListDTO.TierSetString">
            <summary>Establecer el shim de LeagueListDTO.set_Tier(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueListDTO.TypeNameGet">
            <summary>Establecer el shim de LeagueListDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueListDTO.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueListDTO.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de LeagueListDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueListDTO.AllInstances.EntriesGet">
            <summary>Establecer el shim de LeagueListDTO.get_Entries()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueListDTO.AllInstances.EntriesSetListOfLeagueItemDTO">
            <summary>Establecer el shim de LeagueListDTO.set_Entries(List`1&lt;LeagueItemDTO&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueListDTO.AllInstances.NameGet">
            <summary>Establecer el shim de LeagueListDTO.get_Name()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueListDTO.AllInstances.NameSetString">
            <summary>Establecer el shim de LeagueListDTO.set_Name(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueListDTO.AllInstances.QueueGet">
            <summary>Establecer el shim de LeagueListDTO.get_Queue()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueListDTO.AllInstances.QueueSetString">
            <summary>Establecer el shim de LeagueListDTO.set_Queue(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueListDTO.AllInstances.RequestorsNameGet">
            <summary>Establecer el shim de LeagueListDTO.get_RequestorsName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueListDTO.AllInstances.RequestorsNameSetString">
            <summary>Establecer el shim de LeagueListDTO.set_RequestorsName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueListDTO.AllInstances.RequestorsRankGet">
            <summary>Establecer el shim de LeagueListDTO.get_RequestorsRank()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueListDTO.AllInstances.RequestorsRankSetString">
            <summary>Establecer el shim de LeagueListDTO.set_RequestorsRank(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueListDTO.AllInstances.TierGet">
            <summary>Establecer el shim de LeagueListDTO.get_Tier()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueListDTO.AllInstances.TierSetString">
            <summary>Establecer el shim de LeagueListDTO.set_Tier(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimLeagueListDTO.AllInstances.TypeNameGet">
            <summary>Establecer el shim de LeagueListDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimMiniSeriesDTO">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Leagues.Pojo.MiniSeriesDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimMiniSeriesDTO.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimMiniSeriesDTO.#ctor(PVPNetConnect.RiotObjects.Leagues.Pojo.MiniSeriesDTO)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimMiniSeriesDTO.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimMiniSeriesDTO.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimMiniSeriesDTO.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimMiniSeriesDTO.Constructor">
            <summary>Establecer el shim de MiniSeriesDTO.MiniSeriesDTO()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimMiniSeriesDTO.ConstructorMiniSeriesDTOCallback">
            <summary>Establecer el shim de MiniSeriesDTO.MiniSeriesDTO(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimMiniSeriesDTO.ConstructorTypedObject">
            <summary>Establecer el shim de MiniSeriesDTO.MiniSeriesDTO(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimMiniSeriesDTO.DoCallbackTypedObject">
            <summary>Establecer el shim de MiniSeriesDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimMiniSeriesDTO.LossesGet">
            <summary>Establecer el shim de MiniSeriesDTO.get_Losses()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimMiniSeriesDTO.LossesSetInt32">
            <summary>Establecer el shim de MiniSeriesDTO.set_Losses(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimMiniSeriesDTO.ProgressGet">
            <summary>Establecer el shim de MiniSeriesDTO.get_Progress()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimMiniSeriesDTO.ProgressSetString">
            <summary>Establecer el shim de MiniSeriesDTO.set_Progress(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimMiniSeriesDTO.TargetGet">
            <summary>Establecer el shim de MiniSeriesDTO.get_Target()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimMiniSeriesDTO.TargetSetInt32">
            <summary>Establecer el shim de MiniSeriesDTO.set_Target(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimMiniSeriesDTO.TimeLeftToPlayMillisGet">
            <summary>Establecer el shim de MiniSeriesDTO.get_TimeLeftToPlayMillis()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimMiniSeriesDTO.TimeLeftToPlayMillisSetDouble">
            <summary>Establecer el shim de MiniSeriesDTO.set_TimeLeftToPlayMillis(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimMiniSeriesDTO.TypeNameGet">
            <summary>Establecer el shim de MiniSeriesDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimMiniSeriesDTO.WinsGet">
            <summary>Establecer el shim de MiniSeriesDTO.get_Wins()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimMiniSeriesDTO.WinsSetInt32">
            <summary>Establecer el shim de MiniSeriesDTO.set_Wins(Int32 value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimMiniSeriesDTO.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimMiniSeriesDTO.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de MiniSeriesDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimMiniSeriesDTO.AllInstances.LossesGet">
            <summary>Establecer el shim de MiniSeriesDTO.get_Losses()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimMiniSeriesDTO.AllInstances.LossesSetInt32">
            <summary>Establecer el shim de MiniSeriesDTO.set_Losses(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimMiniSeriesDTO.AllInstances.ProgressGet">
            <summary>Establecer el shim de MiniSeriesDTO.get_Progress()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimMiniSeriesDTO.AllInstances.ProgressSetString">
            <summary>Establecer el shim de MiniSeriesDTO.set_Progress(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimMiniSeriesDTO.AllInstances.TargetGet">
            <summary>Establecer el shim de MiniSeriesDTO.get_Target()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimMiniSeriesDTO.AllInstances.TargetSetInt32">
            <summary>Establecer el shim de MiniSeriesDTO.set_Target(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimMiniSeriesDTO.AllInstances.TimeLeftToPlayMillisGet">
            <summary>Establecer el shim de MiniSeriesDTO.get_TimeLeftToPlayMillis()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimMiniSeriesDTO.AllInstances.TimeLeftToPlayMillisSetDouble">
            <summary>Establecer el shim de MiniSeriesDTO.set_TimeLeftToPlayMillis(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimMiniSeriesDTO.AllInstances.TypeNameGet">
            <summary>Establecer el shim de MiniSeriesDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimMiniSeriesDTO.AllInstances.WinsGet">
            <summary>Establecer el shim de MiniSeriesDTO.get_Wins()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.ShimMiniSeriesDTO.AllInstances.WinsSetInt32">
            <summary>Establecer el shim de MiniSeriesDTO.set_Wins(Int32 value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.StubLeagueItemDTO">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Leagues.Pojo.LeagueItemDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.StubLeagueItemDTO.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.StubLeagueItemDTO.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.StubLeagueItemDTO.#ctor(PVPNetConnect.RiotObjects.Leagues.Pojo.LeagueItemDTO.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.StubLeagueItemDTO.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de LeagueItemDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.StubLeagueItemDTO.DoCallbackTypedObject">
            <summary>Establecer el stub de LeagueItemDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.StubLeagueItemDTO.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubLeagueItemDTO</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.StubLeagueItemDTO.TypeNameGet">
            <summary>Establecer el stub de LeagueItemDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.StubLeagueItemDTO.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.StubLeagueItemDTO.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.StubLeagueItemDTO.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.StubLeagueItemDTO.TypeName">
            <summary>Establecer el stub de LeagueItemDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.StubLeagueListDTO">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Leagues.Pojo.LeagueListDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.StubLeagueListDTO.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.StubLeagueListDTO.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.StubLeagueListDTO.#ctor(PVPNetConnect.RiotObjects.Leagues.Pojo.LeagueListDTO.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.StubLeagueListDTO.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de LeagueListDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.StubLeagueListDTO.DoCallbackTypedObject">
            <summary>Establecer el stub de LeagueListDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.StubLeagueListDTO.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubLeagueListDTO</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.StubLeagueListDTO.TypeNameGet">
            <summary>Establecer el stub de LeagueListDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.StubLeagueListDTO.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.StubLeagueListDTO.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.StubLeagueListDTO.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.StubLeagueListDTO.TypeName">
            <summary>Establecer el stub de LeagueListDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.StubMiniSeriesDTO">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Leagues.Pojo.MiniSeriesDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.StubMiniSeriesDTO.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.StubMiniSeriesDTO.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.StubMiniSeriesDTO.#ctor(PVPNetConnect.RiotObjects.Leagues.Pojo.MiniSeriesDTO.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.StubMiniSeriesDTO.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de MiniSeriesDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.StubMiniSeriesDTO.DoCallbackTypedObject">
            <summary>Establecer el stub de MiniSeriesDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.StubMiniSeriesDTO.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubMiniSeriesDTO</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.StubMiniSeriesDTO.TypeNameGet">
            <summary>Establecer el stub de MiniSeriesDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.StubMiniSeriesDTO.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.StubMiniSeriesDTO.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.StubMiniSeriesDTO.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Leagues.Pojo.Fakes.StubMiniSeriesDTO.TypeName">
            <summary>Establecer el stub de MiniSeriesDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Account.AccountSummary</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.#ctor(PVPNetConnect.RiotObjects.Platform.Account.AccountSummary)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.AccountIdGet">
            <summary>Establecer el shim de AccountSummary.get_AccountId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.AccountIdSetDouble">
            <summary>Establecer el shim de AccountSummary.set_AccountId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.AdminGet">
            <summary>Establecer el shim de AccountSummary.get_Admin()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.AdminSetBoolean">
            <summary>Establecer el shim de AccountSummary.set_Admin(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.Constructor">
            <summary>Establecer el shim de AccountSummary.AccountSummary()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.ConstructorAccountSummaryCallback">
            <summary>Establecer el shim de AccountSummary.AccountSummary(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.ConstructorTypedObject">
            <summary>Establecer el shim de AccountSummary.AccountSummary(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.DoCallbackTypedObject">
            <summary>Establecer el shim de AccountSummary.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.GroupCountGet">
            <summary>Establecer el shim de AccountSummary.get_GroupCount()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.GroupCountSetInt32">
            <summary>Establecer el shim de AccountSummary.set_GroupCount(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.HasBetaAccessGet">
            <summary>Establecer el shim de AccountSummary.get_HasBetaAccess()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.HasBetaAccessSetBoolean">
            <summary>Establecer el shim de AccountSummary.set_HasBetaAccess(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.NeedsPasswordResetGet">
            <summary>Establecer el shim de AccountSummary.get_NeedsPasswordReset()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.NeedsPasswordResetSetBoolean">
            <summary>Establecer el shim de AccountSummary.set_NeedsPasswordReset(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.PartnerModeGet">
            <summary>Establecer el shim de AccountSummary.get_PartnerMode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.PartnerModeSetBoolean">
            <summary>Establecer el shim de AccountSummary.set_PartnerMode(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.SummonerInternalNameGet">
            <summary>Establecer el shim de AccountSummary.get_SummonerInternalName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.SummonerInternalNameSetObject">
            <summary>Establecer el shim de AccountSummary.set_SummonerInternalName(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.SummonerNameGet">
            <summary>Establecer el shim de AccountSummary.get_SummonerName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.SummonerNameSetObject">
            <summary>Establecer el shim de AccountSummary.set_SummonerName(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.TypeNameGet">
            <summary>Establecer el shim de AccountSummary.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.UsernameGet">
            <summary>Establecer el shim de AccountSummary.get_Username()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.UsernameSetString">
            <summary>Establecer el shim de AccountSummary.set_Username(String value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.AllInstances.AccountIdGet">
            <summary>Establecer el shim de AccountSummary.get_AccountId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.AllInstances.AccountIdSetDouble">
            <summary>Establecer el shim de AccountSummary.set_AccountId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.AllInstances.AdminGet">
            <summary>Establecer el shim de AccountSummary.get_Admin()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.AllInstances.AdminSetBoolean">
            <summary>Establecer el shim de AccountSummary.set_Admin(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de AccountSummary.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.AllInstances.GroupCountGet">
            <summary>Establecer el shim de AccountSummary.get_GroupCount()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.AllInstances.GroupCountSetInt32">
            <summary>Establecer el shim de AccountSummary.set_GroupCount(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.AllInstances.HasBetaAccessGet">
            <summary>Establecer el shim de AccountSummary.get_HasBetaAccess()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.AllInstances.HasBetaAccessSetBoolean">
            <summary>Establecer el shim de AccountSummary.set_HasBetaAccess(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.AllInstances.NeedsPasswordResetGet">
            <summary>Establecer el shim de AccountSummary.get_NeedsPasswordReset()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.AllInstances.NeedsPasswordResetSetBoolean">
            <summary>Establecer el shim de AccountSummary.set_NeedsPasswordReset(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.AllInstances.PartnerModeGet">
            <summary>Establecer el shim de AccountSummary.get_PartnerMode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.AllInstances.PartnerModeSetBoolean">
            <summary>Establecer el shim de AccountSummary.set_PartnerMode(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.AllInstances.SummonerInternalNameGet">
            <summary>Establecer el shim de AccountSummary.get_SummonerInternalName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.AllInstances.SummonerInternalNameSetObject">
            <summary>Establecer el shim de AccountSummary.set_SummonerInternalName(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.AllInstances.SummonerNameGet">
            <summary>Establecer el shim de AccountSummary.get_SummonerName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.AllInstances.SummonerNameSetObject">
            <summary>Establecer el shim de AccountSummary.set_SummonerName(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.AllInstances.TypeNameGet">
            <summary>Establecer el shim de AccountSummary.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.AllInstances.UsernameGet">
            <summary>Establecer el shim de AccountSummary.get_Username()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.ShimAccountSummary.AllInstances.UsernameSetString">
            <summary>Establecer el shim de AccountSummary.set_Username(String value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Account.Fakes.StubAccountSummary">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Account.AccountSummary</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Account.Fakes.StubAccountSummary.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Account.Fakes.StubAccountSummary.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Account.Fakes.StubAccountSummary.#ctor(PVPNetConnect.RiotObjects.Platform.Account.AccountSummary.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Account.Fakes.StubAccountSummary.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de AccountSummary.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Account.Fakes.StubAccountSummary.DoCallbackTypedObject">
            <summary>Establecer el stub de AccountSummary.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Account.Fakes.StubAccountSummary.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubAccountSummary</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Account.Fakes.StubAccountSummary.TypeNameGet">
            <summary>Establecer el stub de AccountSummary.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.StubAccountSummary.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.StubAccountSummary.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.StubAccountSummary.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Account.Fakes.StubAccountSummary.TypeName">
            <summary>Establecer el stub de AccountSummary.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Broadcast.Fakes.ShimBroadcastNotification">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Broadcast.BroadcastNotification</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Broadcast.Fakes.ShimBroadcastNotification.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Broadcast.Fakes.ShimBroadcastNotification.#ctor(PVPNetConnect.RiotObjects.Platform.Broadcast.BroadcastNotification)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Broadcast.Fakes.ShimBroadcastNotification.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Broadcast.Fakes.ShimBroadcastNotification.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Broadcast.Fakes.ShimBroadcastNotification.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Broadcast.Fakes.ShimBroadcastNotification.BroadcastMessagesGet">
            <summary>Establecer el shim de BroadcastNotification.get_BroadcastMessages()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Broadcast.Fakes.ShimBroadcastNotification.BroadcastMessagesSetObjectArray">
            <summary>Establecer el shim de BroadcastNotification.set_BroadcastMessages(Object[] value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Broadcast.Fakes.ShimBroadcastNotification.Constructor">
            <summary>Establecer el shim de BroadcastNotification.BroadcastNotification()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Broadcast.Fakes.ShimBroadcastNotification.ConstructorBroadcastNotificationCallback">
            <summary>Establecer el shim de BroadcastNotification.BroadcastNotification(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Broadcast.Fakes.ShimBroadcastNotification.ConstructorTypedObject">
            <summary>Establecer el shim de BroadcastNotification.BroadcastNotification(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Broadcast.Fakes.ShimBroadcastNotification.DoCallbackTypedObject">
            <summary>Establecer el shim de BroadcastNotification.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Broadcast.Fakes.ShimBroadcastNotification.TypeNameGet">
            <summary>Establecer el shim de BroadcastNotification.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Broadcast.Fakes.ShimBroadcastNotification.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Broadcast.Fakes.ShimBroadcastNotification.AllInstances.BroadcastMessagesGet">
            <summary>Establecer el shim de BroadcastNotification.get_BroadcastMessages()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Broadcast.Fakes.ShimBroadcastNotification.AllInstances.BroadcastMessagesSetObjectArray">
            <summary>Establecer el shim de BroadcastNotification.set_BroadcastMessages(Object[] value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Broadcast.Fakes.ShimBroadcastNotification.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de BroadcastNotification.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Broadcast.Fakes.ShimBroadcastNotification.AllInstances.TypeNameGet">
            <summary>Establecer el shim de BroadcastNotification.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Broadcast.Fakes.StubBroadcastNotification">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Broadcast.BroadcastNotification</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Broadcast.Fakes.StubBroadcastNotification.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Broadcast.Fakes.StubBroadcastNotification.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Broadcast.Fakes.StubBroadcastNotification.#ctor(PVPNetConnect.RiotObjects.Platform.Broadcast.BroadcastNotification.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Broadcast.Fakes.StubBroadcastNotification.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de BroadcastNotification.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Broadcast.Fakes.StubBroadcastNotification.DoCallbackTypedObject">
            <summary>Establecer el stub de BroadcastNotification.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Broadcast.Fakes.StubBroadcastNotification.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubBroadcastNotification</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Broadcast.Fakes.StubBroadcastNotification.TypeNameGet">
            <summary>Establecer el stub de BroadcastNotification.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Broadcast.Fakes.StubBroadcastNotification.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Broadcast.Fakes.StubBroadcastNotification.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Broadcast.Fakes.StubBroadcastNotification.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Broadcast.Fakes.StubBroadcastNotification.TypeName">
            <summary>Establecer el stub de BroadcastNotification.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Catalog.Champion.ChampionDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Catalog.Champion.ChampionDTO)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.ActiveGet">
            <summary>Establecer el shim de ChampionDTO.get_Active()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.ActiveSetBoolean">
            <summary>Establecer el shim de ChampionDTO.set_Active(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.BannedGet">
            <summary>Establecer el shim de ChampionDTO.get_Banned()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.BannedSetBoolean">
            <summary>Establecer el shim de ChampionDTO.set_Banned(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.BotEnabledGet">
            <summary>Establecer el shim de ChampionDTO.get_BotEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.BotEnabledSetBoolean">
            <summary>Establecer el shim de ChampionDTO.set_BotEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.ChampionDataGet">
            <summary>Establecer el shim de ChampionDTO.get_ChampionData()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.ChampionDataSetTypedObject">
            <summary>Establecer el shim de ChampionDTO.set_ChampionData(TypedObject value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.ChampionIdGet">
            <summary>Establecer el shim de ChampionDTO.get_ChampionId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.ChampionIdSetInt32">
            <summary>Establecer el shim de ChampionDTO.set_ChampionId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.ChampionSkinsGet">
            <summary>Establecer el shim de ChampionDTO.get_ChampionSkins()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.ChampionSkinsSetListOfChampionSkinDTO">
            <summary>Establecer el shim de ChampionDTO.set_ChampionSkins(List`1&lt;ChampionSkinDTO&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.Constructor">
            <summary>Establecer el shim de ChampionDTO.ChampionDTO()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.ConstructorChampionDTOCallback">
            <summary>Establecer el shim de ChampionDTO.ChampionDTO(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.ConstructorTypedObject">
            <summary>Establecer el shim de ChampionDTO.ChampionDTO(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.DescriptionGet">
            <summary>Establecer el shim de ChampionDTO.get_Description()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.DescriptionSetString">
            <summary>Establecer el shim de ChampionDTO.set_Description(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.DisplayNameGet">
            <summary>Establecer el shim de ChampionDTO.get_DisplayName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.DisplayNameSetString">
            <summary>Establecer el shim de ChampionDTO.set_DisplayName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.DoCallbackTypedObject">
            <summary>Establecer el shim de ChampionDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.EndDateGet">
            <summary>Establecer el shim de ChampionDTO.get_EndDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.EndDateSetInt32">
            <summary>Establecer el shim de ChampionDTO.set_EndDate(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.FreeToPlayGet">
            <summary>Establecer el shim de ChampionDTO.get_FreeToPlay()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.FreeToPlayRewardGet">
            <summary>Establecer el shim de ChampionDTO.get_FreeToPlayReward()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.FreeToPlayRewardSetBoolean">
            <summary>Establecer el shim de ChampionDTO.set_FreeToPlayReward(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.FreeToPlaySetBoolean">
            <summary>Establecer el shim de ChampionDTO.set_FreeToPlay(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.OwnedByEnemyTeamGet">
            <summary>Establecer el shim de ChampionDTO.get_OwnedByEnemyTeam()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.OwnedByEnemyTeamSetBoolean">
            <summary>Establecer el shim de ChampionDTO.set_OwnedByEnemyTeam(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.OwnedByYourTeamGet">
            <summary>Establecer el shim de ChampionDTO.get_OwnedByYourTeam()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.OwnedByYourTeamSetBoolean">
            <summary>Establecer el shim de ChampionDTO.set_OwnedByYourTeam(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.OwnedGet">
            <summary>Establecer el shim de ChampionDTO.get_Owned()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.OwnedSetBoolean">
            <summary>Establecer el shim de ChampionDTO.set_Owned(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.PurchaseDateGet">
            <summary>Establecer el shim de ChampionDTO.get_PurchaseDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.PurchaseDateSetDouble">
            <summary>Establecer el shim de ChampionDTO.set_PurchaseDate(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.SearchTagsGet">
            <summary>Establecer el shim de ChampionDTO.get_SearchTags()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.SearchTagsSetStringArray">
            <summary>Establecer el shim de ChampionDTO.set_SearchTags(String[] value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.SkinNameGet">
            <summary>Establecer el shim de ChampionDTO.get_SkinName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.SkinNameSetString">
            <summary>Establecer el shim de ChampionDTO.set_SkinName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.TypeNameGet">
            <summary>Establecer el shim de ChampionDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.WinCountRemainingGet">
            <summary>Establecer el shim de ChampionDTO.get_WinCountRemaining()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.WinCountRemainingSetInt32">
            <summary>Establecer el shim de ChampionDTO.set_WinCountRemaining(Int32 value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.AllInstances.ActiveGet">
            <summary>Establecer el shim de ChampionDTO.get_Active()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.AllInstances.ActiveSetBoolean">
            <summary>Establecer el shim de ChampionDTO.set_Active(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.AllInstances.BannedGet">
            <summary>Establecer el shim de ChampionDTO.get_Banned()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.AllInstances.BannedSetBoolean">
            <summary>Establecer el shim de ChampionDTO.set_Banned(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.AllInstances.BotEnabledGet">
            <summary>Establecer el shim de ChampionDTO.get_BotEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.AllInstances.BotEnabledSetBoolean">
            <summary>Establecer el shim de ChampionDTO.set_BotEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.AllInstances.ChampionDataGet">
            <summary>Establecer el shim de ChampionDTO.get_ChampionData()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.AllInstances.ChampionDataSetTypedObject">
            <summary>Establecer el shim de ChampionDTO.set_ChampionData(TypedObject value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.AllInstances.ChampionIdGet">
            <summary>Establecer el shim de ChampionDTO.get_ChampionId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.AllInstances.ChampionIdSetInt32">
            <summary>Establecer el shim de ChampionDTO.set_ChampionId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.AllInstances.ChampionSkinsGet">
            <summary>Establecer el shim de ChampionDTO.get_ChampionSkins()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.AllInstances.ChampionSkinsSetListOfChampionSkinDTO">
            <summary>Establecer el shim de ChampionDTO.set_ChampionSkins(List`1&lt;ChampionSkinDTO&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.AllInstances.DescriptionGet">
            <summary>Establecer el shim de ChampionDTO.get_Description()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.AllInstances.DescriptionSetString">
            <summary>Establecer el shim de ChampionDTO.set_Description(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.AllInstances.DisplayNameGet">
            <summary>Establecer el shim de ChampionDTO.get_DisplayName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.AllInstances.DisplayNameSetString">
            <summary>Establecer el shim de ChampionDTO.set_DisplayName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de ChampionDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.AllInstances.EndDateGet">
            <summary>Establecer el shim de ChampionDTO.get_EndDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.AllInstances.EndDateSetInt32">
            <summary>Establecer el shim de ChampionDTO.set_EndDate(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.AllInstances.FreeToPlayGet">
            <summary>Establecer el shim de ChampionDTO.get_FreeToPlay()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.AllInstances.FreeToPlayRewardGet">
            <summary>Establecer el shim de ChampionDTO.get_FreeToPlayReward()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.AllInstances.FreeToPlayRewardSetBoolean">
            <summary>Establecer el shim de ChampionDTO.set_FreeToPlayReward(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.AllInstances.FreeToPlaySetBoolean">
            <summary>Establecer el shim de ChampionDTO.set_FreeToPlay(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.AllInstances.OwnedByEnemyTeamGet">
            <summary>Establecer el shim de ChampionDTO.get_OwnedByEnemyTeam()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.AllInstances.OwnedByEnemyTeamSetBoolean">
            <summary>Establecer el shim de ChampionDTO.set_OwnedByEnemyTeam(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.AllInstances.OwnedByYourTeamGet">
            <summary>Establecer el shim de ChampionDTO.get_OwnedByYourTeam()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.AllInstances.OwnedByYourTeamSetBoolean">
            <summary>Establecer el shim de ChampionDTO.set_OwnedByYourTeam(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.AllInstances.OwnedGet">
            <summary>Establecer el shim de ChampionDTO.get_Owned()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.AllInstances.OwnedSetBoolean">
            <summary>Establecer el shim de ChampionDTO.set_Owned(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.AllInstances.PurchaseDateGet">
            <summary>Establecer el shim de ChampionDTO.get_PurchaseDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.AllInstances.PurchaseDateSetDouble">
            <summary>Establecer el shim de ChampionDTO.set_PurchaseDate(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.AllInstances.SearchTagsGet">
            <summary>Establecer el shim de ChampionDTO.get_SearchTags()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.AllInstances.SearchTagsSetStringArray">
            <summary>Establecer el shim de ChampionDTO.set_SearchTags(String[] value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.AllInstances.SkinNameGet">
            <summary>Establecer el shim de ChampionDTO.get_SkinName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.AllInstances.SkinNameSetString">
            <summary>Establecer el shim de ChampionDTO.set_SkinName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.AllInstances.TypeNameGet">
            <summary>Establecer el shim de ChampionDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.AllInstances.WinCountRemainingGet">
            <summary>Establecer el shim de ChampionDTO.get_WinCountRemaining()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionDTO.AllInstances.WinCountRemainingSetInt32">
            <summary>Establecer el shim de ChampionDTO.set_WinCountRemaining(Int32 value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Catalog.Champion.ChampionSkinDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Catalog.Champion.ChampionSkinDTO)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.ChampionIdGet">
            <summary>Establecer el shim de ChampionSkinDTO.get_ChampionId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.ChampionIdSetInt32">
            <summary>Establecer el shim de ChampionSkinDTO.set_ChampionId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.Constructor">
            <summary>Establecer el shim de ChampionSkinDTO.ChampionSkinDTO()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.ConstructorChampionSkinDTOCallback">
            <summary>Establecer el shim de ChampionSkinDTO.ChampionSkinDTO(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.ConstructorTypedObject">
            <summary>Establecer el shim de ChampionSkinDTO.ChampionSkinDTO(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.DoCallbackTypedObject">
            <summary>Establecer el shim de ChampionSkinDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.EndDateGet">
            <summary>Establecer el shim de ChampionSkinDTO.get_EndDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.EndDateSetInt32">
            <summary>Establecer el shim de ChampionSkinDTO.set_EndDate(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.FreeToPlayRewardGet">
            <summary>Establecer el shim de ChampionSkinDTO.get_FreeToPlayReward()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.FreeToPlayRewardSetBoolean">
            <summary>Establecer el shim de ChampionSkinDTO.set_FreeToPlayReward(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.LastSelectedGet">
            <summary>Establecer el shim de ChampionSkinDTO.get_LastSelected()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.LastSelectedSetBoolean">
            <summary>Establecer el shim de ChampionSkinDTO.set_LastSelected(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.OwnedGet">
            <summary>Establecer el shim de ChampionSkinDTO.get_Owned()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.OwnedSetBoolean">
            <summary>Establecer el shim de ChampionSkinDTO.set_Owned(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.PurchaseDateGet">
            <summary>Establecer el shim de ChampionSkinDTO.get_PurchaseDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.PurchaseDateSetInt32">
            <summary>Establecer el shim de ChampionSkinDTO.set_PurchaseDate(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.SkinIdGet">
            <summary>Establecer el shim de ChampionSkinDTO.get_SkinId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.SkinIdSetInt32">
            <summary>Establecer el shim de ChampionSkinDTO.set_SkinId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.SkinIndexGet">
            <summary>Establecer el shim de ChampionSkinDTO.get_SkinIndex()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.SkinIndexSetInt32">
            <summary>Establecer el shim de ChampionSkinDTO.set_SkinIndex(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.StillObtainableGet">
            <summary>Establecer el shim de ChampionSkinDTO.get_StillObtainable()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.StillObtainableSetBoolean">
            <summary>Establecer el shim de ChampionSkinDTO.set_StillObtainable(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.TypeNameGet">
            <summary>Establecer el shim de ChampionSkinDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.WinCountRemainingGet">
            <summary>Establecer el shim de ChampionSkinDTO.get_WinCountRemaining()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.WinCountRemainingSetInt32">
            <summary>Establecer el shim de ChampionSkinDTO.set_WinCountRemaining(Int32 value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.AllInstances.ChampionIdGet">
            <summary>Establecer el shim de ChampionSkinDTO.get_ChampionId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.AllInstances.ChampionIdSetInt32">
            <summary>Establecer el shim de ChampionSkinDTO.set_ChampionId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de ChampionSkinDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.AllInstances.EndDateGet">
            <summary>Establecer el shim de ChampionSkinDTO.get_EndDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.AllInstances.EndDateSetInt32">
            <summary>Establecer el shim de ChampionSkinDTO.set_EndDate(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.AllInstances.FreeToPlayRewardGet">
            <summary>Establecer el shim de ChampionSkinDTO.get_FreeToPlayReward()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.AllInstances.FreeToPlayRewardSetBoolean">
            <summary>Establecer el shim de ChampionSkinDTO.set_FreeToPlayReward(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.AllInstances.LastSelectedGet">
            <summary>Establecer el shim de ChampionSkinDTO.get_LastSelected()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.AllInstances.LastSelectedSetBoolean">
            <summary>Establecer el shim de ChampionSkinDTO.set_LastSelected(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.AllInstances.OwnedGet">
            <summary>Establecer el shim de ChampionSkinDTO.get_Owned()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.AllInstances.OwnedSetBoolean">
            <summary>Establecer el shim de ChampionSkinDTO.set_Owned(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.AllInstances.PurchaseDateGet">
            <summary>Establecer el shim de ChampionSkinDTO.get_PurchaseDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.AllInstances.PurchaseDateSetInt32">
            <summary>Establecer el shim de ChampionSkinDTO.set_PurchaseDate(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.AllInstances.SkinIdGet">
            <summary>Establecer el shim de ChampionSkinDTO.get_SkinId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.AllInstances.SkinIdSetInt32">
            <summary>Establecer el shim de ChampionSkinDTO.set_SkinId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.AllInstances.SkinIndexGet">
            <summary>Establecer el shim de ChampionSkinDTO.get_SkinIndex()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.AllInstances.SkinIndexSetInt32">
            <summary>Establecer el shim de ChampionSkinDTO.set_SkinIndex(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.AllInstances.StillObtainableGet">
            <summary>Establecer el shim de ChampionSkinDTO.get_StillObtainable()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.AllInstances.StillObtainableSetBoolean">
            <summary>Establecer el shim de ChampionSkinDTO.set_StillObtainable(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.AllInstances.TypeNameGet">
            <summary>Establecer el shim de ChampionSkinDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.AllInstances.WinCountRemainingGet">
            <summary>Establecer el shim de ChampionSkinDTO.get_WinCountRemaining()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.ShimChampionSkinDTO.AllInstances.WinCountRemainingSetInt32">
            <summary>Establecer el shim de ChampionSkinDTO.set_WinCountRemaining(Int32 value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.StubChampionDTO">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Catalog.Champion.ChampionDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.StubChampionDTO.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.StubChampionDTO.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.StubChampionDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Catalog.Champion.ChampionDTO.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.StubChampionDTO.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de ChampionDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.StubChampionDTO.DoCallbackTypedObject">
            <summary>Establecer el stub de ChampionDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.StubChampionDTO.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubChampionDTO</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.StubChampionDTO.TypeNameGet">
            <summary>Establecer el stub de ChampionDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.StubChampionDTO.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.StubChampionDTO.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.StubChampionDTO.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.StubChampionDTO.TypeName">
            <summary>Establecer el stub de ChampionDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.StubChampionSkinDTO">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Catalog.Champion.ChampionSkinDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.StubChampionSkinDTO.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.StubChampionSkinDTO.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.StubChampionSkinDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Catalog.Champion.ChampionSkinDTO.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.StubChampionSkinDTO.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de ChampionSkinDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.StubChampionSkinDTO.DoCallbackTypedObject">
            <summary>Establecer el stub de ChampionSkinDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.StubChampionSkinDTO.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubChampionSkinDTO</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.StubChampionSkinDTO.TypeNameGet">
            <summary>Establecer el stub de ChampionSkinDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.StubChampionSkinDTO.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.StubChampionSkinDTO.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.StubChampionSkinDTO.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Champion.Fakes.StubChampionSkinDTO.TypeName">
            <summary>Establecer el stub de ChampionSkinDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimEffect">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Catalog.Effect</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimEffect.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimEffect.#ctor(PVPNetConnect.RiotObjects.Platform.Catalog.Effect)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimEffect.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimEffect.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimEffect.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimEffect.CategoryIdGet">
            <summary>Establecer el shim de Effect.get_CategoryId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimEffect.CategoryIdSetObject">
            <summary>Establecer el shim de Effect.set_CategoryId(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimEffect.Constructor">
            <summary>Establecer el shim de Effect.Effect()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimEffect.ConstructorEffectCallback">
            <summary>Establecer el shim de Effect.Effect(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimEffect.ConstructorTypedObject">
            <summary>Establecer el shim de Effect.Effect(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimEffect.DoCallbackTypedObject">
            <summary>Establecer el shim de Effect.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimEffect.EffectIdGet">
            <summary>Establecer el shim de Effect.get_EffectId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimEffect.EffectIdSetInt32">
            <summary>Establecer el shim de Effect.set_EffectId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimEffect.GameCodeGet">
            <summary>Establecer el shim de Effect.get_GameCode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimEffect.GameCodeSetString">
            <summary>Establecer el shim de Effect.set_GameCode(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimEffect.NameGet">
            <summary>Establecer el shim de Effect.get_Name()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimEffect.NameSetString">
            <summary>Establecer el shim de Effect.set_Name(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimEffect.RuneTypeGet">
            <summary>Establecer el shim de Effect.get_RuneType()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimEffect.RuneTypeSetRuneType">
            <summary>Establecer el shim de Effect.set_RuneType(RuneType value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimEffect.TypeNameGet">
            <summary>Establecer el shim de Effect.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimEffect.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimEffect.AllInstances.CategoryIdGet">
            <summary>Establecer el shim de Effect.get_CategoryId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimEffect.AllInstances.CategoryIdSetObject">
            <summary>Establecer el shim de Effect.set_CategoryId(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimEffect.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de Effect.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimEffect.AllInstances.EffectIdGet">
            <summary>Establecer el shim de Effect.get_EffectId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimEffect.AllInstances.EffectIdSetInt32">
            <summary>Establecer el shim de Effect.set_EffectId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimEffect.AllInstances.GameCodeGet">
            <summary>Establecer el shim de Effect.get_GameCode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimEffect.AllInstances.GameCodeSetString">
            <summary>Establecer el shim de Effect.set_GameCode(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimEffect.AllInstances.NameGet">
            <summary>Establecer el shim de Effect.get_Name()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimEffect.AllInstances.NameSetString">
            <summary>Establecer el shim de Effect.set_Name(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimEffect.AllInstances.RuneTypeGet">
            <summary>Establecer el shim de Effect.get_RuneType()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimEffect.AllInstances.RuneTypeSetRuneType">
            <summary>Establecer el shim de Effect.set_RuneType(RuneType value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimEffect.AllInstances.TypeNameGet">
            <summary>Establecer el shim de Effect.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimItemEffect">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Catalog.ItemEffect</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimItemEffect.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimItemEffect.#ctor(PVPNetConnect.RiotObjects.Platform.Catalog.ItemEffect)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimItemEffect.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimItemEffect.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimItemEffect.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimItemEffect.Constructor">
            <summary>Establecer el shim de ItemEffect.ItemEffect()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimItemEffect.ConstructorItemEffectCallback">
            <summary>Establecer el shim de ItemEffect.ItemEffect(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimItemEffect.ConstructorTypedObject">
            <summary>Establecer el shim de ItemEffect.ItemEffect(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimItemEffect.DoCallbackTypedObject">
            <summary>Establecer el shim de ItemEffect.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimItemEffect.EffectGet">
            <summary>Establecer el shim de ItemEffect.get_Effect()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimItemEffect.EffectIdGet">
            <summary>Establecer el shim de ItemEffect.get_EffectId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimItemEffect.EffectIdSetInt32">
            <summary>Establecer el shim de ItemEffect.set_EffectId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimItemEffect.EffectSetEffect">
            <summary>Establecer el shim de ItemEffect.set_Effect(Effect value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimItemEffect.ItemEffectIdGet">
            <summary>Establecer el shim de ItemEffect.get_ItemEffectId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimItemEffect.ItemEffectIdSetInt32">
            <summary>Establecer el shim de ItemEffect.set_ItemEffectId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimItemEffect.ItemIdGet">
            <summary>Establecer el shim de ItemEffect.get_ItemId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimItemEffect.ItemIdSetInt32">
            <summary>Establecer el shim de ItemEffect.set_ItemId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimItemEffect.TypeNameGet">
            <summary>Establecer el shim de ItemEffect.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimItemEffect.ValueGet">
            <summary>Establecer el shim de ItemEffect.get_Value()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimItemEffect.ValueSetString">
            <summary>Establecer el shim de ItemEffect.set_Value(String value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimItemEffect.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimItemEffect.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de ItemEffect.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimItemEffect.AllInstances.EffectGet">
            <summary>Establecer el shim de ItemEffect.get_Effect()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimItemEffect.AllInstances.EffectIdGet">
            <summary>Establecer el shim de ItemEffect.get_EffectId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimItemEffect.AllInstances.EffectIdSetInt32">
            <summary>Establecer el shim de ItemEffect.set_EffectId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimItemEffect.AllInstances.EffectSetEffect">
            <summary>Establecer el shim de ItemEffect.set_Effect(Effect value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimItemEffect.AllInstances.ItemEffectIdGet">
            <summary>Establecer el shim de ItemEffect.get_ItemEffectId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimItemEffect.AllInstances.ItemEffectIdSetInt32">
            <summary>Establecer el shim de ItemEffect.set_ItemEffectId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimItemEffect.AllInstances.ItemIdGet">
            <summary>Establecer el shim de ItemEffect.get_ItemId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimItemEffect.AllInstances.ItemIdSetInt32">
            <summary>Establecer el shim de ItemEffect.set_ItemId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimItemEffect.AllInstances.TypeNameGet">
            <summary>Establecer el shim de ItemEffect.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimItemEffect.AllInstances.ValueGet">
            <summary>Establecer el shim de ItemEffect.get_Value()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.ShimItemEffect.AllInstances.ValueSetString">
            <summary>Establecer el shim de ItemEffect.set_Value(String value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.StubEffect">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Catalog.Effect</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.StubEffect.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.StubEffect.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.StubEffect.#ctor(PVPNetConnect.RiotObjects.Platform.Catalog.Effect.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.StubEffect.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de Effect.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.StubEffect.DoCallbackTypedObject">
            <summary>Establecer el stub de Effect.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.StubEffect.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubEffect</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.StubEffect.TypeNameGet">
            <summary>Establecer el stub de Effect.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.StubEffect.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.StubEffect.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.StubEffect.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.StubEffect.TypeName">
            <summary>Establecer el stub de Effect.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.StubItemEffect">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Catalog.ItemEffect</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.StubItemEffect.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.StubItemEffect.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.StubItemEffect.#ctor(PVPNetConnect.RiotObjects.Platform.Catalog.ItemEffect.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.StubItemEffect.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de ItemEffect.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.StubItemEffect.DoCallbackTypedObject">
            <summary>Establecer el stub de ItemEffect.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.StubItemEffect.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubItemEffect</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.StubItemEffect.TypeNameGet">
            <summary>Establecer el stub de ItemEffect.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.StubItemEffect.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.StubItemEffect.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.StubItemEffect.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Fakes.StubItemEffect.TypeName">
            <summary>Establecer el stub de ItemEffect.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Fakes.ShimIcon">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Icon</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Fakes.ShimIcon.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Fakes.ShimIcon.#ctor(PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Icon)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Fakes.ShimIcon.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Fakes.ShimIcon.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Fakes.ShimIcon.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Fakes.ShimIcon.Constructor">
            <summary>Establecer el shim de Icon.Icon()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Fakes.ShimIcon.ConstructorIconCallback">
            <summary>Establecer el shim de Icon.Icon(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Fakes.ShimIcon.ConstructorTypedObject">
            <summary>Establecer el shim de Icon.Icon(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Fakes.ShimIcon.DoCallbackTypedObject">
            <summary>Establecer el shim de Icon.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Fakes.ShimIcon.IconIdGet">
            <summary>Establecer el shim de Icon.get_IconId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Fakes.ShimIcon.IconIdSetDouble">
            <summary>Establecer el shim de Icon.set_IconId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Fakes.ShimIcon.PurchaseDateGet">
            <summary>Establecer el shim de Icon.get_PurchaseDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Fakes.ShimIcon.PurchaseDateSetDateTime">
            <summary>Establecer el shim de Icon.set_PurchaseDate(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Fakes.ShimIcon.SummonerIdGet">
            <summary>Establecer el shim de Icon.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Fakes.ShimIcon.SummonerIdSetDouble">
            <summary>Establecer el shim de Icon.set_SummonerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Fakes.ShimIcon.TypeNameGet">
            <summary>Establecer el shim de Icon.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Fakes.ShimIcon.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Fakes.ShimIcon.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de Icon.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Fakes.ShimIcon.AllInstances.IconIdGet">
            <summary>Establecer el shim de Icon.get_IconId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Fakes.ShimIcon.AllInstances.IconIdSetDouble">
            <summary>Establecer el shim de Icon.set_IconId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Fakes.ShimIcon.AllInstances.PurchaseDateGet">
            <summary>Establecer el shim de Icon.get_PurchaseDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Fakes.ShimIcon.AllInstances.PurchaseDateSetDateTime">
            <summary>Establecer el shim de Icon.set_PurchaseDate(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Fakes.ShimIcon.AllInstances.SummonerIdGet">
            <summary>Establecer el shim de Icon.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Fakes.ShimIcon.AllInstances.SummonerIdSetDouble">
            <summary>Establecer el shim de Icon.set_SummonerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Fakes.ShimIcon.AllInstances.TypeNameGet">
            <summary>Establecer el shim de Icon.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Fakes.StubIcon">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Icon</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Fakes.StubIcon.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Fakes.StubIcon.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Fakes.StubIcon.#ctor(PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Icon.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Fakes.StubIcon.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de Icon.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Fakes.StubIcon.DoCallbackTypedObject">
            <summary>Establecer el stub de Icon.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Fakes.StubIcon.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubIcon</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Fakes.StubIcon.TypeNameGet">
            <summary>Establecer el stub de Icon.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Fakes.StubIcon.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Fakes.StubIcon.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Fakes.StubIcon.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Icon.Fakes.StubIcon.TypeName">
            <summary>Establecer el stub de Icon.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Rune</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.#ctor(PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Rune)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.BaseTypeGet">
            <summary>Establecer el shim de Rune.get_BaseType()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.BaseTypeSetString">
            <summary>Establecer el shim de Rune.set_BaseType(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.Constructor">
            <summary>Establecer el shim de Rune.Rune()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.ConstructorRuneCallback">
            <summary>Establecer el shim de Rune.Rune(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.ConstructorTypedObject">
            <summary>Establecer el shim de Rune.Rune(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.DescriptionGet">
            <summary>Establecer el shim de Rune.get_Description()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.DescriptionSetString">
            <summary>Establecer el shim de Rune.set_Description(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.DoCallbackTypedObject">
            <summary>Establecer el shim de Rune.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.DurationGet">
            <summary>Establecer el shim de Rune.get_Duration()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.DurationSetInt32">
            <summary>Establecer el shim de Rune.set_Duration(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.GameCodeGet">
            <summary>Establecer el shim de Rune.get_GameCode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.GameCodeSetInt32">
            <summary>Establecer el shim de Rune.set_GameCode(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.ImagePathGet">
            <summary>Establecer el shim de Rune.get_ImagePath()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.ImagePathSetObject">
            <summary>Establecer el shim de Rune.set_ImagePath(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.ItemEffectsGet">
            <summary>Establecer el shim de Rune.get_ItemEffects()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.ItemEffectsSetListOfItemEffect">
            <summary>Establecer el shim de Rune.set_ItemEffects(List`1&lt;ItemEffect&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.ItemIdGet">
            <summary>Establecer el shim de Rune.get_ItemId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.ItemIdSetInt32">
            <summary>Establecer el shim de Rune.set_ItemId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.NameGet">
            <summary>Establecer el shim de Rune.get_Name()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.NameSetString">
            <summary>Establecer el shim de Rune.set_Name(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.RuneTypeGet">
            <summary>Establecer el shim de Rune.get_RuneType()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.RuneTypeSetRuneType">
            <summary>Establecer el shim de Rune.set_RuneType(RuneType value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.TierGet">
            <summary>Establecer el shim de Rune.get_Tier()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.TierSetInt32">
            <summary>Establecer el shim de Rune.set_Tier(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.ToolTipGet">
            <summary>Establecer el shim de Rune.get_ToolTip()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.ToolTipSetObject">
            <summary>Establecer el shim de Rune.set_ToolTip(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.TypeNameGet">
            <summary>Establecer el shim de Rune.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.UsesGet">
            <summary>Establecer el shim de Rune.get_Uses()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.UsesSetObject">
            <summary>Establecer el shim de Rune.set_Uses(Object value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.AllInstances.BaseTypeGet">
            <summary>Establecer el shim de Rune.get_BaseType()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.AllInstances.BaseTypeSetString">
            <summary>Establecer el shim de Rune.set_BaseType(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.AllInstances.DescriptionGet">
            <summary>Establecer el shim de Rune.get_Description()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.AllInstances.DescriptionSetString">
            <summary>Establecer el shim de Rune.set_Description(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de Rune.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.AllInstances.DurationGet">
            <summary>Establecer el shim de Rune.get_Duration()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.AllInstances.DurationSetInt32">
            <summary>Establecer el shim de Rune.set_Duration(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.AllInstances.GameCodeGet">
            <summary>Establecer el shim de Rune.get_GameCode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.AllInstances.GameCodeSetInt32">
            <summary>Establecer el shim de Rune.set_GameCode(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.AllInstances.ImagePathGet">
            <summary>Establecer el shim de Rune.get_ImagePath()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.AllInstances.ImagePathSetObject">
            <summary>Establecer el shim de Rune.set_ImagePath(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.AllInstances.ItemEffectsGet">
            <summary>Establecer el shim de Rune.get_ItemEffects()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.AllInstances.ItemEffectsSetListOfItemEffect">
            <summary>Establecer el shim de Rune.set_ItemEffects(List`1&lt;ItemEffect&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.AllInstances.ItemIdGet">
            <summary>Establecer el shim de Rune.get_ItemId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.AllInstances.ItemIdSetInt32">
            <summary>Establecer el shim de Rune.set_ItemId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.AllInstances.NameGet">
            <summary>Establecer el shim de Rune.get_Name()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.AllInstances.NameSetString">
            <summary>Establecer el shim de Rune.set_Name(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.AllInstances.RuneTypeGet">
            <summary>Establecer el shim de Rune.get_RuneType()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.AllInstances.RuneTypeSetRuneType">
            <summary>Establecer el shim de Rune.set_RuneType(RuneType value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.AllInstances.TierGet">
            <summary>Establecer el shim de Rune.get_Tier()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.AllInstances.TierSetInt32">
            <summary>Establecer el shim de Rune.set_Tier(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.AllInstances.ToolTipGet">
            <summary>Establecer el shim de Rune.get_ToolTip()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.AllInstances.ToolTipSetObject">
            <summary>Establecer el shim de Rune.set_ToolTip(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.AllInstances.TypeNameGet">
            <summary>Establecer el shim de Rune.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.AllInstances.UsesGet">
            <summary>Establecer el shim de Rune.get_Uses()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRune.AllInstances.UsesSetObject">
            <summary>Establecer el shim de Rune.set_Uses(Object value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRuneType">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Catalog.Runes.RuneType</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRuneType.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRuneType.#ctor(PVPNetConnect.RiotObjects.Platform.Catalog.Runes.RuneType)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRuneType.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRuneType.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRuneType.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRuneType.Constructor">
            <summary>Establecer el shim de RuneType.RuneType()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRuneType.ConstructorRuneTypeCallback">
            <summary>Establecer el shim de RuneType.RuneType(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRuneType.ConstructorTypedObject">
            <summary>Establecer el shim de RuneType.RuneType(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRuneType.DoCallbackTypedObject">
            <summary>Establecer el shim de RuneType.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRuneType.NameGet">
            <summary>Establecer el shim de RuneType.get_Name()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRuneType.NameSetString">
            <summary>Establecer el shim de RuneType.set_Name(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRuneType.RuneTypeIdGet">
            <summary>Establecer el shim de RuneType.get_RuneTypeId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRuneType.RuneTypeIdSetInt32">
            <summary>Establecer el shim de RuneType.set_RuneTypeId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRuneType.TypeNameGet">
            <summary>Establecer el shim de RuneType.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRuneType.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRuneType.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de RuneType.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRuneType.AllInstances.NameGet">
            <summary>Establecer el shim de RuneType.get_Name()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRuneType.AllInstances.NameSetString">
            <summary>Establecer el shim de RuneType.set_Name(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRuneType.AllInstances.RuneTypeIdGet">
            <summary>Establecer el shim de RuneType.get_RuneTypeId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRuneType.AllInstances.RuneTypeIdSetInt32">
            <summary>Establecer el shim de RuneType.set_RuneTypeId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.ShimRuneType.AllInstances.TypeNameGet">
            <summary>Establecer el shim de RuneType.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.StubRune">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Rune</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.StubRune.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.StubRune.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.StubRune.#ctor(PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Rune.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.StubRune.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de Rune.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.StubRune.DoCallbackTypedObject">
            <summary>Establecer el stub de Rune.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.StubRune.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubRune</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.StubRune.TypeNameGet">
            <summary>Establecer el stub de Rune.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.StubRune.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.StubRune.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.StubRune.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.StubRune.TypeName">
            <summary>Establecer el stub de Rune.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.StubRuneType">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Catalog.Runes.RuneType</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.StubRuneType.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.StubRuneType.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.StubRuneType.#ctor(PVPNetConnect.RiotObjects.Platform.Catalog.Runes.RuneType.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.StubRuneType.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de RuneType.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.StubRuneType.DoCallbackTypedObject">
            <summary>Establecer el stub de RuneType.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.StubRuneType.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubRuneType</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.StubRuneType.TypeNameGet">
            <summary>Establecer el stub de RuneType.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.StubRuneType.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.StubRuneType.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.StubRuneType.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Catalog.Runes.Fakes.StubRuneType.TypeName">
            <summary>Establecer el stub de RuneType.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.LoginDataPacket</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.#ctor(PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.LoginDataPacket)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllSummonerDataGet">
            <summary>Establecer el shim de LoginDataPacket.get_AllSummonerData()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllSummonerDataSetAllSummonerData">
            <summary>Establecer el shim de LoginDataPacket.set_AllSummonerData(AllSummonerData value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.BingeDataGet">
            <summary>Establecer el shim de LoginDataPacket.get_BingeData()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.BingeDataSetObject">
            <summary>Establecer el shim de LoginDataPacket.set_BingeData(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.BingeIsPlayerInBingePreventionWindowGet">
            <summary>Establecer el shim de LoginDataPacket.get_BingeIsPlayerInBingePreventionWindow()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.BingeIsPlayerInBingePreventionWindowSetBoolean">
            <summary>Establecer el shim de LoginDataPacket.set_BingeIsPlayerInBingePreventionWindow(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.BingeMinutesRemainingGet">
            <summary>Establecer el shim de LoginDataPacket.get_BingeMinutesRemaining()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.BingeMinutesRemainingSetDouble">
            <summary>Establecer el shim de LoginDataPacket.set_BingeMinutesRemaining(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.BingePreventionSystemEnabledForClientGet">
            <summary>Establecer el shim de LoginDataPacket.get_BingePreventionSystemEnabledForClient()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.BingePreventionSystemEnabledForClientSetBoolean">
            <summary>Establecer el shim de LoginDataPacket.set_BingePreventionSystemEnabledForClient(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.BroadcastNotificationGet">
            <summary>Establecer el shim de LoginDataPacket.get_BroadcastNotification()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.BroadcastNotificationSetBroadcastNotification">
            <summary>Establecer el shim de LoginDataPacket.set_BroadcastNotification(BroadcastNotification value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.ClientSystemStatesGet">
            <summary>Establecer el shim de LoginDataPacket.get_ClientSystemStates()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.ClientSystemStatesSetClientSystemStatesNotification">
            <summary>Establecer el shim de LoginDataPacket.set_ClientSystemStates(ClientSystemStatesNotification value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.CoOpVsAiMinutesLeftTodayGet">
            <summary>Establecer el shim de LoginDataPacket.get_CoOpVsAiMinutesLeftToday()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.CoOpVsAiMinutesLeftTodaySetInt32">
            <summary>Establecer el shim de LoginDataPacket.set_CoOpVsAiMinutesLeftToday(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.CoOpVsAiMsecsUntilResetGet">
            <summary>Establecer el shim de LoginDataPacket.get_CoOpVsAiMsecsUntilReset()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.CoOpVsAiMsecsUntilResetSetDouble">
            <summary>Establecer el shim de LoginDataPacket.set_CoOpVsAiMsecsUntilReset(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.CompetitiveRegionGet">
            <summary>Establecer el shim de LoginDataPacket.get_CompetitiveRegion()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.CompetitiveRegionSetString">
            <summary>Establecer el shim de LoginDataPacket.set_CompetitiveRegion(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.Constructor">
            <summary>Establecer el shim de LoginDataPacket.LoginDataPacket()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.ConstructorLoginDataPacketCallback">
            <summary>Establecer el shim de LoginDataPacket.LoginDataPacket(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.ConstructorTypedObject">
            <summary>Establecer el shim de LoginDataPacket.LoginDataPacket(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.CustomMinutesLeftTodayGet">
            <summary>Establecer el shim de LoginDataPacket.get_CustomMinutesLeftToday()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.CustomMinutesLeftTodaySetInt32">
            <summary>Establecer el shim de LoginDataPacket.set_CustomMinutesLeftToday(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.CustomMsecsUntilResetGet">
            <summary>Establecer el shim de LoginDataPacket.get_CustomMsecsUntilReset()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.CustomMsecsUntilResetSetDouble">
            <summary>Establecer el shim de LoginDataPacket.set_CustomMsecsUntilReset(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.DoCallbackTypedObject">
            <summary>Establecer el shim de LoginDataPacket.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.EmailStatusGet">
            <summary>Establecer el shim de LoginDataPacket.get_EmailStatus()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.EmailStatusSetString">
            <summary>Establecer el shim de LoginDataPacket.set_EmailStatus(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.GameTypeConfigsGet">
            <summary>Establecer el shim de LoginDataPacket.get_GameTypeConfigs()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.GameTypeConfigsSetListOfGameTypeConfigDTO">
            <summary>Establecer el shim de LoginDataPacket.set_GameTypeConfigs(List`1&lt;GameTypeConfigDTO&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.InGhostGameGet">
            <summary>Establecer el shim de LoginDataPacket.get_InGhostGame()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.InGhostGameSetBoolean">
            <summary>Establecer el shim de LoginDataPacket.set_InGhostGame(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.IpBalanceGet">
            <summary>Establecer el shim de LoginDataPacket.get_IpBalance()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.IpBalanceSetDouble">
            <summary>Establecer el shim de LoginDataPacket.set_IpBalance(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.LanguagesGet">
            <summary>Establecer el shim de LoginDataPacket.get_Languages()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.LanguagesSetListOfString">
            <summary>Establecer el shim de LoginDataPacket.set_Languages(List`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.LeaverBusterPenaltyTimeGet">
            <summary>Establecer el shim de LoginDataPacket.get_LeaverBusterPenaltyTime()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.LeaverBusterPenaltyTimeSetInt32">
            <summary>Establecer el shim de LoginDataPacket.set_LeaverBusterPenaltyTime(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.LeaverPenaltyLevelGet">
            <summary>Establecer el shim de LoginDataPacket.get_LeaverPenaltyLevel()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.LeaverPenaltyLevelSetInt32">
            <summary>Establecer el shim de LoginDataPacket.set_LeaverPenaltyLevel(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.MatchMakingEnabledGet">
            <summary>Establecer el shim de LoginDataPacket.get_MatchMakingEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.MatchMakingEnabledSetBoolean">
            <summary>Establecer el shim de LoginDataPacket.set_MatchMakingEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.MaxPracticeGameSizeGet">
            <summary>Establecer el shim de LoginDataPacket.get_MaxPracticeGameSize()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.MaxPracticeGameSizeSetInt32">
            <summary>Establecer el shim de LoginDataPacket.set_MaxPracticeGameSize(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.MinorGet">
            <summary>Establecer el shim de LoginDataPacket.get_Minor()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.MinorSetBoolean">
            <summary>Establecer el shim de LoginDataPacket.set_Minor(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.MinorShutdownEnforcedGet">
            <summary>Establecer el shim de LoginDataPacket.get_MinorShutdownEnforced()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.MinorShutdownEnforcedSetBoolean">
            <summary>Establecer el shim de LoginDataPacket.set_MinorShutdownEnforced(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.MinutesUntilMidnightGet">
            <summary>Establecer el shim de LoginDataPacket.get_MinutesUntilMidnight()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.MinutesUntilMidnightSetInt32">
            <summary>Establecer el shim de LoginDataPacket.set_MinutesUntilMidnight(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.MinutesUntilShutdownEnabledGet">
            <summary>Establecer el shim de LoginDataPacket.get_MinutesUntilShutdownEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.MinutesUntilShutdownEnabledSetBoolean">
            <summary>Establecer el shim de LoginDataPacket.set_MinutesUntilShutdownEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.MinutesUntilShutdownGet">
            <summary>Establecer el shim de LoginDataPacket.get_MinutesUntilShutdown()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.MinutesUntilShutdownSetInt32">
            <summary>Establecer el shim de LoginDataPacket.set_MinutesUntilShutdown(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.PendingBadgesGet">
            <summary>Establecer el shim de LoginDataPacket.get_PendingBadges()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.PendingBadgesSetInt32">
            <summary>Establecer el shim de LoginDataPacket.set_PendingBadges(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.PendingKudosDTOGet">
            <summary>Establecer el shim de LoginDataPacket.get_PendingKudosDTO()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.PendingKudosDTOSetPendingKudosDTO">
            <summary>Establecer el shim de LoginDataPacket.set_PendingKudosDTO(PendingKudosDTO value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.PlatformGameLifecycleDTOGet">
            <summary>Establecer el shim de LoginDataPacket.get_PlatformGameLifecycleDTO()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.PlatformGameLifecycleDTOSetObject">
            <summary>Establecer el shim de LoginDataPacket.set_PlatformGameLifecycleDTO(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.PlatformIdGet">
            <summary>Establecer el shim de LoginDataPacket.get_PlatformId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.PlatformIdSetString">
            <summary>Establecer el shim de LoginDataPacket.set_PlatformId(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.PlayerStatSummariesGet">
            <summary>Establecer el shim de LoginDataPacket.get_PlayerStatSummaries()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.PlayerStatSummariesSetPlayerStatSummaries">
            <summary>Establecer el shim de LoginDataPacket.set_PlayerStatSummaries(PlayerStatSummaries value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.ReconnectInfoGet">
            <summary>Establecer el shim de LoginDataPacket.get_ReconnectInfo()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.ReconnectInfoSetObject">
            <summary>Establecer el shim de LoginDataPacket.set_ReconnectInfo(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.RestrictedChatGamesRemainingGet">
            <summary>Establecer el shim de LoginDataPacket.get_RestrictedChatGamesRemaining()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.RestrictedChatGamesRemainingSetInt32">
            <summary>Establecer el shim de LoginDataPacket.set_RestrictedChatGamesRemaining(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.RpBalanceGet">
            <summary>Establecer el shim de LoginDataPacket.get_RpBalance()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.RpBalanceSetDouble">
            <summary>Establecer el shim de LoginDataPacket.set_RpBalance(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.SimpleMessagesGet">
            <summary>Establecer el shim de LoginDataPacket.get_SimpleMessages()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.SimpleMessagesSetListOfObject">
            <summary>Establecer el shim de LoginDataPacket.set_SimpleMessages(List`1&lt;Object&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.SummonerCatalogGet">
            <summary>Establecer el shim de LoginDataPacket.get_SummonerCatalog()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.SummonerCatalogSetSummonerCatalog">
            <summary>Establecer el shim de LoginDataPacket.set_SummonerCatalog(SummonerCatalog value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.TimeUntilFirstWinOfDayGet">
            <summary>Establecer el shim de LoginDataPacket.get_TimeUntilFirstWinOfDay()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.TimeUntilFirstWinOfDaySetDouble">
            <summary>Establecer el shim de LoginDataPacket.set_TimeUntilFirstWinOfDay(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.TypeNameGet">
            <summary>Establecer el shim de LoginDataPacket.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.AllSummonerDataGet">
            <summary>Establecer el shim de LoginDataPacket.get_AllSummonerData()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.AllSummonerDataSetAllSummonerData">
            <summary>Establecer el shim de LoginDataPacket.set_AllSummonerData(AllSummonerData value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.BingeDataGet">
            <summary>Establecer el shim de LoginDataPacket.get_BingeData()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.BingeDataSetObject">
            <summary>Establecer el shim de LoginDataPacket.set_BingeData(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.BingeIsPlayerInBingePreventionWindowGet">
            <summary>Establecer el shim de LoginDataPacket.get_BingeIsPlayerInBingePreventionWindow()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.BingeIsPlayerInBingePreventionWindowSetBoolean">
            <summary>Establecer el shim de LoginDataPacket.set_BingeIsPlayerInBingePreventionWindow(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.BingeMinutesRemainingGet">
            <summary>Establecer el shim de LoginDataPacket.get_BingeMinutesRemaining()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.BingeMinutesRemainingSetDouble">
            <summary>Establecer el shim de LoginDataPacket.set_BingeMinutesRemaining(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.BingePreventionSystemEnabledForClientGet">
            <summary>Establecer el shim de LoginDataPacket.get_BingePreventionSystemEnabledForClient()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.BingePreventionSystemEnabledForClientSetBoolean">
            <summary>Establecer el shim de LoginDataPacket.set_BingePreventionSystemEnabledForClient(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.BroadcastNotificationGet">
            <summary>Establecer el shim de LoginDataPacket.get_BroadcastNotification()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.BroadcastNotificationSetBroadcastNotification">
            <summary>Establecer el shim de LoginDataPacket.set_BroadcastNotification(BroadcastNotification value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.ClientSystemStatesGet">
            <summary>Establecer el shim de LoginDataPacket.get_ClientSystemStates()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.ClientSystemStatesSetClientSystemStatesNotification">
            <summary>Establecer el shim de LoginDataPacket.set_ClientSystemStates(ClientSystemStatesNotification value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.CoOpVsAiMinutesLeftTodayGet">
            <summary>Establecer el shim de LoginDataPacket.get_CoOpVsAiMinutesLeftToday()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.CoOpVsAiMinutesLeftTodaySetInt32">
            <summary>Establecer el shim de LoginDataPacket.set_CoOpVsAiMinutesLeftToday(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.CoOpVsAiMsecsUntilResetGet">
            <summary>Establecer el shim de LoginDataPacket.get_CoOpVsAiMsecsUntilReset()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.CoOpVsAiMsecsUntilResetSetDouble">
            <summary>Establecer el shim de LoginDataPacket.set_CoOpVsAiMsecsUntilReset(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.CompetitiveRegionGet">
            <summary>Establecer el shim de LoginDataPacket.get_CompetitiveRegion()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.CompetitiveRegionSetString">
            <summary>Establecer el shim de LoginDataPacket.set_CompetitiveRegion(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.CustomMinutesLeftTodayGet">
            <summary>Establecer el shim de LoginDataPacket.get_CustomMinutesLeftToday()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.CustomMinutesLeftTodaySetInt32">
            <summary>Establecer el shim de LoginDataPacket.set_CustomMinutesLeftToday(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.CustomMsecsUntilResetGet">
            <summary>Establecer el shim de LoginDataPacket.get_CustomMsecsUntilReset()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.CustomMsecsUntilResetSetDouble">
            <summary>Establecer el shim de LoginDataPacket.set_CustomMsecsUntilReset(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de LoginDataPacket.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.EmailStatusGet">
            <summary>Establecer el shim de LoginDataPacket.get_EmailStatus()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.EmailStatusSetString">
            <summary>Establecer el shim de LoginDataPacket.set_EmailStatus(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.GameTypeConfigsGet">
            <summary>Establecer el shim de LoginDataPacket.get_GameTypeConfigs()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.GameTypeConfigsSetListOfGameTypeConfigDTO">
            <summary>Establecer el shim de LoginDataPacket.set_GameTypeConfigs(List`1&lt;GameTypeConfigDTO&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.InGhostGameGet">
            <summary>Establecer el shim de LoginDataPacket.get_InGhostGame()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.InGhostGameSetBoolean">
            <summary>Establecer el shim de LoginDataPacket.set_InGhostGame(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.IpBalanceGet">
            <summary>Establecer el shim de LoginDataPacket.get_IpBalance()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.IpBalanceSetDouble">
            <summary>Establecer el shim de LoginDataPacket.set_IpBalance(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.LanguagesGet">
            <summary>Establecer el shim de LoginDataPacket.get_Languages()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.LanguagesSetListOfString">
            <summary>Establecer el shim de LoginDataPacket.set_Languages(List`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.LeaverBusterPenaltyTimeGet">
            <summary>Establecer el shim de LoginDataPacket.get_LeaverBusterPenaltyTime()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.LeaverBusterPenaltyTimeSetInt32">
            <summary>Establecer el shim de LoginDataPacket.set_LeaverBusterPenaltyTime(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.LeaverPenaltyLevelGet">
            <summary>Establecer el shim de LoginDataPacket.get_LeaverPenaltyLevel()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.LeaverPenaltyLevelSetInt32">
            <summary>Establecer el shim de LoginDataPacket.set_LeaverPenaltyLevel(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.MatchMakingEnabledGet">
            <summary>Establecer el shim de LoginDataPacket.get_MatchMakingEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.MatchMakingEnabledSetBoolean">
            <summary>Establecer el shim de LoginDataPacket.set_MatchMakingEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.MaxPracticeGameSizeGet">
            <summary>Establecer el shim de LoginDataPacket.get_MaxPracticeGameSize()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.MaxPracticeGameSizeSetInt32">
            <summary>Establecer el shim de LoginDataPacket.set_MaxPracticeGameSize(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.MinorGet">
            <summary>Establecer el shim de LoginDataPacket.get_Minor()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.MinorSetBoolean">
            <summary>Establecer el shim de LoginDataPacket.set_Minor(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.MinorShutdownEnforcedGet">
            <summary>Establecer el shim de LoginDataPacket.get_MinorShutdownEnforced()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.MinorShutdownEnforcedSetBoolean">
            <summary>Establecer el shim de LoginDataPacket.set_MinorShutdownEnforced(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.MinutesUntilMidnightGet">
            <summary>Establecer el shim de LoginDataPacket.get_MinutesUntilMidnight()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.MinutesUntilMidnightSetInt32">
            <summary>Establecer el shim de LoginDataPacket.set_MinutesUntilMidnight(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.MinutesUntilShutdownEnabledGet">
            <summary>Establecer el shim de LoginDataPacket.get_MinutesUntilShutdownEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.MinutesUntilShutdownEnabledSetBoolean">
            <summary>Establecer el shim de LoginDataPacket.set_MinutesUntilShutdownEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.MinutesUntilShutdownGet">
            <summary>Establecer el shim de LoginDataPacket.get_MinutesUntilShutdown()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.MinutesUntilShutdownSetInt32">
            <summary>Establecer el shim de LoginDataPacket.set_MinutesUntilShutdown(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.PendingBadgesGet">
            <summary>Establecer el shim de LoginDataPacket.get_PendingBadges()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.PendingBadgesSetInt32">
            <summary>Establecer el shim de LoginDataPacket.set_PendingBadges(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.PendingKudosDTOGet">
            <summary>Establecer el shim de LoginDataPacket.get_PendingKudosDTO()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.PendingKudosDTOSetPendingKudosDTO">
            <summary>Establecer el shim de LoginDataPacket.set_PendingKudosDTO(PendingKudosDTO value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.PlatformGameLifecycleDTOGet">
            <summary>Establecer el shim de LoginDataPacket.get_PlatformGameLifecycleDTO()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.PlatformGameLifecycleDTOSetObject">
            <summary>Establecer el shim de LoginDataPacket.set_PlatformGameLifecycleDTO(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.PlatformIdGet">
            <summary>Establecer el shim de LoginDataPacket.get_PlatformId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.PlatformIdSetString">
            <summary>Establecer el shim de LoginDataPacket.set_PlatformId(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.PlayerStatSummariesGet">
            <summary>Establecer el shim de LoginDataPacket.get_PlayerStatSummaries()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.PlayerStatSummariesSetPlayerStatSummaries">
            <summary>Establecer el shim de LoginDataPacket.set_PlayerStatSummaries(PlayerStatSummaries value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.ReconnectInfoGet">
            <summary>Establecer el shim de LoginDataPacket.get_ReconnectInfo()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.ReconnectInfoSetObject">
            <summary>Establecer el shim de LoginDataPacket.set_ReconnectInfo(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.RestrictedChatGamesRemainingGet">
            <summary>Establecer el shim de LoginDataPacket.get_RestrictedChatGamesRemaining()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.RestrictedChatGamesRemainingSetInt32">
            <summary>Establecer el shim de LoginDataPacket.set_RestrictedChatGamesRemaining(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.RpBalanceGet">
            <summary>Establecer el shim de LoginDataPacket.get_RpBalance()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.RpBalanceSetDouble">
            <summary>Establecer el shim de LoginDataPacket.set_RpBalance(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.SimpleMessagesGet">
            <summary>Establecer el shim de LoginDataPacket.get_SimpleMessages()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.SimpleMessagesSetListOfObject">
            <summary>Establecer el shim de LoginDataPacket.set_SimpleMessages(List`1&lt;Object&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.SummonerCatalogGet">
            <summary>Establecer el shim de LoginDataPacket.get_SummonerCatalog()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.SummonerCatalogSetSummonerCatalog">
            <summary>Establecer el shim de LoginDataPacket.set_SummonerCatalog(SummonerCatalog value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.TimeUntilFirstWinOfDayGet">
            <summary>Establecer el shim de LoginDataPacket.get_TimeUntilFirstWinOfDay()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.TimeUntilFirstWinOfDaySetDouble">
            <summary>Establecer el shim de LoginDataPacket.set_TimeUntilFirstWinOfDay(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.ShimLoginDataPacket.AllInstances.TypeNameGet">
            <summary>Establecer el shim de LoginDataPacket.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.StubLoginDataPacket">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.LoginDataPacket</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.StubLoginDataPacket.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.StubLoginDataPacket.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.StubLoginDataPacket.#ctor(PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.LoginDataPacket.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.StubLoginDataPacket.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de LoginDataPacket.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.StubLoginDataPacket.DoCallbackTypedObject">
            <summary>Establecer el stub de LoginDataPacket.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.StubLoginDataPacket.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubLoginDataPacket</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.StubLoginDataPacket.TypeNameGet">
            <summary>Establecer el stub de LoginDataPacket.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.StubLoginDataPacket.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.StubLoginDataPacket.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.StubLoginDataPacket.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Clientfacade.Domain.Fakes.StubLoginDataPacket.TypeName">
            <summary>Establecer el stub de LoginDataPacket.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBannedChampion">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Game.BannedChampion</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBannedChampion.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBannedChampion.#ctor(PVPNetConnect.RiotObjects.Platform.Game.BannedChampion)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBannedChampion.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBannedChampion.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBannedChampion.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBannedChampion.ChampionIdGet">
            <summary>Establecer el shim de BannedChampion.get_ChampionId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBannedChampion.ChampionIdSetInt32">
            <summary>Establecer el shim de BannedChampion.set_ChampionId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBannedChampion.ConstructorBannedChampionCallback">
            <summary>Establecer el shim de BannedChampion.BannedChampion(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBannedChampion.ConstructorTypedObject">
            <summary>Establecer el shim de BannedChampion.BannedChampion(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBannedChampion.DoCallbackTypedObject">
            <summary>Establecer el shim de BannedChampion.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBannedChampion.PickTurnGet">
            <summary>Establecer el shim de BannedChampion.get_PickTurn()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBannedChampion.PickTurnSetInt32">
            <summary>Establecer el shim de BannedChampion.set_PickTurn(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBannedChampion.TeamIdGet">
            <summary>Establecer el shim de BannedChampion.get_TeamId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBannedChampion.TeamIdSetInt32">
            <summary>Establecer el shim de BannedChampion.set_TeamId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBannedChampion.TypeNameGet">
            <summary>Establecer el shim de BannedChampion.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBannedChampion.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBannedChampion.AllInstances.ChampionIdGet">
            <summary>Establecer el shim de BannedChampion.get_ChampionId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBannedChampion.AllInstances.ChampionIdSetInt32">
            <summary>Establecer el shim de BannedChampion.set_ChampionId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBannedChampion.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de BannedChampion.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBannedChampion.AllInstances.PickTurnGet">
            <summary>Establecer el shim de BannedChampion.get_PickTurn()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBannedChampion.AllInstances.PickTurnSetInt32">
            <summary>Establecer el shim de BannedChampion.set_PickTurn(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBannedChampion.AllInstances.TeamIdGet">
            <summary>Establecer el shim de BannedChampion.get_TeamId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBannedChampion.AllInstances.TeamIdSetInt32">
            <summary>Establecer el shim de BannedChampion.set_TeamId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBannedChampion.AllInstances.TypeNameGet">
            <summary>Establecer el shim de BannedChampion.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Game.BotParticipant</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.#ctor(PVPNetConnect.RiotObjects.Platform.Game.BotParticipant)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.BadgesGet">
            <summary>Establecer el shim de BotParticipant.get_Badges()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.BadgesSetInt32">
            <summary>Establecer el shim de BotParticipant.set_Badges(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.BotSkillLevelGet">
            <summary>Establecer el shim de BotParticipant.get_BotSkillLevel()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.BotSkillLevelNameGet">
            <summary>Establecer el shim de BotParticipant.get_BotSkillLevelName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.BotSkillLevelNameSetString">
            <summary>Establecer el shim de BotParticipant.set_BotSkillLevelName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.BotSkillLevelSetInt32">
            <summary>Establecer el shim de BotParticipant.set_BotSkillLevel(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.ChampionGet">
            <summary>Establecer el shim de BotParticipant.get_Champion()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.ChampionSetChampionDTO">
            <summary>Establecer el shim de BotParticipant.set_Champion(ChampionDTO value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.Constructor">
            <summary>Establecer el shim de BotParticipant.BotParticipant()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.ConstructorBotParticipantCallback">
            <summary>Establecer el shim de BotParticipant.BotParticipant(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.ConstructorTypedObject">
            <summary>Establecer el shim de BotParticipant.BotParticipant(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.DoCallbackTypedObject">
            <summary>Establecer el shim de BotParticipant.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.IsGameOwnerGet">
            <summary>Establecer el shim de BotParticipant.get_IsGameOwner()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.IsGameOwnerSetBoolean">
            <summary>Establecer el shim de BotParticipant.set_IsGameOwner(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.IsMeGet">
            <summary>Establecer el shim de BotParticipant.get_IsMe()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.IsMeSetBoolean">
            <summary>Establecer el shim de BotParticipant.set_IsMe(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.PickModeGet">
            <summary>Establecer el shim de BotParticipant.get_PickMode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.PickModeSetInt32">
            <summary>Establecer el shim de BotParticipant.set_PickMode(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.PickTurnGet">
            <summary>Establecer el shim de BotParticipant.get_PickTurn()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.PickTurnSetInt32">
            <summary>Establecer el shim de BotParticipant.set_PickTurn(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.SummonerInternalNameGet">
            <summary>Establecer el shim de BotParticipant.get_SummonerInternalName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.SummonerInternalNameSetString">
            <summary>Establecer el shim de BotParticipant.set_SummonerInternalName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.SummonerNameGet">
            <summary>Establecer el shim de BotParticipant.get_SummonerName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.SummonerNameSetString">
            <summary>Establecer el shim de BotParticipant.set_SummonerName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.TeamGet">
            <summary>Establecer el shim de BotParticipant.get_Team()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.TeamIdGet">
            <summary>Establecer el shim de BotParticipant.get_TeamId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.TeamIdSetString">
            <summary>Establecer el shim de BotParticipant.set_TeamId(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.TeamNameGet">
            <summary>Establecer el shim de BotParticipant.get_TeamName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.TeamNameSetObject">
            <summary>Establecer el shim de BotParticipant.set_TeamName(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.TeamSetInt32">
            <summary>Establecer el shim de BotParticipant.set_Team(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.TypeNameGet">
            <summary>Establecer el shim de BotParticipant.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.AllInstances.BadgesGet">
            <summary>Establecer el shim de BotParticipant.get_Badges()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.AllInstances.BadgesSetInt32">
            <summary>Establecer el shim de BotParticipant.set_Badges(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.AllInstances.BotSkillLevelGet">
            <summary>Establecer el shim de BotParticipant.get_BotSkillLevel()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.AllInstances.BotSkillLevelNameGet">
            <summary>Establecer el shim de BotParticipant.get_BotSkillLevelName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.AllInstances.BotSkillLevelNameSetString">
            <summary>Establecer el shim de BotParticipant.set_BotSkillLevelName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.AllInstances.BotSkillLevelSetInt32">
            <summary>Establecer el shim de BotParticipant.set_BotSkillLevel(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.AllInstances.ChampionGet">
            <summary>Establecer el shim de BotParticipant.get_Champion()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.AllInstances.ChampionSetChampionDTO">
            <summary>Establecer el shim de BotParticipant.set_Champion(ChampionDTO value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de BotParticipant.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.AllInstances.IsGameOwnerGet">
            <summary>Establecer el shim de BotParticipant.get_IsGameOwner()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.AllInstances.IsGameOwnerSetBoolean">
            <summary>Establecer el shim de BotParticipant.set_IsGameOwner(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.AllInstances.IsMeGet">
            <summary>Establecer el shim de BotParticipant.get_IsMe()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.AllInstances.IsMeSetBoolean">
            <summary>Establecer el shim de BotParticipant.set_IsMe(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.AllInstances.PickModeGet">
            <summary>Establecer el shim de BotParticipant.get_PickMode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.AllInstances.PickModeSetInt32">
            <summary>Establecer el shim de BotParticipant.set_PickMode(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.AllInstances.PickTurnGet">
            <summary>Establecer el shim de BotParticipant.get_PickTurn()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.AllInstances.PickTurnSetInt32">
            <summary>Establecer el shim de BotParticipant.set_PickTurn(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.AllInstances.SummonerInternalNameGet">
            <summary>Establecer el shim de BotParticipant.get_SummonerInternalName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.AllInstances.SummonerInternalNameSetString">
            <summary>Establecer el shim de BotParticipant.set_SummonerInternalName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.AllInstances.SummonerNameGet">
            <summary>Establecer el shim de BotParticipant.get_SummonerName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.AllInstances.SummonerNameSetString">
            <summary>Establecer el shim de BotParticipant.set_SummonerName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.AllInstances.TeamGet">
            <summary>Establecer el shim de BotParticipant.get_Team()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.AllInstances.TeamIdGet">
            <summary>Establecer el shim de BotParticipant.get_TeamId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.AllInstances.TeamIdSetString">
            <summary>Establecer el shim de BotParticipant.set_TeamId(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.AllInstances.TeamNameGet">
            <summary>Establecer el shim de BotParticipant.get_TeamName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.AllInstances.TeamNameSetObject">
            <summary>Establecer el shim de BotParticipant.set_TeamName(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.AllInstances.TeamSetInt32">
            <summary>Establecer el shim de BotParticipant.set_Team(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimBotParticipant.AllInstances.TypeNameGet">
            <summary>Establecer el shim de BotParticipant.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimChampionBanInfoDTO">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Game.ChampionBanInfoDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimChampionBanInfoDTO.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimChampionBanInfoDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Game.ChampionBanInfoDTO)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimChampionBanInfoDTO.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimChampionBanInfoDTO.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimChampionBanInfoDTO.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimChampionBanInfoDTO.ChampionIdGet">
            <summary>Establecer el shim de ChampionBanInfoDTO.get_ChampionId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimChampionBanInfoDTO.ChampionIdSetInt32">
            <summary>Establecer el shim de ChampionBanInfoDTO.set_ChampionId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimChampionBanInfoDTO.ConstructorChampionBanInfoDTOCallback">
            <summary>Establecer el shim de ChampionBanInfoDTO.ChampionBanInfoDTO(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimChampionBanInfoDTO.ConstructorTypedObject">
            <summary>Establecer el shim de ChampionBanInfoDTO.ChampionBanInfoDTO(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimChampionBanInfoDTO.DoCallbackTypedObject">
            <summary>Establecer el shim de ChampionBanInfoDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimChampionBanInfoDTO.EnemyOwnedGet">
            <summary>Establecer el shim de ChampionBanInfoDTO.get_EnemyOwned()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimChampionBanInfoDTO.EnemyOwnedSetBoolean">
            <summary>Establecer el shim de ChampionBanInfoDTO.set_EnemyOwned(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimChampionBanInfoDTO.OwnedGet">
            <summary>Establecer el shim de ChampionBanInfoDTO.get_Owned()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimChampionBanInfoDTO.OwnedSetBoolean">
            <summary>Establecer el shim de ChampionBanInfoDTO.set_Owned(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimChampionBanInfoDTO.TypeNameGet">
            <summary>Establecer el shim de ChampionBanInfoDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimChampionBanInfoDTO.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimChampionBanInfoDTO.AllInstances.ChampionIdGet">
            <summary>Establecer el shim de ChampionBanInfoDTO.get_ChampionId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimChampionBanInfoDTO.AllInstances.ChampionIdSetInt32">
            <summary>Establecer el shim de ChampionBanInfoDTO.set_ChampionId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimChampionBanInfoDTO.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de ChampionBanInfoDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimChampionBanInfoDTO.AllInstances.EnemyOwnedGet">
            <summary>Establecer el shim de ChampionBanInfoDTO.get_EnemyOwned()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimChampionBanInfoDTO.AllInstances.EnemyOwnedSetBoolean">
            <summary>Establecer el shim de ChampionBanInfoDTO.set_EnemyOwned(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimChampionBanInfoDTO.AllInstances.OwnedGet">
            <summary>Establecer el shim de ChampionBanInfoDTO.get_Owned()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimChampionBanInfoDTO.AllInstances.OwnedSetBoolean">
            <summary>Establecer el shim de ChampionBanInfoDTO.set_Owned(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimChampionBanInfoDTO.AllInstances.TypeNameGet">
            <summary>Establecer el shim de ChampionBanInfoDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Game.GameDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Game.GameDTO)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.BanOrderGet">
            <summary>Establecer el shim de GameDTO.get_BanOrder()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.BanOrderSetListOfInt32">
            <summary>Establecer el shim de GameDTO.set_BanOrder(List`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.BannedChampionsGet">
            <summary>Establecer el shim de GameDTO.get_BannedChampions()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.BannedChampionsSetListOfBannedChampion">
            <summary>Establecer el shim de GameDTO.set_BannedChampions(List`1&lt;BannedChampion&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.Constructor">
            <summary>Establecer el shim de GameDTO.GameDTO()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.ConstructorGameDTOCallback">
            <summary>Establecer el shim de GameDTO.GameDTO(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.ConstructorTypedObject">
            <summary>Establecer el shim de GameDTO.GameDTO(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.DoCallbackTypedObject">
            <summary>Establecer el shim de GameDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.ExpiryTimeGet">
            <summary>Establecer el shim de GameDTO.get_ExpiryTime()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.ExpiryTimeSetDouble">
            <summary>Establecer el shim de GameDTO.set_ExpiryTime(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.GameModeGet">
            <summary>Establecer el shim de GameDTO.get_GameMode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.GameModeSetString">
            <summary>Establecer el shim de GameDTO.set_GameMode(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.GameStateGet">
            <summary>Establecer el shim de GameDTO.get_GameState()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.GameStateSetString">
            <summary>Establecer el shim de GameDTO.set_GameState(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.GameStateStringGet">
            <summary>Establecer el shim de GameDTO.get_GameStateString()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.GameStateStringSetString">
            <summary>Establecer el shim de GameDTO.set_GameStateString(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.GameTypeConfigIdGet">
            <summary>Establecer el shim de GameDTO.get_GameTypeConfigId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.GameTypeConfigIdSetInt32">
            <summary>Establecer el shim de GameDTO.set_GameTypeConfigId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.GameTypeGet">
            <summary>Establecer el shim de GameDTO.get_GameType()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.GameTypeSetString">
            <summary>Establecer el shim de GameDTO.set_GameType(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.GlmGameIdGet">
            <summary>Establecer el shim de GameDTO.get_GlmGameId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.GlmGameIdSetObject">
            <summary>Establecer el shim de GameDTO.set_GlmGameId(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.GlmHostGet">
            <summary>Establecer el shim de GameDTO.get_GlmHost()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.GlmHostSetObject">
            <summary>Establecer el shim de GameDTO.set_GlmHost(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.GlmPortGet">
            <summary>Establecer el shim de GameDTO.get_GlmPort()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.GlmPortSetInt32">
            <summary>Establecer el shim de GameDTO.set_GlmPort(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.GlmSecurePortGet">
            <summary>Establecer el shim de GameDTO.get_GlmSecurePort()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.GlmSecurePortSetInt32">
            <summary>Establecer el shim de GameDTO.set_GlmSecurePort(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.IdGet">
            <summary>Establecer el shim de GameDTO.get_Id()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.IdSetDouble">
            <summary>Establecer el shim de GameDTO.set_Id(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.JoinTimerDurationGet">
            <summary>Establecer el shim de GameDTO.get_JoinTimerDuration()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.JoinTimerDurationSetInt32">
            <summary>Establecer el shim de GameDTO.set_JoinTimerDuration(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.MapIdGet">
            <summary>Establecer el shim de GameDTO.get_MapId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.MapIdSetInt32">
            <summary>Establecer el shim de GameDTO.set_MapId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.MaxNumPlayersGet">
            <summary>Establecer el shim de GameDTO.get_MaxNumPlayers()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.MaxNumPlayersSetInt32">
            <summary>Establecer el shim de GameDTO.set_MaxNumPlayers(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.NameGet">
            <summary>Establecer el shim de GameDTO.get_Name()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.NameSetString">
            <summary>Establecer el shim de GameDTO.set_Name(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.ObserversGet">
            <summary>Establecer el shim de GameDTO.get_Observers()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.ObserversSetListOfGameObserver">
            <summary>Establecer el shim de GameDTO.set_Observers(List`1&lt;GameObserver&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.OptimisticLockGet">
            <summary>Establecer el shim de GameDTO.get_OptimisticLock()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.OptimisticLockSetDouble">
            <summary>Establecer el shim de GameDTO.set_OptimisticLock(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.OwnerSummaryGet">
            <summary>Establecer el shim de GameDTO.get_OwnerSummary()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.OwnerSummarySetPlayerParticipant">
            <summary>Establecer el shim de GameDTO.set_OwnerSummary(PlayerParticipant value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.PassbackDataPacketGet">
            <summary>Establecer el shim de GameDTO.get_PassbackDataPacket()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.PassbackDataPacketSetObject">
            <summary>Establecer el shim de GameDTO.set_PassbackDataPacket(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.PassbackUrlGet">
            <summary>Establecer el shim de GameDTO.get_PassbackUrl()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.PassbackUrlSetObject">
            <summary>Establecer el shim de GameDTO.set_PassbackUrl(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.PasswordSetGet">
            <summary>Establecer el shim de GameDTO.get_PasswordSet()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.PasswordSetSetBoolean">
            <summary>Establecer el shim de GameDTO.set_PasswordSet(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.PickTurnGet">
            <summary>Establecer el shim de GameDTO.get_PickTurn()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.PickTurnSetInt32">
            <summary>Establecer el shim de GameDTO.set_PickTurn(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.PlayerChampionSelectionsGet">
            <summary>Establecer el shim de GameDTO.get_PlayerChampionSelections()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.PlayerChampionSelectionsSetListOfPlayerChampionSelectionDTO">
            <summary>Establecer el shim de GameDTO.set_PlayerChampionSelections(List`1&lt;PlayerChampionSelectionDTO&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.QueuePositionGet">
            <summary>Establecer el shim de GameDTO.get_QueuePosition()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.QueuePositionSetInt32">
            <summary>Establecer el shim de GameDTO.set_QueuePosition(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.QueueTypeNameGet">
            <summary>Establecer el shim de GameDTO.get_QueueTypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.QueueTypeNameSetString">
            <summary>Establecer el shim de GameDTO.set_QueueTypeName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.RoomNameGet">
            <summary>Establecer el shim de GameDTO.get_RoomName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.RoomNameSetString">
            <summary>Establecer el shim de GameDTO.set_RoomName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.RoomPasswordGet">
            <summary>Establecer el shim de GameDTO.get_RoomPassword()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.RoomPasswordSetString">
            <summary>Establecer el shim de GameDTO.set_RoomPassword(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.SpectatorDelayGet">
            <summary>Establecer el shim de GameDTO.get_SpectatorDelay()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.SpectatorDelaySetInt32">
            <summary>Establecer el shim de GameDTO.set_SpectatorDelay(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.SpectatorsAllowedGet">
            <summary>Establecer el shim de GameDTO.get_SpectatorsAllowed()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.SpectatorsAllowedSetString">
            <summary>Establecer el shim de GameDTO.set_SpectatorsAllowed(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.StatusOfParticipantsGet">
            <summary>Establecer el shim de GameDTO.get_StatusOfParticipants()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.StatusOfParticipantsSetObject">
            <summary>Establecer el shim de GameDTO.set_StatusOfParticipants(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.TeamOneGet">
            <summary>Establecer el shim de GameDTO.get_TeamOne()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.TeamOneSetListOfParticipant">
            <summary>Establecer el shim de GameDTO.set_TeamOne(List`1&lt;Participant&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.TeamTwoGet">
            <summary>Establecer el shim de GameDTO.get_TeamTwo()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.TeamTwoSetListOfParticipant">
            <summary>Establecer el shim de GameDTO.set_TeamTwo(List`1&lt;Participant&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.TerminatedConditionGet">
            <summary>Establecer el shim de GameDTO.get_TerminatedCondition()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.TerminatedConditionSetString">
            <summary>Establecer el shim de GameDTO.set_TerminatedCondition(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.TypeNameGet">
            <summary>Establecer el shim de GameDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.BanOrderGet">
            <summary>Establecer el shim de GameDTO.get_BanOrder()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.BanOrderSetListOfInt32">
            <summary>Establecer el shim de GameDTO.set_BanOrder(List`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.BannedChampionsGet">
            <summary>Establecer el shim de GameDTO.get_BannedChampions()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.BannedChampionsSetListOfBannedChampion">
            <summary>Establecer el shim de GameDTO.set_BannedChampions(List`1&lt;BannedChampion&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de GameDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.ExpiryTimeGet">
            <summary>Establecer el shim de GameDTO.get_ExpiryTime()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.ExpiryTimeSetDouble">
            <summary>Establecer el shim de GameDTO.set_ExpiryTime(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.GameModeGet">
            <summary>Establecer el shim de GameDTO.get_GameMode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.GameModeSetString">
            <summary>Establecer el shim de GameDTO.set_GameMode(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.GameStateGet">
            <summary>Establecer el shim de GameDTO.get_GameState()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.GameStateSetString">
            <summary>Establecer el shim de GameDTO.set_GameState(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.GameStateStringGet">
            <summary>Establecer el shim de GameDTO.get_GameStateString()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.GameStateStringSetString">
            <summary>Establecer el shim de GameDTO.set_GameStateString(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.GameTypeConfigIdGet">
            <summary>Establecer el shim de GameDTO.get_GameTypeConfigId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.GameTypeConfigIdSetInt32">
            <summary>Establecer el shim de GameDTO.set_GameTypeConfigId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.GameTypeGet">
            <summary>Establecer el shim de GameDTO.get_GameType()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.GameTypeSetString">
            <summary>Establecer el shim de GameDTO.set_GameType(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.GlmGameIdGet">
            <summary>Establecer el shim de GameDTO.get_GlmGameId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.GlmGameIdSetObject">
            <summary>Establecer el shim de GameDTO.set_GlmGameId(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.GlmHostGet">
            <summary>Establecer el shim de GameDTO.get_GlmHost()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.GlmHostSetObject">
            <summary>Establecer el shim de GameDTO.set_GlmHost(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.GlmPortGet">
            <summary>Establecer el shim de GameDTO.get_GlmPort()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.GlmPortSetInt32">
            <summary>Establecer el shim de GameDTO.set_GlmPort(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.GlmSecurePortGet">
            <summary>Establecer el shim de GameDTO.get_GlmSecurePort()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.GlmSecurePortSetInt32">
            <summary>Establecer el shim de GameDTO.set_GlmSecurePort(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.IdGet">
            <summary>Establecer el shim de GameDTO.get_Id()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.IdSetDouble">
            <summary>Establecer el shim de GameDTO.set_Id(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.JoinTimerDurationGet">
            <summary>Establecer el shim de GameDTO.get_JoinTimerDuration()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.JoinTimerDurationSetInt32">
            <summary>Establecer el shim de GameDTO.set_JoinTimerDuration(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.MapIdGet">
            <summary>Establecer el shim de GameDTO.get_MapId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.MapIdSetInt32">
            <summary>Establecer el shim de GameDTO.set_MapId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.MaxNumPlayersGet">
            <summary>Establecer el shim de GameDTO.get_MaxNumPlayers()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.MaxNumPlayersSetInt32">
            <summary>Establecer el shim de GameDTO.set_MaxNumPlayers(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.NameGet">
            <summary>Establecer el shim de GameDTO.get_Name()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.NameSetString">
            <summary>Establecer el shim de GameDTO.set_Name(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.ObserversGet">
            <summary>Establecer el shim de GameDTO.get_Observers()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.ObserversSetListOfGameObserver">
            <summary>Establecer el shim de GameDTO.set_Observers(List`1&lt;GameObserver&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.OptimisticLockGet">
            <summary>Establecer el shim de GameDTO.get_OptimisticLock()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.OptimisticLockSetDouble">
            <summary>Establecer el shim de GameDTO.set_OptimisticLock(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.OwnerSummaryGet">
            <summary>Establecer el shim de GameDTO.get_OwnerSummary()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.OwnerSummarySetPlayerParticipant">
            <summary>Establecer el shim de GameDTO.set_OwnerSummary(PlayerParticipant value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.PassbackDataPacketGet">
            <summary>Establecer el shim de GameDTO.get_PassbackDataPacket()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.PassbackDataPacketSetObject">
            <summary>Establecer el shim de GameDTO.set_PassbackDataPacket(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.PassbackUrlGet">
            <summary>Establecer el shim de GameDTO.get_PassbackUrl()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.PassbackUrlSetObject">
            <summary>Establecer el shim de GameDTO.set_PassbackUrl(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.PasswordSetGet">
            <summary>Establecer el shim de GameDTO.get_PasswordSet()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.PasswordSetSetBoolean">
            <summary>Establecer el shim de GameDTO.set_PasswordSet(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.PickTurnGet">
            <summary>Establecer el shim de GameDTO.get_PickTurn()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.PickTurnSetInt32">
            <summary>Establecer el shim de GameDTO.set_PickTurn(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.PlayerChampionSelectionsGet">
            <summary>Establecer el shim de GameDTO.get_PlayerChampionSelections()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.PlayerChampionSelectionsSetListOfPlayerChampionSelectionDTO">
            <summary>Establecer el shim de GameDTO.set_PlayerChampionSelections(List`1&lt;PlayerChampionSelectionDTO&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.QueuePositionGet">
            <summary>Establecer el shim de GameDTO.get_QueuePosition()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.QueuePositionSetInt32">
            <summary>Establecer el shim de GameDTO.set_QueuePosition(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.QueueTypeNameGet">
            <summary>Establecer el shim de GameDTO.get_QueueTypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.QueueTypeNameSetString">
            <summary>Establecer el shim de GameDTO.set_QueueTypeName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.RoomNameGet">
            <summary>Establecer el shim de GameDTO.get_RoomName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.RoomNameSetString">
            <summary>Establecer el shim de GameDTO.set_RoomName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.RoomPasswordGet">
            <summary>Establecer el shim de GameDTO.get_RoomPassword()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.RoomPasswordSetString">
            <summary>Establecer el shim de GameDTO.set_RoomPassword(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.SpectatorDelayGet">
            <summary>Establecer el shim de GameDTO.get_SpectatorDelay()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.SpectatorDelaySetInt32">
            <summary>Establecer el shim de GameDTO.set_SpectatorDelay(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.SpectatorsAllowedGet">
            <summary>Establecer el shim de GameDTO.get_SpectatorsAllowed()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.SpectatorsAllowedSetString">
            <summary>Establecer el shim de GameDTO.set_SpectatorsAllowed(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.StatusOfParticipantsGet">
            <summary>Establecer el shim de GameDTO.get_StatusOfParticipants()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.StatusOfParticipantsSetObject">
            <summary>Establecer el shim de GameDTO.set_StatusOfParticipants(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.TeamOneGet">
            <summary>Establecer el shim de GameDTO.get_TeamOne()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.TeamOneSetListOfParticipant">
            <summary>Establecer el shim de GameDTO.set_TeamOne(List`1&lt;Participant&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.TeamTwoGet">
            <summary>Establecer el shim de GameDTO.get_TeamTwo()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.TeamTwoSetListOfParticipant">
            <summary>Establecer el shim de GameDTO.set_TeamTwo(List`1&lt;Participant&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.TerminatedConditionGet">
            <summary>Establecer el shim de GameDTO.get_TerminatedCondition()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.TerminatedConditionSetString">
            <summary>Establecer el shim de GameDTO.set_TerminatedCondition(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameDTO.AllInstances.TypeNameGet">
            <summary>Establecer el shim de GameDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Game.GameObserver</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.#ctor(PVPNetConnect.RiotObjects.Platform.Game.GameObserver)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.AccountIdGet">
            <summary>Establecer el shim de GameObserver.get_AccountId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.AccountIdSetDouble">
            <summary>Establecer el shim de GameObserver.set_AccountId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.BadgesGet">
            <summary>Establecer el shim de GameObserver.get_Badges()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.BadgesSetInt32">
            <summary>Establecer el shim de GameObserver.set_Badges(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.BotDifficultyGet">
            <summary>Establecer el shim de GameObserver.get_BotDifficulty()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.BotDifficultySetString">
            <summary>Establecer el shim de GameObserver.set_BotDifficulty(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.Constructor">
            <summary>Establecer el shim de GameObserver.GameObserver()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.ConstructorGameObserverCallback">
            <summary>Establecer el shim de GameObserver.GameObserver(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.ConstructorTypedObject">
            <summary>Establecer el shim de GameObserver.GameObserver(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.DoCallbackTypedObject">
            <summary>Establecer el shim de GameObserver.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.LastSelectedSkinIndexGet">
            <summary>Establecer el shim de GameObserver.get_LastSelectedSkinIndex()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.LastSelectedSkinIndexSetInt32">
            <summary>Establecer el shim de GameObserver.set_LastSelectedSkinIndex(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.LocaleGet">
            <summary>Establecer el shim de GameObserver.get_Locale()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.LocaleSetObject">
            <summary>Establecer el shim de GameObserver.set_Locale(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.OriginalAccountIdGet">
            <summary>Establecer el shim de GameObserver.get_OriginalAccountId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.OriginalAccountIdSetDouble">
            <summary>Establecer el shim de GameObserver.set_OriginalAccountId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.OriginalPlatformIdGet">
            <summary>Establecer el shim de GameObserver.get_OriginalPlatformId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.OriginalPlatformIdSetString">
            <summary>Establecer el shim de GameObserver.set_OriginalPlatformId(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.PartnerIdGet">
            <summary>Establecer el shim de GameObserver.get_PartnerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.PartnerIdSetString">
            <summary>Establecer el shim de GameObserver.set_PartnerId(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.PickModeGet">
            <summary>Establecer el shim de GameObserver.get_PickMode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.PickModeSetInt32">
            <summary>Establecer el shim de GameObserver.set_PickMode(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.PickTurnGet">
            <summary>Establecer el shim de GameObserver.get_PickTurn()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.PickTurnSetInt32">
            <summary>Establecer el shim de GameObserver.set_PickTurn(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.ProfileIconIdGet">
            <summary>Establecer el shim de GameObserver.get_ProfileIconId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.ProfileIconIdSetInt32">
            <summary>Establecer el shim de GameObserver.set_ProfileIconId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.SummonerIdGet">
            <summary>Establecer el shim de GameObserver.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.SummonerIdSetDouble">
            <summary>Establecer el shim de GameObserver.set_SummonerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.SummonerInternalNameGet">
            <summary>Establecer el shim de GameObserver.get_SummonerInternalName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.SummonerInternalNameSetString">
            <summary>Establecer el shim de GameObserver.set_SummonerInternalName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.SummonerNameGet">
            <summary>Establecer el shim de GameObserver.get_SummonerName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.SummonerNameSetString">
            <summary>Establecer el shim de GameObserver.set_SummonerName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.TypeNameGet">
            <summary>Establecer el shim de GameObserver.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.AllInstances.AccountIdGet">
            <summary>Establecer el shim de GameObserver.get_AccountId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.AllInstances.AccountIdSetDouble">
            <summary>Establecer el shim de GameObserver.set_AccountId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.AllInstances.BadgesGet">
            <summary>Establecer el shim de GameObserver.get_Badges()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.AllInstances.BadgesSetInt32">
            <summary>Establecer el shim de GameObserver.set_Badges(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.AllInstances.BotDifficultyGet">
            <summary>Establecer el shim de GameObserver.get_BotDifficulty()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.AllInstances.BotDifficultySetString">
            <summary>Establecer el shim de GameObserver.set_BotDifficulty(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de GameObserver.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.AllInstances.LastSelectedSkinIndexGet">
            <summary>Establecer el shim de GameObserver.get_LastSelectedSkinIndex()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.AllInstances.LastSelectedSkinIndexSetInt32">
            <summary>Establecer el shim de GameObserver.set_LastSelectedSkinIndex(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.AllInstances.LocaleGet">
            <summary>Establecer el shim de GameObserver.get_Locale()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.AllInstances.LocaleSetObject">
            <summary>Establecer el shim de GameObserver.set_Locale(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.AllInstances.OriginalAccountIdGet">
            <summary>Establecer el shim de GameObserver.get_OriginalAccountId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.AllInstances.OriginalAccountIdSetDouble">
            <summary>Establecer el shim de GameObserver.set_OriginalAccountId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.AllInstances.OriginalPlatformIdGet">
            <summary>Establecer el shim de GameObserver.get_OriginalPlatformId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.AllInstances.OriginalPlatformIdSetString">
            <summary>Establecer el shim de GameObserver.set_OriginalPlatformId(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.AllInstances.PartnerIdGet">
            <summary>Establecer el shim de GameObserver.get_PartnerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.AllInstances.PartnerIdSetString">
            <summary>Establecer el shim de GameObserver.set_PartnerId(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.AllInstances.PickModeGet">
            <summary>Establecer el shim de GameObserver.get_PickMode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.AllInstances.PickModeSetInt32">
            <summary>Establecer el shim de GameObserver.set_PickMode(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.AllInstances.PickTurnGet">
            <summary>Establecer el shim de GameObserver.get_PickTurn()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.AllInstances.PickTurnSetInt32">
            <summary>Establecer el shim de GameObserver.set_PickTurn(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.AllInstances.ProfileIconIdGet">
            <summary>Establecer el shim de GameObserver.get_ProfileIconId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.AllInstances.ProfileIconIdSetInt32">
            <summary>Establecer el shim de GameObserver.set_ProfileIconId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.AllInstances.SummonerIdGet">
            <summary>Establecer el shim de GameObserver.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.AllInstances.SummonerIdSetDouble">
            <summary>Establecer el shim de GameObserver.set_SummonerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.AllInstances.SummonerInternalNameGet">
            <summary>Establecer el shim de GameObserver.get_SummonerInternalName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.AllInstances.SummonerInternalNameSetString">
            <summary>Establecer el shim de GameObserver.set_SummonerInternalName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.AllInstances.SummonerNameGet">
            <summary>Establecer el shim de GameObserver.get_SummonerName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.AllInstances.SummonerNameSetString">
            <summary>Establecer el shim de GameObserver.set_SummonerName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameObserver.AllInstances.TypeNameGet">
            <summary>Establecer el shim de GameObserver.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Game.GameTypeConfigDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Game.GameTypeConfigDTO)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.AllowTradesGet">
            <summary>Establecer el shim de GameTypeConfigDTO.get_AllowTrades()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.AllowTradesSetBoolean">
            <summary>Establecer el shim de GameTypeConfigDTO.set_AllowTrades(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.BanTimerDurationGet">
            <summary>Establecer el shim de GameTypeConfigDTO.get_BanTimerDuration()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.BanTimerDurationSetInt32">
            <summary>Establecer el shim de GameTypeConfigDTO.set_BanTimerDuration(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.Constructor">
            <summary>Establecer el shim de GameTypeConfigDTO.GameTypeConfigDTO()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.ConstructorGameTypeConfigDTOCallback">
            <summary>Establecer el shim de GameTypeConfigDTO.GameTypeConfigDTO(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.ConstructorTypedObject">
            <summary>Establecer el shim de GameTypeConfigDTO.GameTypeConfigDTO(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.DoCallbackTypedObject">
            <summary>Establecer el shim de GameTypeConfigDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.DuplicatePickGet">
            <summary>Establecer el shim de GameTypeConfigDTO.get_DuplicatePick()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.DuplicatePickSetBoolean">
            <summary>Establecer el shim de GameTypeConfigDTO.set_DuplicatePick(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.ExclusivePickGet">
            <summary>Establecer el shim de GameTypeConfigDTO.get_ExclusivePick()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.ExclusivePickSetBoolean">
            <summary>Establecer el shim de GameTypeConfigDTO.set_ExclusivePick(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.IdGet">
            <summary>Establecer el shim de GameTypeConfigDTO.get_Id()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.IdSetInt32">
            <summary>Establecer el shim de GameTypeConfigDTO.set_Id(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.MainPickTimerDurationGet">
            <summary>Establecer el shim de GameTypeConfigDTO.get_MainPickTimerDuration()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.MainPickTimerDurationSetInt32">
            <summary>Establecer el shim de GameTypeConfigDTO.set_MainPickTimerDuration(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.MaxAllowableBansGet">
            <summary>Establecer el shim de GameTypeConfigDTO.get_MaxAllowableBans()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.MaxAllowableBansSetInt32">
            <summary>Establecer el shim de GameTypeConfigDTO.set_MaxAllowableBans(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.NameGet">
            <summary>Establecer el shim de GameTypeConfigDTO.get_Name()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.NameSetString">
            <summary>Establecer el shim de GameTypeConfigDTO.set_Name(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.PickModeGet">
            <summary>Establecer el shim de GameTypeConfigDTO.get_PickMode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.PickModeSetString">
            <summary>Establecer el shim de GameTypeConfigDTO.set_PickMode(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.PostPickTimerDurationGet">
            <summary>Establecer el shim de GameTypeConfigDTO.get_PostPickTimerDuration()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.PostPickTimerDurationSetInt32">
            <summary>Establecer el shim de GameTypeConfigDTO.set_PostPickTimerDuration(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.TeamChampionPoolGet">
            <summary>Establecer el shim de GameTypeConfigDTO.get_TeamChampionPool()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.TeamChampionPoolSetBoolean">
            <summary>Establecer el shim de GameTypeConfigDTO.set_TeamChampionPool(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.TypeNameGet">
            <summary>Establecer el shim de GameTypeConfigDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.AllInstances.AllowTradesGet">
            <summary>Establecer el shim de GameTypeConfigDTO.get_AllowTrades()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.AllInstances.AllowTradesSetBoolean">
            <summary>Establecer el shim de GameTypeConfigDTO.set_AllowTrades(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.AllInstances.BanTimerDurationGet">
            <summary>Establecer el shim de GameTypeConfigDTO.get_BanTimerDuration()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.AllInstances.BanTimerDurationSetInt32">
            <summary>Establecer el shim de GameTypeConfigDTO.set_BanTimerDuration(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de GameTypeConfigDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.AllInstances.DuplicatePickGet">
            <summary>Establecer el shim de GameTypeConfigDTO.get_DuplicatePick()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.AllInstances.DuplicatePickSetBoolean">
            <summary>Establecer el shim de GameTypeConfigDTO.set_DuplicatePick(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.AllInstances.ExclusivePickGet">
            <summary>Establecer el shim de GameTypeConfigDTO.get_ExclusivePick()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.AllInstances.ExclusivePickSetBoolean">
            <summary>Establecer el shim de GameTypeConfigDTO.set_ExclusivePick(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.AllInstances.IdGet">
            <summary>Establecer el shim de GameTypeConfigDTO.get_Id()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.AllInstances.IdSetInt32">
            <summary>Establecer el shim de GameTypeConfigDTO.set_Id(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.AllInstances.MainPickTimerDurationGet">
            <summary>Establecer el shim de GameTypeConfigDTO.get_MainPickTimerDuration()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.AllInstances.MainPickTimerDurationSetInt32">
            <summary>Establecer el shim de GameTypeConfigDTO.set_MainPickTimerDuration(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.AllInstances.MaxAllowableBansGet">
            <summary>Establecer el shim de GameTypeConfigDTO.get_MaxAllowableBans()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.AllInstances.MaxAllowableBansSetInt32">
            <summary>Establecer el shim de GameTypeConfigDTO.set_MaxAllowableBans(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.AllInstances.NameGet">
            <summary>Establecer el shim de GameTypeConfigDTO.get_Name()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.AllInstances.NameSetString">
            <summary>Establecer el shim de GameTypeConfigDTO.set_Name(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.AllInstances.PickModeGet">
            <summary>Establecer el shim de GameTypeConfigDTO.get_PickMode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.AllInstances.PickModeSetString">
            <summary>Establecer el shim de GameTypeConfigDTO.set_PickMode(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.AllInstances.PostPickTimerDurationGet">
            <summary>Establecer el shim de GameTypeConfigDTO.get_PostPickTimerDuration()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.AllInstances.PostPickTimerDurationSetInt32">
            <summary>Establecer el shim de GameTypeConfigDTO.set_PostPickTimerDuration(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.AllInstances.TeamChampionPoolGet">
            <summary>Establecer el shim de GameTypeConfigDTO.get_TeamChampionPool()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.AllInstances.TeamChampionPoolSetBoolean">
            <summary>Establecer el shim de GameTypeConfigDTO.set_TeamChampionPool(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimGameTypeConfigDTO.AllInstances.TypeNameGet">
            <summary>Establecer el shim de GameTypeConfigDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimObfuscatedParticipant">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Game.ObfuscatedParticipant</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimObfuscatedParticipant.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimObfuscatedParticipant.#ctor(PVPNetConnect.RiotObjects.Platform.Game.ObfuscatedParticipant)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimObfuscatedParticipant.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimObfuscatedParticipant.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimObfuscatedParticipant.BadgesGet">
            <summary>Establecer el shim de ObfuscatedParticipant.get_Badges()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimObfuscatedParticipant.BadgesSetInt32">
            <summary>Establecer el shim de ObfuscatedParticipant.set_Badges(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimObfuscatedParticipant.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimObfuscatedParticipant.ClientInSynchGet">
            <summary>Establecer el shim de ObfuscatedParticipant.get_ClientInSynch()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimObfuscatedParticipant.ClientInSynchSetBoolean">
            <summary>Establecer el shim de ObfuscatedParticipant.set_ClientInSynch(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimObfuscatedParticipant.Constructor">
            <summary>Establecer el shim de ObfuscatedParticipant.ObfuscatedParticipant()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimObfuscatedParticipant.ConstructorObfuscatedParticipantCallback">
            <summary>Establecer el shim de ObfuscatedParticipant.ObfuscatedParticipant(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimObfuscatedParticipant.ConstructorTypedObject">
            <summary>Establecer el shim de ObfuscatedParticipant.ObfuscatedParticipant(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimObfuscatedParticipant.DoCallbackTypedObject">
            <summary>Establecer el shim de ObfuscatedParticipant.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimObfuscatedParticipant.GameUniqueIdGet">
            <summary>Establecer el shim de ObfuscatedParticipant.get_GameUniqueId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimObfuscatedParticipant.GameUniqueIdSetInt32">
            <summary>Establecer el shim de ObfuscatedParticipant.set_GameUniqueId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimObfuscatedParticipant.IndexGet">
            <summary>Establecer el shim de ObfuscatedParticipant.get_Index()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimObfuscatedParticipant.IndexSetInt32">
            <summary>Establecer el shim de ObfuscatedParticipant.set_Index(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimObfuscatedParticipant.PickModeGet">
            <summary>Establecer el shim de ObfuscatedParticipant.get_PickMode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimObfuscatedParticipant.PickModeSetInt32">
            <summary>Establecer el shim de ObfuscatedParticipant.set_PickMode(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimObfuscatedParticipant.TypeNameGet">
            <summary>Establecer el shim de ObfuscatedParticipant.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimObfuscatedParticipant.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimObfuscatedParticipant.AllInstances.BadgesGet">
            <summary>Establecer el shim de ObfuscatedParticipant.get_Badges()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimObfuscatedParticipant.AllInstances.BadgesSetInt32">
            <summary>Establecer el shim de ObfuscatedParticipant.set_Badges(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimObfuscatedParticipant.AllInstances.ClientInSynchGet">
            <summary>Establecer el shim de ObfuscatedParticipant.get_ClientInSynch()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimObfuscatedParticipant.AllInstances.ClientInSynchSetBoolean">
            <summary>Establecer el shim de ObfuscatedParticipant.set_ClientInSynch(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimObfuscatedParticipant.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de ObfuscatedParticipant.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimObfuscatedParticipant.AllInstances.GameUniqueIdGet">
            <summary>Establecer el shim de ObfuscatedParticipant.get_GameUniqueId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimObfuscatedParticipant.AllInstances.GameUniqueIdSetInt32">
            <summary>Establecer el shim de ObfuscatedParticipant.set_GameUniqueId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimObfuscatedParticipant.AllInstances.IndexGet">
            <summary>Establecer el shim de ObfuscatedParticipant.get_Index()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimObfuscatedParticipant.AllInstances.IndexSetInt32">
            <summary>Establecer el shim de ObfuscatedParticipant.set_Index(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimObfuscatedParticipant.AllInstances.PickModeGet">
            <summary>Establecer el shim de ObfuscatedParticipant.get_PickMode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimObfuscatedParticipant.AllInstances.PickModeSetInt32">
            <summary>Establecer el shim de ObfuscatedParticipant.set_PickMode(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimObfuscatedParticipant.AllInstances.TypeNameGet">
            <summary>Establecer el shim de ObfuscatedParticipant.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimParticipant">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Game.Participant</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimParticipant.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimParticipant.#ctor(PVPNetConnect.RiotObjects.Platform.Game.Participant)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimParticipant.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimParticipant.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimParticipant.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimParticipant.Constructor">
            <summary>Establecer el shim de Participant.Participant()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimParticipant.ConstructorParticipantCallback">
            <summary>Establecer el shim de Participant.Participant(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimParticipant.ConstructorTypedObject">
            <summary>Establecer el shim de Participant.Participant(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimParticipant.DoCallbackTypedObject">
            <summary>Establecer el shim de Participant.DoCallback(TypedObject result)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimParticipant.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimParticipant.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de Participant.DoCallback(TypedObject result)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Game.PlatformGameLifecycleDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Game.PlatformGameLifecycleDTO)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.ConnectivityStateEnumGet">
            <summary>Establecer el shim de PlatformGameLifecycleDTO.get_ConnectivityStateEnum()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.ConnectivityStateEnumSetObject">
            <summary>Establecer el shim de PlatformGameLifecycleDTO.set_ConnectivityStateEnum(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.Constructor">
            <summary>Establecer el shim de PlatformGameLifecycleDTO.PlatformGameLifecycleDTO()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.ConstructorPlatformGameLifecycleDTOCallback">
            <summary>Establecer el shim de PlatformGameLifecycleDTO.PlatformGameLifecycleDTO(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.ConstructorTypedObject">
            <summary>Establecer el shim de PlatformGameLifecycleDTO.PlatformGameLifecycleDTO(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.DoCallbackTypedObject">
            <summary>Establecer el shim de PlatformGameLifecycleDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.GameGet">
            <summary>Establecer el shim de PlatformGameLifecycleDTO.get_Game()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.GameNameGet">
            <summary>Establecer el shim de PlatformGameLifecycleDTO.get_GameName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.GameNameSetString">
            <summary>Establecer el shim de PlatformGameLifecycleDTO.set_GameName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.GameSetGameDTO">
            <summary>Establecer el shim de PlatformGameLifecycleDTO.set_Game(GameDTO value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.GameSpecificLoyaltyRewardsGet">
            <summary>Establecer el shim de PlatformGameLifecycleDTO.get_GameSpecificLoyaltyRewards()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.GameSpecificLoyaltyRewardsSetObject">
            <summary>Establecer el shim de PlatformGameLifecycleDTO.set_GameSpecificLoyaltyRewards(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.LastModifiedDateGet">
            <summary>Establecer el shim de PlatformGameLifecycleDTO.get_LastModifiedDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.LastModifiedDateSetObject">
            <summary>Establecer el shim de PlatformGameLifecycleDTO.set_LastModifiedDate(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.PlayerCredentialsGet">
            <summary>Establecer el shim de PlatformGameLifecycleDTO.get_PlayerCredentials()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.PlayerCredentialsSetPlayerCredentialsDto">
            <summary>Establecer el shim de PlatformGameLifecycleDTO.set_PlayerCredentials(PlayerCredentialsDto value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.ReconnectDelayGet">
            <summary>Establecer el shim de PlatformGameLifecycleDTO.get_ReconnectDelay()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.ReconnectDelaySetInt32">
            <summary>Establecer el shim de PlatformGameLifecycleDTO.set_ReconnectDelay(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.TypeNameGet">
            <summary>Establecer el shim de PlatformGameLifecycleDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.AllInstances.ConnectivityStateEnumGet">
            <summary>Establecer el shim de PlatformGameLifecycleDTO.get_ConnectivityStateEnum()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.AllInstances.ConnectivityStateEnumSetObject">
            <summary>Establecer el shim de PlatformGameLifecycleDTO.set_ConnectivityStateEnum(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de PlatformGameLifecycleDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.AllInstances.GameGet">
            <summary>Establecer el shim de PlatformGameLifecycleDTO.get_Game()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.AllInstances.GameNameGet">
            <summary>Establecer el shim de PlatformGameLifecycleDTO.get_GameName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.AllInstances.GameNameSetString">
            <summary>Establecer el shim de PlatformGameLifecycleDTO.set_GameName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.AllInstances.GameSetGameDTO">
            <summary>Establecer el shim de PlatformGameLifecycleDTO.set_Game(GameDTO value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.AllInstances.GameSpecificLoyaltyRewardsGet">
            <summary>Establecer el shim de PlatformGameLifecycleDTO.get_GameSpecificLoyaltyRewards()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.AllInstances.GameSpecificLoyaltyRewardsSetObject">
            <summary>Establecer el shim de PlatformGameLifecycleDTO.set_GameSpecificLoyaltyRewards(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.AllInstances.LastModifiedDateGet">
            <summary>Establecer el shim de PlatformGameLifecycleDTO.get_LastModifiedDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.AllInstances.LastModifiedDateSetObject">
            <summary>Establecer el shim de PlatformGameLifecycleDTO.set_LastModifiedDate(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.AllInstances.PlayerCredentialsGet">
            <summary>Establecer el shim de PlatformGameLifecycleDTO.get_PlayerCredentials()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.AllInstances.PlayerCredentialsSetPlayerCredentialsDto">
            <summary>Establecer el shim de PlatformGameLifecycleDTO.set_PlayerCredentials(PlayerCredentialsDto value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.AllInstances.ReconnectDelayGet">
            <summary>Establecer el shim de PlatformGameLifecycleDTO.get_ReconnectDelay()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.AllInstances.ReconnectDelaySetInt32">
            <summary>Establecer el shim de PlatformGameLifecycleDTO.set_ReconnectDelay(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlatformGameLifecycleDTO.AllInstances.TypeNameGet">
            <summary>Establecer el shim de PlatformGameLifecycleDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerChampionSelectionDTO">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Game.PlayerChampionSelectionDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerChampionSelectionDTO.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerChampionSelectionDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Game.PlayerChampionSelectionDTO)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerChampionSelectionDTO.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerChampionSelectionDTO.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerChampionSelectionDTO.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerChampionSelectionDTO.ChampionIdGet">
            <summary>Establecer el shim de PlayerChampionSelectionDTO.get_ChampionId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerChampionSelectionDTO.ChampionIdSetInt32">
            <summary>Establecer el shim de PlayerChampionSelectionDTO.set_ChampionId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerChampionSelectionDTO.Constructor">
            <summary>Establecer el shim de PlayerChampionSelectionDTO.PlayerChampionSelectionDTO()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerChampionSelectionDTO.ConstructorPlayerChampionSelectionDTOCallback">
            <summary>Establecer el shim de PlayerChampionSelectionDTO.PlayerChampionSelectionDTO(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerChampionSelectionDTO.ConstructorTypedObject">
            <summary>Establecer el shim de PlayerChampionSelectionDTO.PlayerChampionSelectionDTO(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerChampionSelectionDTO.DoCallbackTypedObject">
            <summary>Establecer el shim de PlayerChampionSelectionDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerChampionSelectionDTO.SelectedSkinIndexGet">
            <summary>Establecer el shim de PlayerChampionSelectionDTO.get_SelectedSkinIndex()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerChampionSelectionDTO.SelectedSkinIndexSetInt32">
            <summary>Establecer el shim de PlayerChampionSelectionDTO.set_SelectedSkinIndex(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerChampionSelectionDTO.Spell1IdGet">
            <summary>Establecer el shim de PlayerChampionSelectionDTO.get_Spell1Id()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerChampionSelectionDTO.Spell1IdSetDouble">
            <summary>Establecer el shim de PlayerChampionSelectionDTO.set_Spell1Id(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerChampionSelectionDTO.Spell2IdGet">
            <summary>Establecer el shim de PlayerChampionSelectionDTO.get_Spell2Id()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerChampionSelectionDTO.Spell2IdSetDouble">
            <summary>Establecer el shim de PlayerChampionSelectionDTO.set_Spell2Id(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerChampionSelectionDTO.SummonerInternalNameGet">
            <summary>Establecer el shim de PlayerChampionSelectionDTO.get_SummonerInternalName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerChampionSelectionDTO.SummonerInternalNameSetString">
            <summary>Establecer el shim de PlayerChampionSelectionDTO.set_SummonerInternalName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerChampionSelectionDTO.TypeNameGet">
            <summary>Establecer el shim de PlayerChampionSelectionDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerChampionSelectionDTO.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerChampionSelectionDTO.AllInstances.ChampionIdGet">
            <summary>Establecer el shim de PlayerChampionSelectionDTO.get_ChampionId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerChampionSelectionDTO.AllInstances.ChampionIdSetInt32">
            <summary>Establecer el shim de PlayerChampionSelectionDTO.set_ChampionId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerChampionSelectionDTO.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de PlayerChampionSelectionDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerChampionSelectionDTO.AllInstances.SelectedSkinIndexGet">
            <summary>Establecer el shim de PlayerChampionSelectionDTO.get_SelectedSkinIndex()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerChampionSelectionDTO.AllInstances.SelectedSkinIndexSetInt32">
            <summary>Establecer el shim de PlayerChampionSelectionDTO.set_SelectedSkinIndex(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerChampionSelectionDTO.AllInstances.Spell1IdGet">
            <summary>Establecer el shim de PlayerChampionSelectionDTO.get_Spell1Id()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerChampionSelectionDTO.AllInstances.Spell1IdSetDouble">
            <summary>Establecer el shim de PlayerChampionSelectionDTO.set_Spell1Id(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerChampionSelectionDTO.AllInstances.Spell2IdGet">
            <summary>Establecer el shim de PlayerChampionSelectionDTO.get_Spell2Id()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerChampionSelectionDTO.AllInstances.Spell2IdSetDouble">
            <summary>Establecer el shim de PlayerChampionSelectionDTO.set_Spell2Id(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerChampionSelectionDTO.AllInstances.SummonerInternalNameGet">
            <summary>Establecer el shim de PlayerChampionSelectionDTO.get_SummonerInternalName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerChampionSelectionDTO.AllInstances.SummonerInternalNameSetString">
            <summary>Establecer el shim de PlayerChampionSelectionDTO.set_SummonerInternalName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerChampionSelectionDTO.AllInstances.TypeNameGet">
            <summary>Establecer el shim de PlayerChampionSelectionDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Game.PlayerCredentialsDto</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.#ctor(PVPNetConnect.RiotObjects.Platform.Game.PlayerCredentialsDto)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.ChampionIdGet">
            <summary>Establecer el shim de PlayerCredentialsDto.get_ChampionId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.ChampionIdSetInt32">
            <summary>Establecer el shim de PlayerCredentialsDto.set_ChampionId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.Constructor">
            <summary>Establecer el shim de PlayerCredentialsDto.PlayerCredentialsDto()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.ConstructorPlayerCredentialsDtoCallback">
            <summary>Establecer el shim de PlayerCredentialsDto.PlayerCredentialsDto(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.ConstructorTypedObject">
            <summary>Establecer el shim de PlayerCredentialsDto.PlayerCredentialsDto(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.DoCallbackTypedObject">
            <summary>Establecer el shim de PlayerCredentialsDto.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.EncryptionKeyGet">
            <summary>Establecer el shim de PlayerCredentialsDto.get_EncryptionKey()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.EncryptionKeySetString">
            <summary>Establecer el shim de PlayerCredentialsDto.set_EncryptionKey(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.GameIdGet">
            <summary>Establecer el shim de PlayerCredentialsDto.get_GameId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.GameIdSetDouble">
            <summary>Establecer el shim de PlayerCredentialsDto.set_GameId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.HandshakeTokenGet">
            <summary>Establecer el shim de PlayerCredentialsDto.get_HandshakeToken()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.HandshakeTokenSetString">
            <summary>Establecer el shim de PlayerCredentialsDto.set_HandshakeToken(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.LastSelectedSkinIndexGet">
            <summary>Establecer el shim de PlayerCredentialsDto.get_LastSelectedSkinIndex()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.LastSelectedSkinIndexSetInt32">
            <summary>Establecer el shim de PlayerCredentialsDto.set_LastSelectedSkinIndex(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.ObserverEncryptionKeyGet">
            <summary>Establecer el shim de PlayerCredentialsDto.get_ObserverEncryptionKey()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.ObserverEncryptionKeySetString">
            <summary>Establecer el shim de PlayerCredentialsDto.set_ObserverEncryptionKey(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.ObserverGet">
            <summary>Establecer el shim de PlayerCredentialsDto.get_Observer()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.ObserverServerIpGet">
            <summary>Establecer el shim de PlayerCredentialsDto.get_ObserverServerIp()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.ObserverServerIpSetString">
            <summary>Establecer el shim de PlayerCredentialsDto.set_ObserverServerIp(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.ObserverServerPortGet">
            <summary>Establecer el shim de PlayerCredentialsDto.get_ObserverServerPort()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.ObserverServerPortSetInt32">
            <summary>Establecer el shim de PlayerCredentialsDto.set_ObserverServerPort(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.ObserverSetBoolean">
            <summary>Establecer el shim de PlayerCredentialsDto.set_Observer(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.PlayerIdGet">
            <summary>Establecer el shim de PlayerCredentialsDto.get_PlayerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.PlayerIdSetDouble">
            <summary>Establecer el shim de PlayerCredentialsDto.set_PlayerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.ServerIpGet">
            <summary>Establecer el shim de PlayerCredentialsDto.get_ServerIp()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.ServerIpSetString">
            <summary>Establecer el shim de PlayerCredentialsDto.set_ServerIp(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.ServerPortGet">
            <summary>Establecer el shim de PlayerCredentialsDto.get_ServerPort()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.ServerPortSetInt32">
            <summary>Establecer el shim de PlayerCredentialsDto.set_ServerPort(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.SummonerIdGet">
            <summary>Establecer el shim de PlayerCredentialsDto.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.SummonerIdSetDouble">
            <summary>Establecer el shim de PlayerCredentialsDto.set_SummonerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.SummonerNameGet">
            <summary>Establecer el shim de PlayerCredentialsDto.get_SummonerName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.SummonerNameSetString">
            <summary>Establecer el shim de PlayerCredentialsDto.set_SummonerName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.TypeNameGet">
            <summary>Establecer el shim de PlayerCredentialsDto.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.AllInstances.ChampionIdGet">
            <summary>Establecer el shim de PlayerCredentialsDto.get_ChampionId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.AllInstances.ChampionIdSetInt32">
            <summary>Establecer el shim de PlayerCredentialsDto.set_ChampionId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de PlayerCredentialsDto.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.AllInstances.EncryptionKeyGet">
            <summary>Establecer el shim de PlayerCredentialsDto.get_EncryptionKey()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.AllInstances.EncryptionKeySetString">
            <summary>Establecer el shim de PlayerCredentialsDto.set_EncryptionKey(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.AllInstances.GameIdGet">
            <summary>Establecer el shim de PlayerCredentialsDto.get_GameId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.AllInstances.GameIdSetDouble">
            <summary>Establecer el shim de PlayerCredentialsDto.set_GameId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.AllInstances.HandshakeTokenGet">
            <summary>Establecer el shim de PlayerCredentialsDto.get_HandshakeToken()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.AllInstances.HandshakeTokenSetString">
            <summary>Establecer el shim de PlayerCredentialsDto.set_HandshakeToken(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.AllInstances.LastSelectedSkinIndexGet">
            <summary>Establecer el shim de PlayerCredentialsDto.get_LastSelectedSkinIndex()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.AllInstances.LastSelectedSkinIndexSetInt32">
            <summary>Establecer el shim de PlayerCredentialsDto.set_LastSelectedSkinIndex(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.AllInstances.ObserverEncryptionKeyGet">
            <summary>Establecer el shim de PlayerCredentialsDto.get_ObserverEncryptionKey()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.AllInstances.ObserverEncryptionKeySetString">
            <summary>Establecer el shim de PlayerCredentialsDto.set_ObserverEncryptionKey(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.AllInstances.ObserverGet">
            <summary>Establecer el shim de PlayerCredentialsDto.get_Observer()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.AllInstances.ObserverServerIpGet">
            <summary>Establecer el shim de PlayerCredentialsDto.get_ObserverServerIp()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.AllInstances.ObserverServerIpSetString">
            <summary>Establecer el shim de PlayerCredentialsDto.set_ObserverServerIp(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.AllInstances.ObserverServerPortGet">
            <summary>Establecer el shim de PlayerCredentialsDto.get_ObserverServerPort()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.AllInstances.ObserverServerPortSetInt32">
            <summary>Establecer el shim de PlayerCredentialsDto.set_ObserverServerPort(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.AllInstances.ObserverSetBoolean">
            <summary>Establecer el shim de PlayerCredentialsDto.set_Observer(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.AllInstances.PlayerIdGet">
            <summary>Establecer el shim de PlayerCredentialsDto.get_PlayerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.AllInstances.PlayerIdSetDouble">
            <summary>Establecer el shim de PlayerCredentialsDto.set_PlayerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.AllInstances.ServerIpGet">
            <summary>Establecer el shim de PlayerCredentialsDto.get_ServerIp()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.AllInstances.ServerIpSetString">
            <summary>Establecer el shim de PlayerCredentialsDto.set_ServerIp(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.AllInstances.ServerPortGet">
            <summary>Establecer el shim de PlayerCredentialsDto.get_ServerPort()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.AllInstances.ServerPortSetInt32">
            <summary>Establecer el shim de PlayerCredentialsDto.set_ServerPort(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.AllInstances.SummonerIdGet">
            <summary>Establecer el shim de PlayerCredentialsDto.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.AllInstances.SummonerIdSetDouble">
            <summary>Establecer el shim de PlayerCredentialsDto.set_SummonerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.AllInstances.SummonerNameGet">
            <summary>Establecer el shim de PlayerCredentialsDto.get_SummonerName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.AllInstances.SummonerNameSetString">
            <summary>Establecer el shim de PlayerCredentialsDto.set_SummonerName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerCredentialsDto.AllInstances.TypeNameGet">
            <summary>Establecer el shim de PlayerCredentialsDto.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Game.PlayerParticipant</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.#ctor(PVPNetConnect.RiotObjects.Platform.Game.PlayerParticipant)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AccountIdGet">
            <summary>Establecer el shim de PlayerParticipant.get_AccountId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AccountIdSetDouble">
            <summary>Establecer el shim de PlayerParticipant.set_AccountId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.BadgesGet">
            <summary>Establecer el shim de PlayerParticipant.get_Badges()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.BadgesSetInt32">
            <summary>Establecer el shim de PlayerParticipant.set_Badges(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.BotDifficultyGet">
            <summary>Establecer el shim de PlayerParticipant.get_BotDifficulty()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.BotDifficultySetString">
            <summary>Establecer el shim de PlayerParticipant.set_BotDifficulty(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.ClientInSynchGet">
            <summary>Establecer el shim de PlayerParticipant.get_ClientInSynch()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.ClientInSynchSetBoolean">
            <summary>Establecer el shim de PlayerParticipant.set_ClientInSynch(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.Constructor">
            <summary>Establecer el shim de PlayerParticipant.PlayerParticipant()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.ConstructorPlayerParticipantCallback">
            <summary>Establecer el shim de PlayerParticipant.PlayerParticipant(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.ConstructorTypedObject">
            <summary>Establecer el shim de PlayerParticipant.PlayerParticipant(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.DoCallbackTypedObject">
            <summary>Establecer el shim de PlayerParticipant.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.IndexGet">
            <summary>Establecer el shim de PlayerParticipant.get_Index()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.IndexSetInt32">
            <summary>Establecer el shim de PlayerParticipant.set_Index(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.LastSelectedSkinIndexGet">
            <summary>Establecer el shim de PlayerParticipant.get_LastSelectedSkinIndex()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.LastSelectedSkinIndexSetInt32">
            <summary>Establecer el shim de PlayerParticipant.set_LastSelectedSkinIndex(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.LocaleGet">
            <summary>Establecer el shim de PlayerParticipant.get_Locale()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.LocaleSetObject">
            <summary>Establecer el shim de PlayerParticipant.set_Locale(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.MinorGet">
            <summary>Establecer el shim de PlayerParticipant.get_Minor()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.MinorSetBoolean">
            <summary>Establecer el shim de PlayerParticipant.set_Minor(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.OriginalAccountNumberGet">
            <summary>Establecer el shim de PlayerParticipant.get_OriginalAccountNumber()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.OriginalAccountNumberSetDouble">
            <summary>Establecer el shim de PlayerParticipant.set_OriginalAccountNumber(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.OriginalPlatformIdGet">
            <summary>Establecer el shim de PlayerParticipant.get_OriginalPlatformId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.OriginalPlatformIdSetString">
            <summary>Establecer el shim de PlayerParticipant.set_OriginalPlatformId(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.PartnerIdGet">
            <summary>Establecer el shim de PlayerParticipant.get_PartnerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.PartnerIdSetString">
            <summary>Establecer el shim de PlayerParticipant.set_PartnerId(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.PickModeGet">
            <summary>Establecer el shim de PlayerParticipant.get_PickMode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.PickModeSetInt32">
            <summary>Establecer el shim de PlayerParticipant.set_PickMode(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.PickTurnGet">
            <summary>Establecer el shim de PlayerParticipant.get_PickTurn()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.PickTurnSetInt32">
            <summary>Establecer el shim de PlayerParticipant.set_PickTurn(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.ProfileIconIdGet">
            <summary>Establecer el shim de PlayerParticipant.get_ProfileIconId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.ProfileIconIdSetInt32">
            <summary>Establecer el shim de PlayerParticipant.set_ProfileIconId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.QueueRatingGet">
            <summary>Establecer el shim de PlayerParticipant.get_QueueRating()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.QueueRatingSetInt32">
            <summary>Establecer el shim de PlayerParticipant.set_QueueRating(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.SummonerIdGet">
            <summary>Establecer el shim de PlayerParticipant.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.SummonerIdSetDouble">
            <summary>Establecer el shim de PlayerParticipant.set_SummonerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.SummonerInternalNameGet">
            <summary>Establecer el shim de PlayerParticipant.get_SummonerInternalName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.SummonerInternalNameSetString">
            <summary>Establecer el shim de PlayerParticipant.set_SummonerInternalName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.SummonerNameGet">
            <summary>Establecer el shim de PlayerParticipant.get_SummonerName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.SummonerNameSetString">
            <summary>Establecer el shim de PlayerParticipant.set_SummonerName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.TeamOwnerGet">
            <summary>Establecer el shim de PlayerParticipant.get_TeamOwner()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.TeamOwnerSetBoolean">
            <summary>Establecer el shim de PlayerParticipant.set_TeamOwner(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.TeamParticipantIdGet">
            <summary>Establecer el shim de PlayerParticipant.get_TeamParticipantId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.TeamParticipantIdSetObject">
            <summary>Establecer el shim de PlayerParticipant.set_TeamParticipantId(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.TimeAddedToQueueGet">
            <summary>Establecer el shim de PlayerParticipant.get_TimeAddedToQueue()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.TimeAddedToQueueSetObject">
            <summary>Establecer el shim de PlayerParticipant.set_TimeAddedToQueue(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.TypeNameGet">
            <summary>Establecer el shim de PlayerParticipant.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.AccountIdGet">
            <summary>Establecer el shim de PlayerParticipant.get_AccountId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.AccountIdSetDouble">
            <summary>Establecer el shim de PlayerParticipant.set_AccountId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.BadgesGet">
            <summary>Establecer el shim de PlayerParticipant.get_Badges()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.BadgesSetInt32">
            <summary>Establecer el shim de PlayerParticipant.set_Badges(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.BotDifficultyGet">
            <summary>Establecer el shim de PlayerParticipant.get_BotDifficulty()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.BotDifficultySetString">
            <summary>Establecer el shim de PlayerParticipant.set_BotDifficulty(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.ClientInSynchGet">
            <summary>Establecer el shim de PlayerParticipant.get_ClientInSynch()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.ClientInSynchSetBoolean">
            <summary>Establecer el shim de PlayerParticipant.set_ClientInSynch(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de PlayerParticipant.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.IndexGet">
            <summary>Establecer el shim de PlayerParticipant.get_Index()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.IndexSetInt32">
            <summary>Establecer el shim de PlayerParticipant.set_Index(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.LastSelectedSkinIndexGet">
            <summary>Establecer el shim de PlayerParticipant.get_LastSelectedSkinIndex()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.LastSelectedSkinIndexSetInt32">
            <summary>Establecer el shim de PlayerParticipant.set_LastSelectedSkinIndex(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.LocaleGet">
            <summary>Establecer el shim de PlayerParticipant.get_Locale()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.LocaleSetObject">
            <summary>Establecer el shim de PlayerParticipant.set_Locale(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.MinorGet">
            <summary>Establecer el shim de PlayerParticipant.get_Minor()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.MinorSetBoolean">
            <summary>Establecer el shim de PlayerParticipant.set_Minor(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.OriginalAccountNumberGet">
            <summary>Establecer el shim de PlayerParticipant.get_OriginalAccountNumber()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.OriginalAccountNumberSetDouble">
            <summary>Establecer el shim de PlayerParticipant.set_OriginalAccountNumber(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.OriginalPlatformIdGet">
            <summary>Establecer el shim de PlayerParticipant.get_OriginalPlatformId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.OriginalPlatformIdSetString">
            <summary>Establecer el shim de PlayerParticipant.set_OriginalPlatformId(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.PartnerIdGet">
            <summary>Establecer el shim de PlayerParticipant.get_PartnerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.PartnerIdSetString">
            <summary>Establecer el shim de PlayerParticipant.set_PartnerId(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.PickModeGet">
            <summary>Establecer el shim de PlayerParticipant.get_PickMode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.PickModeSetInt32">
            <summary>Establecer el shim de PlayerParticipant.set_PickMode(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.PickTurnGet">
            <summary>Establecer el shim de PlayerParticipant.get_PickTurn()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.PickTurnSetInt32">
            <summary>Establecer el shim de PlayerParticipant.set_PickTurn(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.ProfileIconIdGet">
            <summary>Establecer el shim de PlayerParticipant.get_ProfileIconId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.ProfileIconIdSetInt32">
            <summary>Establecer el shim de PlayerParticipant.set_ProfileIconId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.QueueRatingGet">
            <summary>Establecer el shim de PlayerParticipant.get_QueueRating()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.QueueRatingSetInt32">
            <summary>Establecer el shim de PlayerParticipant.set_QueueRating(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.SummonerIdGet">
            <summary>Establecer el shim de PlayerParticipant.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.SummonerIdSetDouble">
            <summary>Establecer el shim de PlayerParticipant.set_SummonerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.SummonerInternalNameGet">
            <summary>Establecer el shim de PlayerParticipant.get_SummonerInternalName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.SummonerInternalNameSetString">
            <summary>Establecer el shim de PlayerParticipant.set_SummonerInternalName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.SummonerNameGet">
            <summary>Establecer el shim de PlayerParticipant.get_SummonerName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.SummonerNameSetString">
            <summary>Establecer el shim de PlayerParticipant.set_SummonerName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.TeamOwnerGet">
            <summary>Establecer el shim de PlayerParticipant.get_TeamOwner()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.TeamOwnerSetBoolean">
            <summary>Establecer el shim de PlayerParticipant.set_TeamOwner(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.TeamParticipantIdGet">
            <summary>Establecer el shim de PlayerParticipant.get_TeamParticipantId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.TeamParticipantIdSetObject">
            <summary>Establecer el shim de PlayerParticipant.set_TeamParticipantId(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.TimeAddedToQueueGet">
            <summary>Establecer el shim de PlayerParticipant.get_TimeAddedToQueue()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.TimeAddedToQueueSetObject">
            <summary>Establecer el shim de PlayerParticipant.set_TimeAddedToQueue(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPlayerParticipant.AllInstances.TypeNameGet">
            <summary>Establecer el shim de PlayerParticipant.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Game.PracticeGameConfig</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.#ctor(PVPNetConnect.RiotObjects.Platform.Game.PracticeGameConfig)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.AllowSpectatorsGet">
            <summary>Establecer el shim de PracticeGameConfig.get_AllowSpectators()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.AllowSpectatorsSetString">
            <summary>Establecer el shim de PracticeGameConfig.set_AllowSpectators(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.Constructor">
            <summary>Establecer el shim de PracticeGameConfig.PracticeGameConfig()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.ConstructorPracticeGameConfigCallback">
            <summary>Establecer el shim de PracticeGameConfig.PracticeGameConfig(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.ConstructorTypedObject">
            <summary>Establecer el shim de PracticeGameConfig.PracticeGameConfig(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.DoCallbackTypedObject">
            <summary>Establecer el shim de PracticeGameConfig.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.GameMapGet">
            <summary>Establecer el shim de PracticeGameConfig.get_GameMap()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.GameMapSetGameMap">
            <summary>Establecer el shim de PracticeGameConfig.set_GameMap(GameMap value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.GameModeGet">
            <summary>Establecer el shim de PracticeGameConfig.get_GameMode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.GameModeSetString">
            <summary>Establecer el shim de PracticeGameConfig.set_GameMode(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.GameNameGet">
            <summary>Establecer el shim de PracticeGameConfig.get_GameName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.GameNameSetString">
            <summary>Establecer el shim de PracticeGameConfig.set_GameName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.GamePasswordGet">
            <summary>Establecer el shim de PracticeGameConfig.get_GamePassword()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.GamePasswordSetString">
            <summary>Establecer el shim de PracticeGameConfig.set_GamePassword(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.GameTypeConfigGet">
            <summary>Establecer el shim de PracticeGameConfig.get_GameTypeConfig()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.GameTypeConfigSetInt32">
            <summary>Establecer el shim de PracticeGameConfig.set_GameTypeConfig(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.MaxNumPlayersGet">
            <summary>Establecer el shim de PracticeGameConfig.get_MaxNumPlayers()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.MaxNumPlayersSetInt32">
            <summary>Establecer el shim de PracticeGameConfig.set_MaxNumPlayers(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.PassbackDataPacketGet">
            <summary>Establecer el shim de PracticeGameConfig.get_PassbackDataPacket()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.PassbackDataPacketSetObject">
            <summary>Establecer el shim de PracticeGameConfig.set_PassbackDataPacket(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.PassbackUrlGet">
            <summary>Establecer el shim de PracticeGameConfig.get_PassbackUrl()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.PassbackUrlSetObject">
            <summary>Establecer el shim de PracticeGameConfig.set_PassbackUrl(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.RegionGet">
            <summary>Establecer el shim de PracticeGameConfig.get_Region()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.RegionSetString">
            <summary>Establecer el shim de PracticeGameConfig.set_Region(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.TypeNameGet">
            <summary>Establecer el shim de PracticeGameConfig.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.AllInstances.AllowSpectatorsGet">
            <summary>Establecer el shim de PracticeGameConfig.get_AllowSpectators()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.AllInstances.AllowSpectatorsSetString">
            <summary>Establecer el shim de PracticeGameConfig.set_AllowSpectators(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de PracticeGameConfig.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.AllInstances.GameMapGet">
            <summary>Establecer el shim de PracticeGameConfig.get_GameMap()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.AllInstances.GameMapSetGameMap">
            <summary>Establecer el shim de PracticeGameConfig.set_GameMap(GameMap value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.AllInstances.GameModeGet">
            <summary>Establecer el shim de PracticeGameConfig.get_GameMode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.AllInstances.GameModeSetString">
            <summary>Establecer el shim de PracticeGameConfig.set_GameMode(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.AllInstances.GameNameGet">
            <summary>Establecer el shim de PracticeGameConfig.get_GameName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.AllInstances.GameNameSetString">
            <summary>Establecer el shim de PracticeGameConfig.set_GameName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.AllInstances.GamePasswordGet">
            <summary>Establecer el shim de PracticeGameConfig.get_GamePassword()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.AllInstances.GamePasswordSetString">
            <summary>Establecer el shim de PracticeGameConfig.set_GamePassword(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.AllInstances.GameTypeConfigGet">
            <summary>Establecer el shim de PracticeGameConfig.get_GameTypeConfig()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.AllInstances.GameTypeConfigSetInt32">
            <summary>Establecer el shim de PracticeGameConfig.set_GameTypeConfig(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.AllInstances.MaxNumPlayersGet">
            <summary>Establecer el shim de PracticeGameConfig.get_MaxNumPlayers()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.AllInstances.MaxNumPlayersSetInt32">
            <summary>Establecer el shim de PracticeGameConfig.set_MaxNumPlayers(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.AllInstances.PassbackDataPacketGet">
            <summary>Establecer el shim de PracticeGameConfig.get_PassbackDataPacket()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.AllInstances.PassbackDataPacketSetObject">
            <summary>Establecer el shim de PracticeGameConfig.set_PassbackDataPacket(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.AllInstances.PassbackUrlGet">
            <summary>Establecer el shim de PracticeGameConfig.get_PassbackUrl()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.AllInstances.PassbackUrlSetObject">
            <summary>Establecer el shim de PracticeGameConfig.set_PassbackUrl(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.AllInstances.RegionGet">
            <summary>Establecer el shim de PracticeGameConfig.get_Region()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.AllInstances.RegionSetString">
            <summary>Establecer el shim de PracticeGameConfig.set_Region(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimPracticeGameConfig.AllInstances.TypeNameGet">
            <summary>Establecer el shim de PracticeGameConfig.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimStartChampSelectDTO">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Game.StartChampSelectDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimStartChampSelectDTO.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimStartChampSelectDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Game.StartChampSelectDTO)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimStartChampSelectDTO.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimStartChampSelectDTO.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimStartChampSelectDTO.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimStartChampSelectDTO.Constructor">
            <summary>Establecer el shim de StartChampSelectDTO.StartChampSelectDTO()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimStartChampSelectDTO.ConstructorStartChampSelectDTOCallback">
            <summary>Establecer el shim de StartChampSelectDTO.StartChampSelectDTO(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimStartChampSelectDTO.ConstructorTypedObject">
            <summary>Establecer el shim de StartChampSelectDTO.StartChampSelectDTO(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimStartChampSelectDTO.DoCallbackTypedObject">
            <summary>Establecer el shim de StartChampSelectDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimStartChampSelectDTO.InvalidPlayersGet">
            <summary>Establecer el shim de StartChampSelectDTO.get_InvalidPlayers()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimStartChampSelectDTO.InvalidPlayersSetListOfObject">
            <summary>Establecer el shim de StartChampSelectDTO.set_InvalidPlayers(List`1&lt;Object&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimStartChampSelectDTO.TypeNameGet">
            <summary>Establecer el shim de StartChampSelectDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimStartChampSelectDTO.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimStartChampSelectDTO.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de StartChampSelectDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimStartChampSelectDTO.AllInstances.InvalidPlayersGet">
            <summary>Establecer el shim de StartChampSelectDTO.get_InvalidPlayers()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimStartChampSelectDTO.AllInstances.InvalidPlayersSetListOfObject">
            <summary>Establecer el shim de StartChampSelectDTO.set_InvalidPlayers(List`1&lt;Object&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.ShimStartChampSelectDTO.AllInstances.TypeNameGet">
            <summary>Establecer el shim de StartChampSelectDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubBannedChampion">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Game.BannedChampion</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubBannedChampion.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubBannedChampion.#ctor(PVPNetConnect.RiotObjects.Platform.Game.BannedChampion.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubBannedChampion.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de BannedChampion.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubBannedChampion.DoCallbackTypedObject">
            <summary>Establecer el stub de BannedChampion.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubBannedChampion.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubBannedChampion</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubBannedChampion.TypeNameGet">
            <summary>Establecer el stub de BannedChampion.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubBannedChampion.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubBannedChampion.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubBannedChampion.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubBannedChampion.TypeName">
            <summary>Establecer el stub de BannedChampion.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubBotParticipant">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Game.BotParticipant</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubBotParticipant.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubBotParticipant.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubBotParticipant.#ctor(PVPNetConnect.RiotObjects.Platform.Game.BotParticipant.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubBotParticipant.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de BotParticipant.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubBotParticipant.DoCallbackTypedObject">
            <summary>Establecer el stub de BotParticipant.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubBotParticipant.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubBotParticipant</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubBotParticipant.TypeNameGet">
            <summary>Establecer el stub de BotParticipant.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubBotParticipant.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubBotParticipant.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubBotParticipant.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubBotParticipant.TypeName">
            <summary>Establecer el stub de BotParticipant.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubChampionBanInfoDTO">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Game.ChampionBanInfoDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubChampionBanInfoDTO.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubChampionBanInfoDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Game.ChampionBanInfoDTO.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubChampionBanInfoDTO.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de ChampionBanInfoDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubChampionBanInfoDTO.DoCallbackTypedObject">
            <summary>Establecer el stub de ChampionBanInfoDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubChampionBanInfoDTO.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubChampionBanInfoDTO</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubChampionBanInfoDTO.TypeNameGet">
            <summary>Establecer el stub de ChampionBanInfoDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubChampionBanInfoDTO.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubChampionBanInfoDTO.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubChampionBanInfoDTO.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubChampionBanInfoDTO.TypeName">
            <summary>Establecer el stub de ChampionBanInfoDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubGameDTO">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Game.GameDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubGameDTO.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubGameDTO.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubGameDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Game.GameDTO.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubGameDTO.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de GameDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubGameDTO.DoCallbackTypedObject">
            <summary>Establecer el stub de GameDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubGameDTO.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubGameDTO</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubGameDTO.TypeNameGet">
            <summary>Establecer el stub de GameDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubGameDTO.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubGameDTO.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubGameDTO.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubGameDTO.TypeName">
            <summary>Establecer el stub de GameDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubGameObserver">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Game.GameObserver</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubGameObserver.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubGameObserver.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubGameObserver.#ctor(PVPNetConnect.RiotObjects.Platform.Game.GameObserver.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubGameObserver.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de GameObserver.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubGameObserver.DoCallbackTypedObject">
            <summary>Establecer el stub de GameObserver.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubGameObserver.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubGameObserver</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubGameObserver.TypeNameGet">
            <summary>Establecer el stub de GameObserver.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubGameObserver.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubGameObserver.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubGameObserver.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubGameObserver.TypeName">
            <summary>Establecer el stub de GameObserver.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubGameTypeConfigDTO">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Game.GameTypeConfigDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubGameTypeConfigDTO.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubGameTypeConfigDTO.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubGameTypeConfigDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Game.GameTypeConfigDTO.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubGameTypeConfigDTO.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de GameTypeConfigDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubGameTypeConfigDTO.DoCallbackTypedObject">
            <summary>Establecer el stub de GameTypeConfigDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubGameTypeConfigDTO.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubGameTypeConfigDTO</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubGameTypeConfigDTO.TypeNameGet">
            <summary>Establecer el stub de GameTypeConfigDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubGameTypeConfigDTO.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubGameTypeConfigDTO.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubGameTypeConfigDTO.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubGameTypeConfigDTO.TypeName">
            <summary>Establecer el stub de GameTypeConfigDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubObfuscatedParticipant">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Game.ObfuscatedParticipant</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubObfuscatedParticipant.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubObfuscatedParticipant.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubObfuscatedParticipant.#ctor(PVPNetConnect.RiotObjects.Platform.Game.ObfuscatedParticipant.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubObfuscatedParticipant.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de ObfuscatedParticipant.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubObfuscatedParticipant.DoCallbackTypedObject">
            <summary>Establecer el stub de ObfuscatedParticipant.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubObfuscatedParticipant.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubObfuscatedParticipant</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubObfuscatedParticipant.TypeNameGet">
            <summary>Establecer el stub de ObfuscatedParticipant.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubObfuscatedParticipant.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubObfuscatedParticipant.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubObfuscatedParticipant.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubObfuscatedParticipant.TypeName">
            <summary>Establecer el stub de ObfuscatedParticipant.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubParticipant">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Game.Participant</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubParticipant.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubParticipant.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubParticipant.#ctor(PVPNetConnect.RiotObjects.Platform.Game.Participant.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubParticipant.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de Participant.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubParticipant.DoCallbackTypedObject">
            <summary>Establecer el stub de Participant.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubParticipant.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubParticipant</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubParticipant.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubParticipant.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubParticipant.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlatformGameLifecycleDTO">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Game.PlatformGameLifecycleDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlatformGameLifecycleDTO.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlatformGameLifecycleDTO.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlatformGameLifecycleDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Game.PlatformGameLifecycleDTO.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlatformGameLifecycleDTO.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de PlatformGameLifecycleDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlatformGameLifecycleDTO.DoCallbackTypedObject">
            <summary>Establecer el stub de PlatformGameLifecycleDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlatformGameLifecycleDTO.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPlatformGameLifecycleDTO</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlatformGameLifecycleDTO.TypeNameGet">
            <summary>Establecer el stub de PlatformGameLifecycleDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlatformGameLifecycleDTO.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlatformGameLifecycleDTO.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlatformGameLifecycleDTO.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlatformGameLifecycleDTO.TypeName">
            <summary>Establecer el stub de PlatformGameLifecycleDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlayerChampionSelectionDTO">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Game.PlayerChampionSelectionDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlayerChampionSelectionDTO.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlayerChampionSelectionDTO.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlayerChampionSelectionDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Game.PlayerChampionSelectionDTO.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlayerChampionSelectionDTO.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de PlayerChampionSelectionDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlayerChampionSelectionDTO.DoCallbackTypedObject">
            <summary>Establecer el stub de PlayerChampionSelectionDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlayerChampionSelectionDTO.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPlayerChampionSelectionDTO</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlayerChampionSelectionDTO.TypeNameGet">
            <summary>Establecer el stub de PlayerChampionSelectionDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlayerChampionSelectionDTO.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlayerChampionSelectionDTO.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlayerChampionSelectionDTO.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlayerChampionSelectionDTO.TypeName">
            <summary>Establecer el stub de PlayerChampionSelectionDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlayerCredentialsDto">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Game.PlayerCredentialsDto</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlayerCredentialsDto.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlayerCredentialsDto.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlayerCredentialsDto.#ctor(PVPNetConnect.RiotObjects.Platform.Game.PlayerCredentialsDto.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlayerCredentialsDto.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de PlayerCredentialsDto.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlayerCredentialsDto.DoCallbackTypedObject">
            <summary>Establecer el stub de PlayerCredentialsDto.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlayerCredentialsDto.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPlayerCredentialsDto</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlayerCredentialsDto.TypeNameGet">
            <summary>Establecer el stub de PlayerCredentialsDto.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlayerCredentialsDto.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlayerCredentialsDto.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlayerCredentialsDto.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlayerCredentialsDto.TypeName">
            <summary>Establecer el stub de PlayerCredentialsDto.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlayerParticipant">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Game.PlayerParticipant</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlayerParticipant.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlayerParticipant.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlayerParticipant.#ctor(PVPNetConnect.RiotObjects.Platform.Game.PlayerParticipant.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlayerParticipant.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de PlayerParticipant.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlayerParticipant.DoCallbackTypedObject">
            <summary>Establecer el stub de PlayerParticipant.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlayerParticipant.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPlayerParticipant</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlayerParticipant.TypeNameGet">
            <summary>Establecer el stub de PlayerParticipant.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlayerParticipant.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlayerParticipant.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlayerParticipant.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPlayerParticipant.TypeName">
            <summary>Establecer el stub de PlayerParticipant.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPracticeGameConfig">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Game.PracticeGameConfig</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPracticeGameConfig.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPracticeGameConfig.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPracticeGameConfig.#ctor(PVPNetConnect.RiotObjects.Platform.Game.PracticeGameConfig.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPracticeGameConfig.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de PracticeGameConfig.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPracticeGameConfig.DoCallbackTypedObject">
            <summary>Establecer el stub de PracticeGameConfig.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPracticeGameConfig.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPracticeGameConfig</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPracticeGameConfig.TypeNameGet">
            <summary>Establecer el stub de PracticeGameConfig.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPracticeGameConfig.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPracticeGameConfig.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPracticeGameConfig.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubPracticeGameConfig.TypeName">
            <summary>Establecer el stub de PracticeGameConfig.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubStartChampSelectDTO">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Game.StartChampSelectDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubStartChampSelectDTO.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubStartChampSelectDTO.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubStartChampSelectDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Game.StartChampSelectDTO.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubStartChampSelectDTO.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de StartChampSelectDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubStartChampSelectDTO.DoCallbackTypedObject">
            <summary>Establecer el stub de StartChampSelectDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubStartChampSelectDTO.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubStartChampSelectDTO</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubStartChampSelectDTO.TypeNameGet">
            <summary>Establecer el stub de StartChampSelectDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubStartChampSelectDTO.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubStartChampSelectDTO.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubStartChampSelectDTO.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Fakes.StubStartChampSelectDTO.TypeName">
            <summary>Establecer el stub de StartChampSelectDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.ShimGameMap">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Game.Map.GameMap</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.ShimGameMap.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.ShimGameMap.#ctor(PVPNetConnect.RiotObjects.Platform.Game.Map.GameMap)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.ShimGameMap.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.ShimGameMap.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.ShimGameMap.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.ShimGameMap.Constructor">
            <summary>Establecer el shim de GameMap.GameMap()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.ShimGameMap.ConstructorGameMapCallback">
            <summary>Establecer el shim de GameMap.GameMap(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.ShimGameMap.ConstructorTypedObject">
            <summary>Establecer el shim de GameMap.GameMap(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.ShimGameMap.DescriptionGet">
            <summary>Establecer el shim de GameMap.get_Description()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.ShimGameMap.DescriptionSetString">
            <summary>Establecer el shim de GameMap.set_Description(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.ShimGameMap.DisplayNameGet">
            <summary>Establecer el shim de GameMap.get_DisplayName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.ShimGameMap.DisplayNameSetString">
            <summary>Establecer el shim de GameMap.set_DisplayName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.ShimGameMap.DoCallbackTypedObject">
            <summary>Establecer el shim de GameMap.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.ShimGameMap.MapIdGet">
            <summary>Establecer el shim de GameMap.get_MapId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.ShimGameMap.MapIdSetInt32">
            <summary>Establecer el shim de GameMap.set_MapId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.ShimGameMap.MinCustomPlayersGet">
            <summary>Establecer el shim de GameMap.get_MinCustomPlayers()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.ShimGameMap.MinCustomPlayersSetInt32">
            <summary>Establecer el shim de GameMap.set_MinCustomPlayers(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.ShimGameMap.NameGet">
            <summary>Establecer el shim de GameMap.get_Name()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.ShimGameMap.NameSetString">
            <summary>Establecer el shim de GameMap.set_Name(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.ShimGameMap.StaticConstructor">
            <summary>Establecer el shim de GameMap.GameMap()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.ShimGameMap.TotalPlayersGet">
            <summary>Establecer el shim de GameMap.get_TotalPlayers()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.ShimGameMap.TotalPlayersSetInt32">
            <summary>Establecer el shim de GameMap.set_TotalPlayers(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.ShimGameMap.TypeNameGet">
            <summary>Establecer el shim de GameMap.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.ShimGameMap.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.ShimGameMap.AllInstances.DescriptionGet">
            <summary>Establecer el shim de GameMap.get_Description()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.ShimGameMap.AllInstances.DescriptionSetString">
            <summary>Establecer el shim de GameMap.set_Description(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.ShimGameMap.AllInstances.DisplayNameGet">
            <summary>Establecer el shim de GameMap.get_DisplayName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.ShimGameMap.AllInstances.DisplayNameSetString">
            <summary>Establecer el shim de GameMap.set_DisplayName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.ShimGameMap.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de GameMap.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.ShimGameMap.AllInstances.MapIdGet">
            <summary>Establecer el shim de GameMap.get_MapId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.ShimGameMap.AllInstances.MapIdSetInt32">
            <summary>Establecer el shim de GameMap.set_MapId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.ShimGameMap.AllInstances.MinCustomPlayersGet">
            <summary>Establecer el shim de GameMap.get_MinCustomPlayers()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.ShimGameMap.AllInstances.MinCustomPlayersSetInt32">
            <summary>Establecer el shim de GameMap.set_MinCustomPlayers(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.ShimGameMap.AllInstances.NameGet">
            <summary>Establecer el shim de GameMap.get_Name()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.ShimGameMap.AllInstances.NameSetString">
            <summary>Establecer el shim de GameMap.set_Name(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.ShimGameMap.AllInstances.TotalPlayersGet">
            <summary>Establecer el shim de GameMap.get_TotalPlayers()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.ShimGameMap.AllInstances.TotalPlayersSetInt32">
            <summary>Establecer el shim de GameMap.set_TotalPlayers(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.ShimGameMap.AllInstances.TypeNameGet">
            <summary>Establecer el shim de GameMap.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.StubGameMap">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Game.Map.GameMap</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.StubGameMap.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.StubGameMap.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.StubGameMap.#ctor(PVPNetConnect.RiotObjects.Platform.Game.Map.GameMap.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.StubGameMap.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de GameMap.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.StubGameMap.DoCallbackTypedObject">
            <summary>Establecer el stub de GameMap.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.StubGameMap.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubGameMap</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.StubGameMap.TypeNameGet">
            <summary>Establecer el stub de GameMap.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.StubGameMap.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.StubGameMap.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.StubGameMap.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Map.Fakes.StubGameMap.TypeName">
            <summary>Establecer el stub de GameMap.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Message.Fakes.ShimGameNotification">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Game.Message.GameNotification</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Message.Fakes.ShimGameNotification.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Message.Fakes.ShimGameNotification.#ctor(PVPNetConnect.RiotObjects.Platform.Game.Message.GameNotification)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Message.Fakes.ShimGameNotification.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Message.Fakes.ShimGameNotification.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Message.Fakes.ShimGameNotification.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Message.Fakes.ShimGameNotification.Constructor">
            <summary>Establecer el shim de GameNotification.GameNotification()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Message.Fakes.ShimGameNotification.ConstructorGameNotificationCallback">
            <summary>Establecer el shim de GameNotification.GameNotification(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Message.Fakes.ShimGameNotification.ConstructorTypedObject">
            <summary>Establecer el shim de GameNotification.GameNotification(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Message.Fakes.ShimGameNotification.DoCallbackTypedObject">
            <summary>Establecer el shim de GameNotification.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Message.Fakes.ShimGameNotification.MessageArgumentGet">
            <summary>Establecer el shim de GameNotification.get_MessageArgument()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Message.Fakes.ShimGameNotification.MessageArgumentSetObject">
            <summary>Establecer el shim de GameNotification.set_MessageArgument(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Message.Fakes.ShimGameNotification.MessageCodeGet">
            <summary>Establecer el shim de GameNotification.get_MessageCode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Message.Fakes.ShimGameNotification.MessageCodeSetString">
            <summary>Establecer el shim de GameNotification.set_MessageCode(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Message.Fakes.ShimGameNotification.TypeGet">
            <summary>Establecer el shim de GameNotification.get_Type()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Message.Fakes.ShimGameNotification.TypeNameGet">
            <summary>Establecer el shim de GameNotification.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Message.Fakes.ShimGameNotification.TypeSetString">
            <summary>Establecer el shim de GameNotification.set_Type(String value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Message.Fakes.ShimGameNotification.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Message.Fakes.ShimGameNotification.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de GameNotification.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Message.Fakes.ShimGameNotification.AllInstances.MessageArgumentGet">
            <summary>Establecer el shim de GameNotification.get_MessageArgument()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Message.Fakes.ShimGameNotification.AllInstances.MessageArgumentSetObject">
            <summary>Establecer el shim de GameNotification.set_MessageArgument(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Message.Fakes.ShimGameNotification.AllInstances.MessageCodeGet">
            <summary>Establecer el shim de GameNotification.get_MessageCode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Message.Fakes.ShimGameNotification.AllInstances.MessageCodeSetString">
            <summary>Establecer el shim de GameNotification.set_MessageCode(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Message.Fakes.ShimGameNotification.AllInstances.TypeGet">
            <summary>Establecer el shim de GameNotification.get_Type()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Message.Fakes.ShimGameNotification.AllInstances.TypeNameGet">
            <summary>Establecer el shim de GameNotification.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Message.Fakes.ShimGameNotification.AllInstances.TypeSetString">
            <summary>Establecer el shim de GameNotification.set_Type(String value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Message.Fakes.StubGameNotification">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Game.Message.GameNotification</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Message.Fakes.StubGameNotification.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Message.Fakes.StubGameNotification.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Message.Fakes.StubGameNotification.#ctor(PVPNetConnect.RiotObjects.Platform.Game.Message.GameNotification.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Message.Fakes.StubGameNotification.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de GameNotification.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Game.Message.Fakes.StubGameNotification.DoCallbackTypedObject">
            <summary>Establecer el stub de GameNotification.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Message.Fakes.StubGameNotification.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubGameNotification</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Game.Message.Fakes.StubGameNotification.TypeNameGet">
            <summary>Establecer el stub de GameNotification.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Message.Fakes.StubGameNotification.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Message.Fakes.StubGameNotification.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Message.Fakes.StubGameNotification.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Message.Fakes.StubGameNotification.TypeName">
            <summary>Establecer el stub de GameNotification.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Game.Practice.PracticeGameSearchResult</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.#ctor(PVPNetConnect.RiotObjects.Platform.Game.Practice.PracticeGameSearchResult)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.AllowSpectatorsGet">
            <summary>Establecer el shim de PracticeGameSearchResult.get_AllowSpectators()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.AllowSpectatorsSetString">
            <summary>Establecer el shim de PracticeGameSearchResult.set_AllowSpectators(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.Constructor">
            <summary>Establecer el shim de PracticeGameSearchResult.PracticeGameSearchResult()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.ConstructorPracticeGameSearchResultCallback">
            <summary>Establecer el shim de PracticeGameSearchResult.PracticeGameSearchResult(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.ConstructorTypedObject">
            <summary>Establecer el shim de PracticeGameSearchResult.PracticeGameSearchResult(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.DoCallbackTypedObject">
            <summary>Establecer el shim de PracticeGameSearchResult.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.GameMapIdGet">
            <summary>Establecer el shim de PracticeGameSearchResult.get_GameMapId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.GameMapIdSetInt32">
            <summary>Establecer el shim de PracticeGameSearchResult.set_GameMapId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.GameModeGet">
            <summary>Establecer el shim de PracticeGameSearchResult.get_GameMode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.GameModeSetString">
            <summary>Establecer el shim de PracticeGameSearchResult.set_GameMode(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.GameModeStringGet">
            <summary>Establecer el shim de PracticeGameSearchResult.get_GameModeString()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.GameModeStringSetString">
            <summary>Establecer el shim de PracticeGameSearchResult.set_GameModeString(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.GlmGameIdGet">
            <summary>Establecer el shim de PracticeGameSearchResult.get_GlmGameId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.GlmGameIdSetObject">
            <summary>Establecer el shim de PracticeGameSearchResult.set_GlmGameId(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.GlmHostGet">
            <summary>Establecer el shim de PracticeGameSearchResult.get_GlmHost()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.GlmHostSetObject">
            <summary>Establecer el shim de PracticeGameSearchResult.set_GlmHost(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.GlmPortGet">
            <summary>Establecer el shim de PracticeGameSearchResult.get_GlmPort()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.GlmPortSetInt32">
            <summary>Establecer el shim de PracticeGameSearchResult.set_GlmPort(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.GlmSecurePortGet">
            <summary>Establecer el shim de PracticeGameSearchResult.get_GlmSecurePort()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.GlmSecurePortSetInt32">
            <summary>Establecer el shim de PracticeGameSearchResult.set_GlmSecurePort(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.IdGet">
            <summary>Establecer el shim de PracticeGameSearchResult.get_Id()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.IdSetDouble">
            <summary>Establecer el shim de PracticeGameSearchResult.set_Id(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.MaxNumPlayersGet">
            <summary>Establecer el shim de PracticeGameSearchResult.get_MaxNumPlayers()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.MaxNumPlayersSetInt32">
            <summary>Establecer el shim de PracticeGameSearchResult.set_MaxNumPlayers(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.NameGet">
            <summary>Establecer el shim de PracticeGameSearchResult.get_Name()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.NameSetString">
            <summary>Establecer el shim de PracticeGameSearchResult.set_Name(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.OwnerGet">
            <summary>Establecer el shim de PracticeGameSearchResult.get_Owner()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.OwnerSetPlayerParticipant">
            <summary>Establecer el shim de PracticeGameSearchResult.set_Owner(PlayerParticipant value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.PrivateGameGet">
            <summary>Establecer el shim de PracticeGameSearchResult.get_PrivateGame()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.PrivateGameSetBoolean">
            <summary>Establecer el shim de PracticeGameSearchResult.set_PrivateGame(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.SpectatorCountGet">
            <summary>Establecer el shim de PracticeGameSearchResult.get_SpectatorCount()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.SpectatorCountSetInt32">
            <summary>Establecer el shim de PracticeGameSearchResult.set_SpectatorCount(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.Team1CountGet">
            <summary>Establecer el shim de PracticeGameSearchResult.get_Team1Count()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.Team1CountSetInt32">
            <summary>Establecer el shim de PracticeGameSearchResult.set_Team1Count(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.Team2CountGet">
            <summary>Establecer el shim de PracticeGameSearchResult.get_Team2Count()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.Team2CountSetInt32">
            <summary>Establecer el shim de PracticeGameSearchResult.set_Team2Count(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.TypeNameGet">
            <summary>Establecer el shim de PracticeGameSearchResult.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.AllInstances.AllowSpectatorsGet">
            <summary>Establecer el shim de PracticeGameSearchResult.get_AllowSpectators()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.AllInstances.AllowSpectatorsSetString">
            <summary>Establecer el shim de PracticeGameSearchResult.set_AllowSpectators(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de PracticeGameSearchResult.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.AllInstances.GameMapIdGet">
            <summary>Establecer el shim de PracticeGameSearchResult.get_GameMapId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.AllInstances.GameMapIdSetInt32">
            <summary>Establecer el shim de PracticeGameSearchResult.set_GameMapId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.AllInstances.GameModeGet">
            <summary>Establecer el shim de PracticeGameSearchResult.get_GameMode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.AllInstances.GameModeSetString">
            <summary>Establecer el shim de PracticeGameSearchResult.set_GameMode(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.AllInstances.GameModeStringGet">
            <summary>Establecer el shim de PracticeGameSearchResult.get_GameModeString()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.AllInstances.GameModeStringSetString">
            <summary>Establecer el shim de PracticeGameSearchResult.set_GameModeString(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.AllInstances.GlmGameIdGet">
            <summary>Establecer el shim de PracticeGameSearchResult.get_GlmGameId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.AllInstances.GlmGameIdSetObject">
            <summary>Establecer el shim de PracticeGameSearchResult.set_GlmGameId(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.AllInstances.GlmHostGet">
            <summary>Establecer el shim de PracticeGameSearchResult.get_GlmHost()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.AllInstances.GlmHostSetObject">
            <summary>Establecer el shim de PracticeGameSearchResult.set_GlmHost(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.AllInstances.GlmPortGet">
            <summary>Establecer el shim de PracticeGameSearchResult.get_GlmPort()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.AllInstances.GlmPortSetInt32">
            <summary>Establecer el shim de PracticeGameSearchResult.set_GlmPort(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.AllInstances.GlmSecurePortGet">
            <summary>Establecer el shim de PracticeGameSearchResult.get_GlmSecurePort()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.AllInstances.GlmSecurePortSetInt32">
            <summary>Establecer el shim de PracticeGameSearchResult.set_GlmSecurePort(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.AllInstances.IdGet">
            <summary>Establecer el shim de PracticeGameSearchResult.get_Id()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.AllInstances.IdSetDouble">
            <summary>Establecer el shim de PracticeGameSearchResult.set_Id(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.AllInstances.MaxNumPlayersGet">
            <summary>Establecer el shim de PracticeGameSearchResult.get_MaxNumPlayers()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.AllInstances.MaxNumPlayersSetInt32">
            <summary>Establecer el shim de PracticeGameSearchResult.set_MaxNumPlayers(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.AllInstances.NameGet">
            <summary>Establecer el shim de PracticeGameSearchResult.get_Name()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.AllInstances.NameSetString">
            <summary>Establecer el shim de PracticeGameSearchResult.set_Name(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.AllInstances.OwnerGet">
            <summary>Establecer el shim de PracticeGameSearchResult.get_Owner()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.AllInstances.OwnerSetPlayerParticipant">
            <summary>Establecer el shim de PracticeGameSearchResult.set_Owner(PlayerParticipant value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.AllInstances.PrivateGameGet">
            <summary>Establecer el shim de PracticeGameSearchResult.get_PrivateGame()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.AllInstances.PrivateGameSetBoolean">
            <summary>Establecer el shim de PracticeGameSearchResult.set_PrivateGame(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.AllInstances.SpectatorCountGet">
            <summary>Establecer el shim de PracticeGameSearchResult.get_SpectatorCount()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.AllInstances.SpectatorCountSetInt32">
            <summary>Establecer el shim de PracticeGameSearchResult.set_SpectatorCount(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.AllInstances.Team1CountGet">
            <summary>Establecer el shim de PracticeGameSearchResult.get_Team1Count()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.AllInstances.Team1CountSetInt32">
            <summary>Establecer el shim de PracticeGameSearchResult.set_Team1Count(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.AllInstances.Team2CountGet">
            <summary>Establecer el shim de PracticeGameSearchResult.get_Team2Count()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.AllInstances.Team2CountSetInt32">
            <summary>Establecer el shim de PracticeGameSearchResult.set_Team2Count(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.ShimPracticeGameSearchResult.AllInstances.TypeNameGet">
            <summary>Establecer el shim de PracticeGameSearchResult.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.StubPracticeGameSearchResult">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Game.Practice.PracticeGameSearchResult</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.StubPracticeGameSearchResult.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.StubPracticeGameSearchResult.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.StubPracticeGameSearchResult.#ctor(PVPNetConnect.RiotObjects.Platform.Game.Practice.PracticeGameSearchResult.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.StubPracticeGameSearchResult.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de PracticeGameSearchResult.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.StubPracticeGameSearchResult.DoCallbackTypedObject">
            <summary>Establecer el stub de PracticeGameSearchResult.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.StubPracticeGameSearchResult.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPracticeGameSearchResult</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.StubPracticeGameSearchResult.TypeNameGet">
            <summary>Establecer el stub de PracticeGameSearchResult.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.StubPracticeGameSearchResult.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.StubPracticeGameSearchResult.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.StubPracticeGameSearchResult.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Game.Practice.Fakes.StubPracticeGameSearchResult.TypeName">
            <summary>Establecer el stub de PracticeGameSearchResult.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Harassment.Fakes.ShimLcdsResponseString">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Harassment.LcdsResponseString</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Harassment.Fakes.ShimLcdsResponseString.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Harassment.Fakes.ShimLcdsResponseString.#ctor(PVPNetConnect.RiotObjects.Platform.Harassment.LcdsResponseString)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Harassment.Fakes.ShimLcdsResponseString.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Harassment.Fakes.ShimLcdsResponseString.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Harassment.Fakes.ShimLcdsResponseString.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Harassment.Fakes.ShimLcdsResponseString.Constructor">
            <summary>Establecer el shim de LcdsResponseString.LcdsResponseString()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Harassment.Fakes.ShimLcdsResponseString.ConstructorLcdsResponseStringCallback">
            <summary>Establecer el shim de LcdsResponseString.LcdsResponseString(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Harassment.Fakes.ShimLcdsResponseString.ConstructorTypedObject">
            <summary>Establecer el shim de LcdsResponseString.LcdsResponseString(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Harassment.Fakes.ShimLcdsResponseString.DoCallbackTypedObject">
            <summary>Establecer el shim de LcdsResponseString.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Harassment.Fakes.ShimLcdsResponseString.TypeNameGet">
            <summary>Establecer el shim de LcdsResponseString.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Harassment.Fakes.ShimLcdsResponseString.ValueGet">
            <summary>Establecer el shim de LcdsResponseString.get_Value()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Harassment.Fakes.ShimLcdsResponseString.ValueSetString">
            <summary>Establecer el shim de LcdsResponseString.set_Value(String value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Harassment.Fakes.ShimLcdsResponseString.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Harassment.Fakes.ShimLcdsResponseString.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de LcdsResponseString.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Harassment.Fakes.ShimLcdsResponseString.AllInstances.TypeNameGet">
            <summary>Establecer el shim de LcdsResponseString.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Harassment.Fakes.ShimLcdsResponseString.AllInstances.ValueGet">
            <summary>Establecer el shim de LcdsResponseString.get_Value()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Harassment.Fakes.ShimLcdsResponseString.AllInstances.ValueSetString">
            <summary>Establecer el shim de LcdsResponseString.set_Value(String value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Harassment.Fakes.StubLcdsResponseString">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Harassment.LcdsResponseString</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Harassment.Fakes.StubLcdsResponseString.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Harassment.Fakes.StubLcdsResponseString.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Harassment.Fakes.StubLcdsResponseString.#ctor(PVPNetConnect.RiotObjects.Platform.Harassment.LcdsResponseString.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Harassment.Fakes.StubLcdsResponseString.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de LcdsResponseString.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Harassment.Fakes.StubLcdsResponseString.DoCallbackTypedObject">
            <summary>Establecer el stub de LcdsResponseString.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Harassment.Fakes.StubLcdsResponseString.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubLcdsResponseString</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Harassment.Fakes.StubLcdsResponseString.TypeNameGet">
            <summary>Establecer el stub de LcdsResponseString.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Harassment.Fakes.StubLcdsResponseString.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Harassment.Fakes.StubLcdsResponseString.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Harassment.Fakes.StubLcdsResponseString.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Harassment.Fakes.StubLcdsResponseString.TypeName">
            <summary>Establecer el stub de LcdsResponseString.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.ShimSummonerLeagueItemsDTO">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.SummonerLeagueItemsDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.ShimSummonerLeagueItemsDTO.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.ShimSummonerLeagueItemsDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.SummonerLeagueItemsDTO)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.ShimSummonerLeagueItemsDTO.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.ShimSummonerLeagueItemsDTO.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.ShimSummonerLeagueItemsDTO.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.ShimSummonerLeagueItemsDTO.Constructor">
            <summary>Establecer el shim de SummonerLeagueItemsDTO.SummonerLeagueItemsDTO()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.ShimSummonerLeagueItemsDTO.ConstructorSummonerLeagueItemsDTOCallback">
            <summary>Establecer el shim de SummonerLeagueItemsDTO.SummonerLeagueItemsDTO(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.ShimSummonerLeagueItemsDTO.ConstructorTypedObject">
            <summary>Establecer el shim de SummonerLeagueItemsDTO.SummonerLeagueItemsDTO(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.ShimSummonerLeagueItemsDTO.DoCallbackTypedObject">
            <summary>Establecer el shim de SummonerLeagueItemsDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.ShimSummonerLeagueItemsDTO.SummonerLeaguesGet">
            <summary>Establecer el shim de SummonerLeagueItemsDTO.get_SummonerLeagues()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.ShimSummonerLeagueItemsDTO.SummonerLeaguesSetListOfLeagueItemDTO">
            <summary>Establecer el shim de SummonerLeagueItemsDTO.set_SummonerLeagues(List`1&lt;LeagueItemDTO&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.ShimSummonerLeagueItemsDTO.TypeNameGet">
            <summary>Establecer el shim de SummonerLeagueItemsDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.ShimSummonerLeagueItemsDTO.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.ShimSummonerLeagueItemsDTO.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de SummonerLeagueItemsDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.ShimSummonerLeagueItemsDTO.AllInstances.SummonerLeaguesGet">
            <summary>Establecer el shim de SummonerLeagueItemsDTO.get_SummonerLeagues()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.ShimSummonerLeagueItemsDTO.AllInstances.SummonerLeaguesSetListOfLeagueItemDTO">
            <summary>Establecer el shim de SummonerLeagueItemsDTO.set_SummonerLeagues(List`1&lt;LeagueItemDTO&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.ShimSummonerLeagueItemsDTO.AllInstances.TypeNameGet">
            <summary>Establecer el shim de SummonerLeagueItemsDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.ShimSummonerLeaguesDTO">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.SummonerLeaguesDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.ShimSummonerLeaguesDTO.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.ShimSummonerLeaguesDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.SummonerLeaguesDTO)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.ShimSummonerLeaguesDTO.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.ShimSummonerLeaguesDTO.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.ShimSummonerLeaguesDTO.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.ShimSummonerLeaguesDTO.Constructor">
            <summary>Establecer el shim de SummonerLeaguesDTO.SummonerLeaguesDTO()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.ShimSummonerLeaguesDTO.ConstructorSummonerLeaguesDTOCallback">
            <summary>Establecer el shim de SummonerLeaguesDTO.SummonerLeaguesDTO(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.ShimSummonerLeaguesDTO.ConstructorTypedObject">
            <summary>Establecer el shim de SummonerLeaguesDTO.SummonerLeaguesDTO(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.ShimSummonerLeaguesDTO.DoCallbackTypedObject">
            <summary>Establecer el shim de SummonerLeaguesDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.ShimSummonerLeaguesDTO.SummonerLeaguesGet">
            <summary>Establecer el shim de SummonerLeaguesDTO.get_SummonerLeagues()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.ShimSummonerLeaguesDTO.SummonerLeaguesSetListOfLeagueListDTO">
            <summary>Establecer el shim de SummonerLeaguesDTO.set_SummonerLeagues(List`1&lt;LeagueListDTO&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.ShimSummonerLeaguesDTO.TypeNameGet">
            <summary>Establecer el shim de SummonerLeaguesDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.ShimSummonerLeaguesDTO.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.ShimSummonerLeaguesDTO.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de SummonerLeaguesDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.ShimSummonerLeaguesDTO.AllInstances.SummonerLeaguesGet">
            <summary>Establecer el shim de SummonerLeaguesDTO.get_SummonerLeagues()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.ShimSummonerLeaguesDTO.AllInstances.SummonerLeaguesSetListOfLeagueListDTO">
            <summary>Establecer el shim de SummonerLeaguesDTO.set_SummonerLeagues(List`1&lt;LeagueListDTO&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.ShimSummonerLeaguesDTO.AllInstances.TypeNameGet">
            <summary>Establecer el shim de SummonerLeaguesDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.StubSummonerLeagueItemsDTO">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.SummonerLeagueItemsDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.StubSummonerLeagueItemsDTO.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.StubSummonerLeagueItemsDTO.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.StubSummonerLeagueItemsDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.SummonerLeagueItemsDTO.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.StubSummonerLeagueItemsDTO.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de SummonerLeagueItemsDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.StubSummonerLeagueItemsDTO.DoCallbackTypedObject">
            <summary>Establecer el stub de SummonerLeagueItemsDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.StubSummonerLeagueItemsDTO.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubSummonerLeagueItemsDTO</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.StubSummonerLeagueItemsDTO.TypeNameGet">
            <summary>Establecer el stub de SummonerLeagueItemsDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.StubSummonerLeagueItemsDTO.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.StubSummonerLeagueItemsDTO.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.StubSummonerLeagueItemsDTO.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.StubSummonerLeagueItemsDTO.TypeName">
            <summary>Establecer el stub de SummonerLeagueItemsDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.StubSummonerLeaguesDTO">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.SummonerLeaguesDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.StubSummonerLeaguesDTO.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.StubSummonerLeaguesDTO.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.StubSummonerLeaguesDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.SummonerLeaguesDTO.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.StubSummonerLeaguesDTO.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de SummonerLeaguesDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.StubSummonerLeaguesDTO.DoCallbackTypedObject">
            <summary>Establecer el stub de SummonerLeaguesDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.StubSummonerLeaguesDTO.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubSummonerLeaguesDTO</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.StubSummonerLeaguesDTO.TypeNameGet">
            <summary>Establecer el stub de SummonerLeaguesDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.StubSummonerLeaguesDTO.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.StubSummonerLeaguesDTO.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.StubSummonerLeaguesDTO.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Leagues.Client.Dto.Fakes.StubSummonerLeaguesDTO.TypeName">
            <summary>Establecer el stub de SummonerLeaguesDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Login.AuthenticationCredentials</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.#ctor(PVPNetConnect.RiotObjects.Platform.Login.AuthenticationCredentials)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.AuthTokenGet">
            <summary>Establecer el shim de AuthenticationCredentials.get_AuthToken()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.AuthTokenSetString">
            <summary>Establecer el shim de AuthenticationCredentials.set_AuthToken(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.ClientVersionGet">
            <summary>Establecer el shim de AuthenticationCredentials.get_ClientVersion()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.ClientVersionSetString">
            <summary>Establecer el shim de AuthenticationCredentials.set_ClientVersion(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.Constructor">
            <summary>Establecer el shim de AuthenticationCredentials.AuthenticationCredentials()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.ConstructorAuthenticationCredentialsCallback">
            <summary>Establecer el shim de AuthenticationCredentials.AuthenticationCredentials(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.ConstructorTypedObject">
            <summary>Establecer el shim de AuthenticationCredentials.AuthenticationCredentials(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.DoCallbackTypedObject">
            <summary>Establecer el shim de AuthenticationCredentials.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.DomainGet">
            <summary>Establecer el shim de AuthenticationCredentials.get_Domain()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.DomainSetString">
            <summary>Establecer el shim de AuthenticationCredentials.set_Domain(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.IpAddressGet">
            <summary>Establecer el shim de AuthenticationCredentials.get_IpAddress()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.IpAddressSetString">
            <summary>Establecer el shim de AuthenticationCredentials.set_IpAddress(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.LocaleGet">
            <summary>Establecer el shim de AuthenticationCredentials.get_Locale()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.LocaleSetString">
            <summary>Establecer el shim de AuthenticationCredentials.set_Locale(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.OldPasswordGet">
            <summary>Establecer el shim de AuthenticationCredentials.get_OldPassword()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.OldPasswordSetObject">
            <summary>Establecer el shim de AuthenticationCredentials.set_OldPassword(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.OperatingSystemGet">
            <summary>Establecer el shim de AuthenticationCredentials.get_OperatingSystem()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.OperatingSystemSetString">
            <summary>Establecer el shim de AuthenticationCredentials.set_OperatingSystem(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.PartnerCredentialsGet">
            <summary>Establecer el shim de AuthenticationCredentials.get_PartnerCredentials()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.PartnerCredentialsSetObject">
            <summary>Establecer el shim de AuthenticationCredentials.set_PartnerCredentials(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.PasswordGet">
            <summary>Establecer el shim de AuthenticationCredentials.get_Password()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.PasswordSetString">
            <summary>Establecer el shim de AuthenticationCredentials.set_Password(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.SecurityAnswerGet">
            <summary>Establecer el shim de AuthenticationCredentials.get_SecurityAnswer()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.SecurityAnswerSetObject">
            <summary>Establecer el shim de AuthenticationCredentials.set_SecurityAnswer(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.TypeNameGet">
            <summary>Establecer el shim de AuthenticationCredentials.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.UsernameGet">
            <summary>Establecer el shim de AuthenticationCredentials.get_Username()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.UsernameSetString">
            <summary>Establecer el shim de AuthenticationCredentials.set_Username(String value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.AllInstances.AuthTokenGet">
            <summary>Establecer el shim de AuthenticationCredentials.get_AuthToken()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.AllInstances.AuthTokenSetString">
            <summary>Establecer el shim de AuthenticationCredentials.set_AuthToken(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.AllInstances.ClientVersionGet">
            <summary>Establecer el shim de AuthenticationCredentials.get_ClientVersion()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.AllInstances.ClientVersionSetString">
            <summary>Establecer el shim de AuthenticationCredentials.set_ClientVersion(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de AuthenticationCredentials.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.AllInstances.DomainGet">
            <summary>Establecer el shim de AuthenticationCredentials.get_Domain()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.AllInstances.DomainSetString">
            <summary>Establecer el shim de AuthenticationCredentials.set_Domain(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.AllInstances.IpAddressGet">
            <summary>Establecer el shim de AuthenticationCredentials.get_IpAddress()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.AllInstances.IpAddressSetString">
            <summary>Establecer el shim de AuthenticationCredentials.set_IpAddress(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.AllInstances.LocaleGet">
            <summary>Establecer el shim de AuthenticationCredentials.get_Locale()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.AllInstances.LocaleSetString">
            <summary>Establecer el shim de AuthenticationCredentials.set_Locale(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.AllInstances.OldPasswordGet">
            <summary>Establecer el shim de AuthenticationCredentials.get_OldPassword()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.AllInstances.OldPasswordSetObject">
            <summary>Establecer el shim de AuthenticationCredentials.set_OldPassword(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.AllInstances.OperatingSystemGet">
            <summary>Establecer el shim de AuthenticationCredentials.get_OperatingSystem()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.AllInstances.OperatingSystemSetString">
            <summary>Establecer el shim de AuthenticationCredentials.set_OperatingSystem(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.AllInstances.PartnerCredentialsGet">
            <summary>Establecer el shim de AuthenticationCredentials.get_PartnerCredentials()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.AllInstances.PartnerCredentialsSetObject">
            <summary>Establecer el shim de AuthenticationCredentials.set_PartnerCredentials(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.AllInstances.PasswordGet">
            <summary>Establecer el shim de AuthenticationCredentials.get_Password()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.AllInstances.PasswordSetString">
            <summary>Establecer el shim de AuthenticationCredentials.set_Password(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.AllInstances.SecurityAnswerGet">
            <summary>Establecer el shim de AuthenticationCredentials.get_SecurityAnswer()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.AllInstances.SecurityAnswerSetObject">
            <summary>Establecer el shim de AuthenticationCredentials.set_SecurityAnswer(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.AllInstances.TypeNameGet">
            <summary>Establecer el shim de AuthenticationCredentials.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.AllInstances.UsernameGet">
            <summary>Establecer el shim de AuthenticationCredentials.get_Username()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimAuthenticationCredentials.AllInstances.UsernameSetString">
            <summary>Establecer el shim de AuthenticationCredentials.set_Username(String value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimSession">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Login.Session</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimSession.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimSession.#ctor(PVPNetConnect.RiotObjects.Platform.Login.Session)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimSession.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimSession.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimSession.AccountSummaryGet">
            <summary>Establecer el shim de Session.get_AccountSummary()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimSession.AccountSummarySetAccountSummary">
            <summary>Establecer el shim de Session.set_AccountSummary(AccountSummary value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimSession.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimSession.Constructor">
            <summary>Establecer el shim de Session.Session()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimSession.ConstructorSessionCallback">
            <summary>Establecer el shim de Session.Session(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimSession.ConstructorTypedObject">
            <summary>Establecer el shim de Session.Session(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimSession.DoCallbackTypedObject">
            <summary>Establecer el shim de Session.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimSession.PasswordGet">
            <summary>Establecer el shim de Session.get_Password()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimSession.PasswordSetString">
            <summary>Establecer el shim de Session.set_Password(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimSession.TokenGet">
            <summary>Establecer el shim de Session.get_Token()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimSession.TokenSetString">
            <summary>Establecer el shim de Session.set_Token(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimSession.TypeNameGet">
            <summary>Establecer el shim de Session.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimSession.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimSession.AllInstances.AccountSummaryGet">
            <summary>Establecer el shim de Session.get_AccountSummary()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimSession.AllInstances.AccountSummarySetAccountSummary">
            <summary>Establecer el shim de Session.set_AccountSummary(AccountSummary value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimSession.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de Session.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimSession.AllInstances.PasswordGet">
            <summary>Establecer el shim de Session.get_Password()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimSession.AllInstances.PasswordSetString">
            <summary>Establecer el shim de Session.set_Password(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimSession.AllInstances.TokenGet">
            <summary>Establecer el shim de Session.get_Token()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimSession.AllInstances.TokenSetString">
            <summary>Establecer el shim de Session.set_Token(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.ShimSession.AllInstances.TypeNameGet">
            <summary>Establecer el shim de Session.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Login.Fakes.StubAuthenticationCredentials">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Login.AuthenticationCredentials</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Login.Fakes.StubAuthenticationCredentials.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Login.Fakes.StubAuthenticationCredentials.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Login.Fakes.StubAuthenticationCredentials.#ctor(PVPNetConnect.RiotObjects.Platform.Login.AuthenticationCredentials.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Login.Fakes.StubAuthenticationCredentials.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de AuthenticationCredentials.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Login.Fakes.StubAuthenticationCredentials.DoCallbackTypedObject">
            <summary>Establecer el stub de AuthenticationCredentials.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Login.Fakes.StubAuthenticationCredentials.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubAuthenticationCredentials</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Login.Fakes.StubAuthenticationCredentials.TypeNameGet">
            <summary>Establecer el stub de AuthenticationCredentials.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.StubAuthenticationCredentials.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.StubAuthenticationCredentials.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.StubAuthenticationCredentials.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.StubAuthenticationCredentials.TypeName">
            <summary>Establecer el stub de AuthenticationCredentials.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Login.Fakes.StubSession">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Login.Session</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Login.Fakes.StubSession.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Login.Fakes.StubSession.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Login.Fakes.StubSession.#ctor(PVPNetConnect.RiotObjects.Platform.Login.Session.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Login.Fakes.StubSession.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de Session.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Login.Fakes.StubSession.DoCallbackTypedObject">
            <summary>Establecer el stub de Session.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Login.Fakes.StubSession.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubSession</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Login.Fakes.StubSession.TypeNameGet">
            <summary>Establecer el stub de Session.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.StubSession.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.StubSession.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.StubSession.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Login.Fakes.StubSession.TypeName">
            <summary>Establecer el stub de Session.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Matchmaking.GameQueueConfig</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.#ctor(PVPNetConnect.RiotObjects.Platform.Matchmaking.GameQueueConfig)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.BlockedMinutesThresholdGet">
            <summary>Establecer el shim de GameQueueConfig.get_BlockedMinutesThreshold()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.BlockedMinutesThresholdSetInt32">
            <summary>Establecer el shim de GameQueueConfig.set_BlockedMinutesThreshold(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.CacheNameGet">
            <summary>Establecer el shim de GameQueueConfig.get_CacheName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.CacheNameSetString">
            <summary>Establecer el shim de GameQueueConfig.set_CacheName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.Constructor">
            <summary>Establecer el shim de GameQueueConfig.GameQueueConfig()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.ConstructorGameQueueConfigCallback">
            <summary>Establecer el shim de GameQueueConfig.GameQueueConfig(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.ConstructorTypedObject">
            <summary>Establecer el shim de GameQueueConfig.GameQueueConfig(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.DisallowFreeChampionsGet">
            <summary>Establecer el shim de GameQueueConfig.get_DisallowFreeChampions()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.DisallowFreeChampionsSetBoolean">
            <summary>Establecer el shim de GameQueueConfig.set_DisallowFreeChampions(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.DoCallbackTypedObject">
            <summary>Establecer el shim de GameQueueConfig.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.GameModeGet">
            <summary>Establecer el shim de GameQueueConfig.get_GameMode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.GameModeSetString">
            <summary>Establecer el shim de GameQueueConfig.set_GameMode(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.GameTypeConfigIdGet">
            <summary>Establecer el shim de GameQueueConfig.get_GameTypeConfigId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.GameTypeConfigIdSetInt32">
            <summary>Establecer el shim de GameQueueConfig.set_GameTypeConfigId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.IdGet">
            <summary>Establecer el shim de GameQueueConfig.get_Id()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.IdSetDouble">
            <summary>Establecer el shim de GameQueueConfig.set_Id(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.MapSelectionAlgorithmGet">
            <summary>Establecer el shim de GameQueueConfig.get_MapSelectionAlgorithm()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.MapSelectionAlgorithmSetString">
            <summary>Establecer el shim de GameQueueConfig.set_MapSelectionAlgorithm(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.MatchingThrottleConfigGet">
            <summary>Establecer el shim de GameQueueConfig.get_MatchingThrottleConfig()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.MatchingThrottleConfigSetMatchingThrottleConfig">
            <summary>Establecer el shim de GameQueueConfig.set_MatchingThrottleConfig(MatchingThrottleConfig value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.MaxLevelGet">
            <summary>Establecer el shim de GameQueueConfig.get_MaxLevel()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.MaxLevelSetInt32">
            <summary>Establecer el shim de GameQueueConfig.set_MaxLevel(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.MaximumParticipantListSizeGet">
            <summary>Establecer el shim de GameQueueConfig.get_MaximumParticipantListSize()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.MaximumParticipantListSizeSetInt32">
            <summary>Establecer el shim de GameQueueConfig.set_MaximumParticipantListSize(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.MinLevelGet">
            <summary>Establecer el shim de GameQueueConfig.get_MinLevel()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.MinLevelSetInt32">
            <summary>Establecer el shim de GameQueueConfig.set_MinLevel(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.MinimumParticipantListSizeGet">
            <summary>Establecer el shim de GameQueueConfig.get_MinimumParticipantListSize()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.MinimumParticipantListSizeSetInt32">
            <summary>Establecer el shim de GameQueueConfig.set_MinimumParticipantListSize(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.MinimumQueueDodgeDelayTimeGet">
            <summary>Establecer el shim de GameQueueConfig.get_MinimumQueueDodgeDelayTime()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.MinimumQueueDodgeDelayTimeSetInt32">
            <summary>Establecer el shim de GameQueueConfig.set_MinimumQueueDodgeDelayTime(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.NumPlayersPerTeamGet">
            <summary>Establecer el shim de GameQueueConfig.get_NumPlayersPerTeam()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.NumPlayersPerTeamSetInt32">
            <summary>Establecer el shim de GameQueueConfig.set_NumPlayersPerTeam(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.PointsConfigKeyGet">
            <summary>Establecer el shim de GameQueueConfig.get_PointsConfigKey()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.PointsConfigKeySetString">
            <summary>Establecer el shim de GameQueueConfig.set_PointsConfigKey(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.QueueBonusKeyGet">
            <summary>Establecer el shim de GameQueueConfig.get_QueueBonusKey()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.QueueBonusKeySetString">
            <summary>Establecer el shim de GameQueueConfig.set_QueueBonusKey(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.QueueStateGet">
            <summary>Establecer el shim de GameQueueConfig.get_QueueState()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.QueueStateSetString">
            <summary>Establecer el shim de GameQueueConfig.set_QueueState(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.QueueStateStringGet">
            <summary>Establecer el shim de GameQueueConfig.get_QueueStateString()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.QueueStateStringSetString">
            <summary>Establecer el shim de GameQueueConfig.set_QueueStateString(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.RankedGet">
            <summary>Establecer el shim de GameQueueConfig.get_Ranked()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.RankedSetBoolean">
            <summary>Establecer el shim de GameQueueConfig.set_Ranked(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.SupportedMapIdsGet">
            <summary>Establecer el shim de GameQueueConfig.get_SupportedMapIds()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.SupportedMapIdsSetListOfInt32">
            <summary>Establecer el shim de GameQueueConfig.set_SupportedMapIds(List`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.TeamOnlyGet">
            <summary>Establecer el shim de GameQueueConfig.get_TeamOnly()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.TeamOnlySetBoolean">
            <summary>Establecer el shim de GameQueueConfig.set_TeamOnly(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.ThresholdEnabledGet">
            <summary>Establecer el shim de GameQueueConfig.get_ThresholdEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.ThresholdEnabledSetBoolean">
            <summary>Establecer el shim de GameQueueConfig.set_ThresholdEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.ThresholdSizeGet">
            <summary>Establecer el shim de GameQueueConfig.get_ThresholdSize()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.ThresholdSizeSetDouble">
            <summary>Establecer el shim de GameQueueConfig.set_ThresholdSize(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.TypeGet">
            <summary>Establecer el shim de GameQueueConfig.get_Type()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.TypeNameGet">
            <summary>Establecer el shim de GameQueueConfig.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.TypeSetString">
            <summary>Establecer el shim de GameQueueConfig.set_Type(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.TypeStringGet">
            <summary>Establecer el shim de GameQueueConfig.get_TypeString()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.TypeStringSetString">
            <summary>Establecer el shim de GameQueueConfig.set_TypeString(String value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.BlockedMinutesThresholdGet">
            <summary>Establecer el shim de GameQueueConfig.get_BlockedMinutesThreshold()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.BlockedMinutesThresholdSetInt32">
            <summary>Establecer el shim de GameQueueConfig.set_BlockedMinutesThreshold(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.CacheNameGet">
            <summary>Establecer el shim de GameQueueConfig.get_CacheName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.CacheNameSetString">
            <summary>Establecer el shim de GameQueueConfig.set_CacheName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.DisallowFreeChampionsGet">
            <summary>Establecer el shim de GameQueueConfig.get_DisallowFreeChampions()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.DisallowFreeChampionsSetBoolean">
            <summary>Establecer el shim de GameQueueConfig.set_DisallowFreeChampions(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de GameQueueConfig.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.GameModeGet">
            <summary>Establecer el shim de GameQueueConfig.get_GameMode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.GameModeSetString">
            <summary>Establecer el shim de GameQueueConfig.set_GameMode(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.GameTypeConfigIdGet">
            <summary>Establecer el shim de GameQueueConfig.get_GameTypeConfigId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.GameTypeConfigIdSetInt32">
            <summary>Establecer el shim de GameQueueConfig.set_GameTypeConfigId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.IdGet">
            <summary>Establecer el shim de GameQueueConfig.get_Id()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.IdSetDouble">
            <summary>Establecer el shim de GameQueueConfig.set_Id(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.MapSelectionAlgorithmGet">
            <summary>Establecer el shim de GameQueueConfig.get_MapSelectionAlgorithm()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.MapSelectionAlgorithmSetString">
            <summary>Establecer el shim de GameQueueConfig.set_MapSelectionAlgorithm(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.MatchingThrottleConfigGet">
            <summary>Establecer el shim de GameQueueConfig.get_MatchingThrottleConfig()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.MatchingThrottleConfigSetMatchingThrottleConfig">
            <summary>Establecer el shim de GameQueueConfig.set_MatchingThrottleConfig(MatchingThrottleConfig value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.MaxLevelGet">
            <summary>Establecer el shim de GameQueueConfig.get_MaxLevel()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.MaxLevelSetInt32">
            <summary>Establecer el shim de GameQueueConfig.set_MaxLevel(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.MaximumParticipantListSizeGet">
            <summary>Establecer el shim de GameQueueConfig.get_MaximumParticipantListSize()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.MaximumParticipantListSizeSetInt32">
            <summary>Establecer el shim de GameQueueConfig.set_MaximumParticipantListSize(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.MinLevelGet">
            <summary>Establecer el shim de GameQueueConfig.get_MinLevel()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.MinLevelSetInt32">
            <summary>Establecer el shim de GameQueueConfig.set_MinLevel(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.MinimumParticipantListSizeGet">
            <summary>Establecer el shim de GameQueueConfig.get_MinimumParticipantListSize()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.MinimumParticipantListSizeSetInt32">
            <summary>Establecer el shim de GameQueueConfig.set_MinimumParticipantListSize(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.MinimumQueueDodgeDelayTimeGet">
            <summary>Establecer el shim de GameQueueConfig.get_MinimumQueueDodgeDelayTime()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.MinimumQueueDodgeDelayTimeSetInt32">
            <summary>Establecer el shim de GameQueueConfig.set_MinimumQueueDodgeDelayTime(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.NumPlayersPerTeamGet">
            <summary>Establecer el shim de GameQueueConfig.get_NumPlayersPerTeam()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.NumPlayersPerTeamSetInt32">
            <summary>Establecer el shim de GameQueueConfig.set_NumPlayersPerTeam(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.PointsConfigKeyGet">
            <summary>Establecer el shim de GameQueueConfig.get_PointsConfigKey()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.PointsConfigKeySetString">
            <summary>Establecer el shim de GameQueueConfig.set_PointsConfigKey(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.QueueBonusKeyGet">
            <summary>Establecer el shim de GameQueueConfig.get_QueueBonusKey()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.QueueBonusKeySetString">
            <summary>Establecer el shim de GameQueueConfig.set_QueueBonusKey(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.QueueStateGet">
            <summary>Establecer el shim de GameQueueConfig.get_QueueState()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.QueueStateSetString">
            <summary>Establecer el shim de GameQueueConfig.set_QueueState(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.QueueStateStringGet">
            <summary>Establecer el shim de GameQueueConfig.get_QueueStateString()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.QueueStateStringSetString">
            <summary>Establecer el shim de GameQueueConfig.set_QueueStateString(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.RankedGet">
            <summary>Establecer el shim de GameQueueConfig.get_Ranked()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.RankedSetBoolean">
            <summary>Establecer el shim de GameQueueConfig.set_Ranked(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.SupportedMapIdsGet">
            <summary>Establecer el shim de GameQueueConfig.get_SupportedMapIds()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.SupportedMapIdsSetListOfInt32">
            <summary>Establecer el shim de GameQueueConfig.set_SupportedMapIds(List`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.TeamOnlyGet">
            <summary>Establecer el shim de GameQueueConfig.get_TeamOnly()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.TeamOnlySetBoolean">
            <summary>Establecer el shim de GameQueueConfig.set_TeamOnly(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.ThresholdEnabledGet">
            <summary>Establecer el shim de GameQueueConfig.get_ThresholdEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.ThresholdEnabledSetBoolean">
            <summary>Establecer el shim de GameQueueConfig.set_ThresholdEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.ThresholdSizeGet">
            <summary>Establecer el shim de GameQueueConfig.get_ThresholdSize()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.ThresholdSizeSetDouble">
            <summary>Establecer el shim de GameQueueConfig.set_ThresholdSize(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.TypeGet">
            <summary>Establecer el shim de GameQueueConfig.get_Type()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.TypeNameGet">
            <summary>Establecer el shim de GameQueueConfig.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.TypeSetString">
            <summary>Establecer el shim de GameQueueConfig.set_Type(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.TypeStringGet">
            <summary>Establecer el shim de GameQueueConfig.get_TypeString()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimGameQueueConfig.AllInstances.TypeStringSetString">
            <summary>Establecer el shim de GameQueueConfig.set_TypeString(String value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Matchmaking.MatchMakerParams</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.#ctor(PVPNetConnect.RiotObjects.Platform.Matchmaking.MatchMakerParams)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.BotDifficultyGet">
            <summary>Establecer el shim de MatchMakerParams.get_BotDifficulty()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.BotDifficultySetString">
            <summary>Establecer el shim de MatchMakerParams.set_BotDifficulty(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.Constructor">
            <summary>Establecer el shim de MatchMakerParams.MatchMakerParams()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.ConstructorMatchMakerParamsCallback">
            <summary>Establecer el shim de MatchMakerParams.MatchMakerParams(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.ConstructorTypedObject">
            <summary>Establecer el shim de MatchMakerParams.MatchMakerParams(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.DoCallbackTypedObject">
            <summary>Establecer el shim de MatchMakerParams.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.InvitationIdGet">
            <summary>Establecer el shim de MatchMakerParams.get_InvitationId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.InvitationIdSetObject">
            <summary>Establecer el shim de MatchMakerParams.set_InvitationId(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.LanguagesGet">
            <summary>Establecer el shim de MatchMakerParams.get_Languages()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.LanguagesSetObject">
            <summary>Establecer el shim de MatchMakerParams.set_Languages(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.LastMaestroMessageGet">
            <summary>Establecer el shim de MatchMakerParams.get_LastMaestroMessage()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.LastMaestroMessageSetObject">
            <summary>Establecer el shim de MatchMakerParams.set_LastMaestroMessage(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.QueueIdsGet">
            <summary>Establecer el shim de MatchMakerParams.get_QueueIds()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.QueueIdsSetInt32Array">
            <summary>Establecer el shim de MatchMakerParams.set_QueueIds(Int32[] value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.TeamGet">
            <summary>Establecer el shim de MatchMakerParams.get_Team()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.TeamIdGet">
            <summary>Establecer el shim de MatchMakerParams.get_TeamId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.TeamIdSetObject">
            <summary>Establecer el shim de MatchMakerParams.set_TeamId(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.TeamSetListOfInt32">
            <summary>Establecer el shim de MatchMakerParams.set_Team(List`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.TypeNameGet">
            <summary>Establecer el shim de MatchMakerParams.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.AllInstances.BotDifficultyGet">
            <summary>Establecer el shim de MatchMakerParams.get_BotDifficulty()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.AllInstances.BotDifficultySetString">
            <summary>Establecer el shim de MatchMakerParams.set_BotDifficulty(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de MatchMakerParams.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.AllInstances.InvitationIdGet">
            <summary>Establecer el shim de MatchMakerParams.get_InvitationId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.AllInstances.InvitationIdSetObject">
            <summary>Establecer el shim de MatchMakerParams.set_InvitationId(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.AllInstances.LanguagesGet">
            <summary>Establecer el shim de MatchMakerParams.get_Languages()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.AllInstances.LanguagesSetObject">
            <summary>Establecer el shim de MatchMakerParams.set_Languages(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.AllInstances.LastMaestroMessageGet">
            <summary>Establecer el shim de MatchMakerParams.get_LastMaestroMessage()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.AllInstances.LastMaestroMessageSetObject">
            <summary>Establecer el shim de MatchMakerParams.set_LastMaestroMessage(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.AllInstances.QueueIdsGet">
            <summary>Establecer el shim de MatchMakerParams.get_QueueIds()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.AllInstances.QueueIdsSetInt32Array">
            <summary>Establecer el shim de MatchMakerParams.set_QueueIds(Int32[] value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.AllInstances.TeamGet">
            <summary>Establecer el shim de MatchMakerParams.get_Team()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.AllInstances.TeamIdGet">
            <summary>Establecer el shim de MatchMakerParams.get_TeamId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.AllInstances.TeamIdSetObject">
            <summary>Establecer el shim de MatchMakerParams.set_TeamId(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.AllInstances.TeamSetListOfInt32">
            <summary>Establecer el shim de MatchMakerParams.set_Team(List`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchMakerParams.AllInstances.TypeNameGet">
            <summary>Establecer el shim de MatchMakerParams.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchingThrottleConfig">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Matchmaking.MatchingThrottleConfig</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchingThrottleConfig.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchingThrottleConfig.#ctor(PVPNetConnect.RiotObjects.Platform.Matchmaking.MatchingThrottleConfig)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchingThrottleConfig.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchingThrottleConfig.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchingThrottleConfig.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchingThrottleConfig.CacheNameGet">
            <summary>Establecer el shim de MatchingThrottleConfig.get_CacheName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchingThrottleConfig.CacheNameSetString">
            <summary>Establecer el shim de MatchingThrottleConfig.set_CacheName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchingThrottleConfig.Constructor">
            <summary>Establecer el shim de MatchingThrottleConfig.MatchingThrottleConfig()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchingThrottleConfig.ConstructorMatchingThrottleConfigCallback">
            <summary>Establecer el shim de MatchingThrottleConfig.MatchingThrottleConfig(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchingThrottleConfig.ConstructorTypedObject">
            <summary>Establecer el shim de MatchingThrottleConfig.MatchingThrottleConfig(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchingThrottleConfig.DoCallbackTypedObject">
            <summary>Establecer el shim de MatchingThrottleConfig.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchingThrottleConfig.LimitGet">
            <summary>Establecer el shim de MatchingThrottleConfig.get_Limit()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchingThrottleConfig.LimitSetDouble">
            <summary>Establecer el shim de MatchingThrottleConfig.set_Limit(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchingThrottleConfig.MatchingThrottlePropertiesGet">
            <summary>Establecer el shim de MatchingThrottleConfig.get_MatchingThrottleProperties()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchingThrottleConfig.MatchingThrottlePropertiesSetListOfObject">
            <summary>Establecer el shim de MatchingThrottleConfig.set_MatchingThrottleProperties(List`1&lt;Object&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchingThrottleConfig.TypeNameGet">
            <summary>Establecer el shim de MatchingThrottleConfig.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchingThrottleConfig.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchingThrottleConfig.AllInstances.CacheNameGet">
            <summary>Establecer el shim de MatchingThrottleConfig.get_CacheName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchingThrottleConfig.AllInstances.CacheNameSetString">
            <summary>Establecer el shim de MatchingThrottleConfig.set_CacheName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchingThrottleConfig.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de MatchingThrottleConfig.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchingThrottleConfig.AllInstances.LimitGet">
            <summary>Establecer el shim de MatchingThrottleConfig.get_Limit()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchingThrottleConfig.AllInstances.LimitSetDouble">
            <summary>Establecer el shim de MatchingThrottleConfig.set_Limit(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchingThrottleConfig.AllInstances.MatchingThrottlePropertiesGet">
            <summary>Establecer el shim de MatchingThrottleConfig.get_MatchingThrottleProperties()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchingThrottleConfig.AllInstances.MatchingThrottlePropertiesSetListOfObject">
            <summary>Establecer el shim de MatchingThrottleConfig.set_MatchingThrottleProperties(List`1&lt;Object&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimMatchingThrottleConfig.AllInstances.TypeNameGet">
            <summary>Establecer el shim de MatchingThrottleConfig.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueDodger">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Matchmaking.QueueDodger</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueDodger.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueDodger.#ctor(PVPNetConnect.RiotObjects.Platform.Matchmaking.QueueDodger)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueDodger.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueDodger.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueDodger.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueDodger.Constructor">
            <summary>Establecer el shim de QueueDodger.QueueDodger()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueDodger.ConstructorQueueDodgerCallback">
            <summary>Establecer el shim de QueueDodger.QueueDodger(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueDodger.ConstructorTypedObject">
            <summary>Establecer el shim de QueueDodger.QueueDodger(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueDodger.DoCallbackTypedObject">
            <summary>Establecer el shim de QueueDodger.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueDodger.PenaltyRemainingTimeGet">
            <summary>Establecer el shim de QueueDodger.get_PenaltyRemainingTime()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueDodger.PenaltyRemainingTimeSetInt32">
            <summary>Establecer el shim de QueueDodger.set_PenaltyRemainingTime(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueDodger.ReasonFailedGet">
            <summary>Establecer el shim de QueueDodger.get_ReasonFailed()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueDodger.ReasonFailedSetString">
            <summary>Establecer el shim de QueueDodger.set_ReasonFailed(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueDodger.SummonerGet">
            <summary>Establecer el shim de QueueDodger.get_Summoner()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueDodger.SummonerSetSummoner">
            <summary>Establecer el shim de QueueDodger.set_Summoner(Summoner value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueDodger.TypeNameGet">
            <summary>Establecer el shim de QueueDodger.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueDodger.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueDodger.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de QueueDodger.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueDodger.AllInstances.PenaltyRemainingTimeGet">
            <summary>Establecer el shim de QueueDodger.get_PenaltyRemainingTime()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueDodger.AllInstances.PenaltyRemainingTimeSetInt32">
            <summary>Establecer el shim de QueueDodger.set_PenaltyRemainingTime(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueDodger.AllInstances.ReasonFailedGet">
            <summary>Establecer el shim de QueueDodger.get_ReasonFailed()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueDodger.AllInstances.ReasonFailedSetString">
            <summary>Establecer el shim de QueueDodger.set_ReasonFailed(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueDodger.AllInstances.SummonerGet">
            <summary>Establecer el shim de QueueDodger.get_Summoner()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueDodger.AllInstances.SummonerSetSummoner">
            <summary>Establecer el shim de QueueDodger.set_Summoner(Summoner value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueDodger.AllInstances.TypeNameGet">
            <summary>Establecer el shim de QueueDodger.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueInfo">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Matchmaking.QueueInfo</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueInfo.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueInfo.#ctor(PVPNetConnect.RiotObjects.Platform.Matchmaking.QueueInfo)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueInfo.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueInfo.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueInfo.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueInfo.Constructor">
            <summary>Establecer el shim de QueueInfo.QueueInfo()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueInfo.ConstructorQueueInfoCallback">
            <summary>Establecer el shim de QueueInfo.QueueInfo(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueInfo.ConstructorTypedObject">
            <summary>Establecer el shim de QueueInfo.QueueInfo(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueInfo.DoCallbackTypedObject">
            <summary>Establecer el shim de QueueInfo.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueInfo.QueueIdGet">
            <summary>Establecer el shim de QueueInfo.get_QueueId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueInfo.QueueIdSetDouble">
            <summary>Establecer el shim de QueueInfo.set_QueueId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueInfo.QueueLengthGet">
            <summary>Establecer el shim de QueueInfo.get_QueueLength()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueInfo.QueueLengthSetInt32">
            <summary>Establecer el shim de QueueInfo.set_QueueLength(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueInfo.TypeNameGet">
            <summary>Establecer el shim de QueueInfo.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueInfo.WaitTimeGet">
            <summary>Establecer el shim de QueueInfo.get_WaitTime()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueInfo.WaitTimeSetDouble">
            <summary>Establecer el shim de QueueInfo.set_WaitTime(Double value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueInfo.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueInfo.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de QueueInfo.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueInfo.AllInstances.QueueIdGet">
            <summary>Establecer el shim de QueueInfo.get_QueueId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueInfo.AllInstances.QueueIdSetDouble">
            <summary>Establecer el shim de QueueInfo.set_QueueId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueInfo.AllInstances.QueueLengthGet">
            <summary>Establecer el shim de QueueInfo.get_QueueLength()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueInfo.AllInstances.QueueLengthSetInt32">
            <summary>Establecer el shim de QueueInfo.set_QueueLength(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueInfo.AllInstances.TypeNameGet">
            <summary>Establecer el shim de QueueInfo.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueInfo.AllInstances.WaitTimeGet">
            <summary>Establecer el shim de QueueInfo.get_WaitTime()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimQueueInfo.AllInstances.WaitTimeSetDouble">
            <summary>Establecer el shim de QueueInfo.set_WaitTime(Double value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimSearchingForMatchNotification">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Matchmaking.SearchingForMatchNotification</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimSearchingForMatchNotification.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimSearchingForMatchNotification.#ctor(PVPNetConnect.RiotObjects.Platform.Matchmaking.SearchingForMatchNotification)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimSearchingForMatchNotification.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimSearchingForMatchNotification.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimSearchingForMatchNotification.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimSearchingForMatchNotification.Constructor">
            <summary>Establecer el shim de SearchingForMatchNotification.SearchingForMatchNotification()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimSearchingForMatchNotification.ConstructorSearchingForMatchNotificationCallback">
            <summary>Establecer el shim de SearchingForMatchNotification.SearchingForMatchNotification(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimSearchingForMatchNotification.ConstructorTypedObject">
            <summary>Establecer el shim de SearchingForMatchNotification.SearchingForMatchNotification(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimSearchingForMatchNotification.DoCallbackTypedObject">
            <summary>Establecer el shim de SearchingForMatchNotification.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimSearchingForMatchNotification.GhostGameSummonersGet">
            <summary>Establecer el shim de SearchingForMatchNotification.get_GhostGameSummoners()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimSearchingForMatchNotification.GhostGameSummonersSetObject">
            <summary>Establecer el shim de SearchingForMatchNotification.set_GhostGameSummoners(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimSearchingForMatchNotification.JoinedQueuesGet">
            <summary>Establecer el shim de SearchingForMatchNotification.get_JoinedQueues()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimSearchingForMatchNotification.JoinedQueuesSetListOfQueueInfo">
            <summary>Establecer el shim de SearchingForMatchNotification.set_JoinedQueues(List`1&lt;QueueInfo&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimSearchingForMatchNotification.PlayerJoinFailuresGet">
            <summary>Establecer el shim de SearchingForMatchNotification.get_PlayerJoinFailures()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimSearchingForMatchNotification.PlayerJoinFailuresSetListOfQueueDodger">
            <summary>Establecer el shim de SearchingForMatchNotification.set_PlayerJoinFailures(List`1&lt;QueueDodger&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimSearchingForMatchNotification.TypeNameGet">
            <summary>Establecer el shim de SearchingForMatchNotification.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimSearchingForMatchNotification.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimSearchingForMatchNotification.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de SearchingForMatchNotification.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimSearchingForMatchNotification.AllInstances.GhostGameSummonersGet">
            <summary>Establecer el shim de SearchingForMatchNotification.get_GhostGameSummoners()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimSearchingForMatchNotification.AllInstances.GhostGameSummonersSetObject">
            <summary>Establecer el shim de SearchingForMatchNotification.set_GhostGameSummoners(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimSearchingForMatchNotification.AllInstances.JoinedQueuesGet">
            <summary>Establecer el shim de SearchingForMatchNotification.get_JoinedQueues()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimSearchingForMatchNotification.AllInstances.JoinedQueuesSetListOfQueueInfo">
            <summary>Establecer el shim de SearchingForMatchNotification.set_JoinedQueues(List`1&lt;QueueInfo&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimSearchingForMatchNotification.AllInstances.PlayerJoinFailuresGet">
            <summary>Establecer el shim de SearchingForMatchNotification.get_PlayerJoinFailures()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimSearchingForMatchNotification.AllInstances.PlayerJoinFailuresSetListOfQueueDodger">
            <summary>Establecer el shim de SearchingForMatchNotification.set_PlayerJoinFailures(List`1&lt;QueueDodger&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.ShimSearchingForMatchNotification.AllInstances.TypeNameGet">
            <summary>Establecer el shim de SearchingForMatchNotification.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubGameQueueConfig">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Matchmaking.GameQueueConfig</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubGameQueueConfig.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubGameQueueConfig.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubGameQueueConfig.#ctor(PVPNetConnect.RiotObjects.Platform.Matchmaking.GameQueueConfig.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubGameQueueConfig.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de GameQueueConfig.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubGameQueueConfig.DoCallbackTypedObject">
            <summary>Establecer el stub de GameQueueConfig.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubGameQueueConfig.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubGameQueueConfig</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubGameQueueConfig.TypeNameGet">
            <summary>Establecer el stub de GameQueueConfig.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubGameQueueConfig.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubGameQueueConfig.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubGameQueueConfig.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubGameQueueConfig.TypeName">
            <summary>Establecer el stub de GameQueueConfig.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubMatchMakerParams">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Matchmaking.MatchMakerParams</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubMatchMakerParams.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubMatchMakerParams.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubMatchMakerParams.#ctor(PVPNetConnect.RiotObjects.Platform.Matchmaking.MatchMakerParams.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubMatchMakerParams.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de MatchMakerParams.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubMatchMakerParams.DoCallbackTypedObject">
            <summary>Establecer el stub de MatchMakerParams.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubMatchMakerParams.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubMatchMakerParams</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubMatchMakerParams.TypeNameGet">
            <summary>Establecer el stub de MatchMakerParams.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubMatchMakerParams.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubMatchMakerParams.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubMatchMakerParams.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubMatchMakerParams.TypeName">
            <summary>Establecer el stub de MatchMakerParams.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubMatchingThrottleConfig">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Matchmaking.MatchingThrottleConfig</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubMatchingThrottleConfig.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubMatchingThrottleConfig.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubMatchingThrottleConfig.#ctor(PVPNetConnect.RiotObjects.Platform.Matchmaking.MatchingThrottleConfig.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubMatchingThrottleConfig.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de MatchingThrottleConfig.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubMatchingThrottleConfig.DoCallbackTypedObject">
            <summary>Establecer el stub de MatchingThrottleConfig.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubMatchingThrottleConfig.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubMatchingThrottleConfig</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubMatchingThrottleConfig.TypeNameGet">
            <summary>Establecer el stub de MatchingThrottleConfig.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubMatchingThrottleConfig.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubMatchingThrottleConfig.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubMatchingThrottleConfig.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubMatchingThrottleConfig.TypeName">
            <summary>Establecer el stub de MatchingThrottleConfig.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubQueueDodger">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Matchmaking.QueueDodger</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubQueueDodger.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubQueueDodger.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubQueueDodger.#ctor(PVPNetConnect.RiotObjects.Platform.Matchmaking.QueueDodger.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubQueueDodger.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de QueueDodger.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubQueueDodger.DoCallbackTypedObject">
            <summary>Establecer el stub de QueueDodger.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubQueueDodger.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubQueueDodger</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubQueueDodger.TypeNameGet">
            <summary>Establecer el stub de QueueDodger.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubQueueDodger.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubQueueDodger.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubQueueDodger.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubQueueDodger.TypeName">
            <summary>Establecer el stub de QueueDodger.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubQueueInfo">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Matchmaking.QueueInfo</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubQueueInfo.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubQueueInfo.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubQueueInfo.#ctor(PVPNetConnect.RiotObjects.Platform.Matchmaking.QueueInfo.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubQueueInfo.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de QueueInfo.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubQueueInfo.DoCallbackTypedObject">
            <summary>Establecer el stub de QueueInfo.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubQueueInfo.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubQueueInfo</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubQueueInfo.TypeNameGet">
            <summary>Establecer el stub de QueueInfo.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubQueueInfo.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubQueueInfo.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubQueueInfo.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubQueueInfo.TypeName">
            <summary>Establecer el stub de QueueInfo.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubSearchingForMatchNotification">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Matchmaking.SearchingForMatchNotification</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubSearchingForMatchNotification.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubSearchingForMatchNotification.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubSearchingForMatchNotification.#ctor(PVPNetConnect.RiotObjects.Platform.Matchmaking.SearchingForMatchNotification.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubSearchingForMatchNotification.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de SearchingForMatchNotification.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubSearchingForMatchNotification.DoCallbackTypedObject">
            <summary>Establecer el stub de SearchingForMatchNotification.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubSearchingForMatchNotification.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubSearchingForMatchNotification</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubSearchingForMatchNotification.TypeNameGet">
            <summary>Establecer el stub de SearchingForMatchNotification.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubSearchingForMatchNotification.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubSearchingForMatchNotification.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubSearchingForMatchNotification.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Matchmaking.Fakes.StubSearchingForMatchNotification.TypeName">
            <summary>Establecer el stub de SearchingForMatchNotification.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimSimpleDialogMessage">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Messaging.SimpleDialogMessage</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimSimpleDialogMessage.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimSimpleDialogMessage.#ctor(PVPNetConnect.RiotObjects.Platform.Messaging.SimpleDialogMessage)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimSimpleDialogMessage.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimSimpleDialogMessage.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimSimpleDialogMessage.AccountIdGet">
            <summary>Establecer el shim de SimpleDialogMessage.get_AccountId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimSimpleDialogMessage.AccountIdSetDouble">
            <summary>Establecer el shim de SimpleDialogMessage.set_AccountId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimSimpleDialogMessage.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimSimpleDialogMessage.Constructor">
            <summary>Establecer el shim de SimpleDialogMessage.SimpleDialogMessage()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimSimpleDialogMessage.ConstructorSimpleDialogMessageCallback">
            <summary>Establecer el shim de SimpleDialogMessage.SimpleDialogMessage(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimSimpleDialogMessage.ConstructorTypedObject">
            <summary>Establecer el shim de SimpleDialogMessage.SimpleDialogMessage(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimSimpleDialogMessage.DoCallbackTypedObject">
            <summary>Establecer el shim de SimpleDialogMessage.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimSimpleDialogMessage.ParamsGet">
            <summary>Establecer el shim de SimpleDialogMessage.get_Params()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimSimpleDialogMessage.ParamsSetObject">
            <summary>Establecer el shim de SimpleDialogMessage.set_Params(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimSimpleDialogMessage.TitleCodeGet">
            <summary>Establecer el shim de SimpleDialogMessage.get_TitleCode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimSimpleDialogMessage.TitleCodeSetString">
            <summary>Establecer el shim de SimpleDialogMessage.set_TitleCode(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimSimpleDialogMessage.TypeGet">
            <summary>Establecer el shim de SimpleDialogMessage.get_Type()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimSimpleDialogMessage.TypeNameGet">
            <summary>Establecer el shim de SimpleDialogMessage.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimSimpleDialogMessage.TypeSetString">
            <summary>Establecer el shim de SimpleDialogMessage.set_Type(String value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimSimpleDialogMessage.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimSimpleDialogMessage.AllInstances.AccountIdGet">
            <summary>Establecer el shim de SimpleDialogMessage.get_AccountId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimSimpleDialogMessage.AllInstances.AccountIdSetDouble">
            <summary>Establecer el shim de SimpleDialogMessage.set_AccountId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimSimpleDialogMessage.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de SimpleDialogMessage.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimSimpleDialogMessage.AllInstances.ParamsGet">
            <summary>Establecer el shim de SimpleDialogMessage.get_Params()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimSimpleDialogMessage.AllInstances.ParamsSetObject">
            <summary>Establecer el shim de SimpleDialogMessage.set_Params(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimSimpleDialogMessage.AllInstances.TitleCodeGet">
            <summary>Establecer el shim de SimpleDialogMessage.get_TitleCode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimSimpleDialogMessage.AllInstances.TitleCodeSetString">
            <summary>Establecer el shim de SimpleDialogMessage.set_TitleCode(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimSimpleDialogMessage.AllInstances.TypeGet">
            <summary>Establecer el shim de SimpleDialogMessage.get_Type()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimSimpleDialogMessage.AllInstances.TypeNameGet">
            <summary>Establecer el shim de SimpleDialogMessage.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimSimpleDialogMessage.AllInstances.TypeSetString">
            <summary>Establecer el shim de SimpleDialogMessage.set_Type(String value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreAccountBalanceNotification">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Messaging.StoreAccountBalanceNotification</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreAccountBalanceNotification.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreAccountBalanceNotification.#ctor(PVPNetConnect.RiotObjects.Platform.Messaging.StoreAccountBalanceNotification)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreAccountBalanceNotification.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreAccountBalanceNotification.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreAccountBalanceNotification.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreAccountBalanceNotification.Constructor">
            <summary>Establecer el shim de StoreAccountBalanceNotification.StoreAccountBalanceNotification()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreAccountBalanceNotification.ConstructorStoreAccountBalanceNotificationCallback">
            <summary>Establecer el shim de StoreAccountBalanceNotification.StoreAccountBalanceNotification(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreAccountBalanceNotification.ConstructorTypedObject">
            <summary>Establecer el shim de StoreAccountBalanceNotification.StoreAccountBalanceNotification(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreAccountBalanceNotification.DoCallbackTypedObject">
            <summary>Establecer el shim de StoreAccountBalanceNotification.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreAccountBalanceNotification.IpGet">
            <summary>Establecer el shim de StoreAccountBalanceNotification.get_Ip()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreAccountBalanceNotification.IpSetDouble">
            <summary>Establecer el shim de StoreAccountBalanceNotification.set_Ip(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreAccountBalanceNotification.RpGet">
            <summary>Establecer el shim de StoreAccountBalanceNotification.get_Rp()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreAccountBalanceNotification.RpSetDouble">
            <summary>Establecer el shim de StoreAccountBalanceNotification.set_Rp(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreAccountBalanceNotification.TypeNameGet">
            <summary>Establecer el shim de StoreAccountBalanceNotification.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreAccountBalanceNotification.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreAccountBalanceNotification.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de StoreAccountBalanceNotification.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreAccountBalanceNotification.AllInstances.IpGet">
            <summary>Establecer el shim de StoreAccountBalanceNotification.get_Ip()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreAccountBalanceNotification.AllInstances.IpSetDouble">
            <summary>Establecer el shim de StoreAccountBalanceNotification.set_Ip(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreAccountBalanceNotification.AllInstances.RpGet">
            <summary>Establecer el shim de StoreAccountBalanceNotification.get_Rp()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreAccountBalanceNotification.AllInstances.RpSetDouble">
            <summary>Establecer el shim de StoreAccountBalanceNotification.set_Rp(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreAccountBalanceNotification.AllInstances.TypeNameGet">
            <summary>Establecer el shim de StoreAccountBalanceNotification.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreFulfillmentNotification">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Messaging.StoreFulfillmentNotification</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreFulfillmentNotification.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreFulfillmentNotification.#ctor(PVPNetConnect.RiotObjects.Platform.Messaging.StoreFulfillmentNotification)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreFulfillmentNotification.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreFulfillmentNotification.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreFulfillmentNotification.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreFulfillmentNotification.Constructor">
            <summary>Establecer el shim de StoreFulfillmentNotification.StoreFulfillmentNotification()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreFulfillmentNotification.ConstructorStoreFulfillmentNotificationCallback">
            <summary>Establecer el shim de StoreFulfillmentNotification.StoreFulfillmentNotification(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreFulfillmentNotification.ConstructorTypedObject">
            <summary>Establecer el shim de StoreFulfillmentNotification.StoreFulfillmentNotification(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreFulfillmentNotification.DataGet">
            <summary>Establecer el shim de StoreFulfillmentNotification.get_Data()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreFulfillmentNotification.DataSetObject">
            <summary>Establecer el shim de StoreFulfillmentNotification.set_Data(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreFulfillmentNotification.DoCallbackTypedObject">
            <summary>Establecer el shim de StoreFulfillmentNotification.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreFulfillmentNotification.InventoryTypeGet">
            <summary>Establecer el shim de StoreFulfillmentNotification.get_InventoryType()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreFulfillmentNotification.InventoryTypeSetString">
            <summary>Establecer el shim de StoreFulfillmentNotification.set_InventoryType(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreFulfillmentNotification.IpGet">
            <summary>Establecer el shim de StoreFulfillmentNotification.get_Ip()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreFulfillmentNotification.IpSetDouble">
            <summary>Establecer el shim de StoreFulfillmentNotification.set_Ip(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreFulfillmentNotification.RpGet">
            <summary>Establecer el shim de StoreFulfillmentNotification.get_Rp()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreFulfillmentNotification.RpSetDouble">
            <summary>Establecer el shim de StoreFulfillmentNotification.set_Rp(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreFulfillmentNotification.TypeNameGet">
            <summary>Establecer el shim de StoreFulfillmentNotification.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreFulfillmentNotification.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreFulfillmentNotification.AllInstances.DataGet">
            <summary>Establecer el shim de StoreFulfillmentNotification.get_Data()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreFulfillmentNotification.AllInstances.DataSetObject">
            <summary>Establecer el shim de StoreFulfillmentNotification.set_Data(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreFulfillmentNotification.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de StoreFulfillmentNotification.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreFulfillmentNotification.AllInstances.InventoryTypeGet">
            <summary>Establecer el shim de StoreFulfillmentNotification.get_InventoryType()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreFulfillmentNotification.AllInstances.InventoryTypeSetString">
            <summary>Establecer el shim de StoreFulfillmentNotification.set_InventoryType(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreFulfillmentNotification.AllInstances.IpGet">
            <summary>Establecer el shim de StoreFulfillmentNotification.get_Ip()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreFulfillmentNotification.AllInstances.IpSetDouble">
            <summary>Establecer el shim de StoreFulfillmentNotification.set_Ip(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreFulfillmentNotification.AllInstances.RpGet">
            <summary>Establecer el shim de StoreFulfillmentNotification.get_Rp()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreFulfillmentNotification.AllInstances.RpSetDouble">
            <summary>Establecer el shim de StoreFulfillmentNotification.set_Rp(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.ShimStoreFulfillmentNotification.AllInstances.TypeNameGet">
            <summary>Establecer el shim de StoreFulfillmentNotification.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.StubSimpleDialogMessage">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Messaging.SimpleDialogMessage</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.StubSimpleDialogMessage.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.StubSimpleDialogMessage.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.StubSimpleDialogMessage.#ctor(PVPNetConnect.RiotObjects.Platform.Messaging.SimpleDialogMessage.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.StubSimpleDialogMessage.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de SimpleDialogMessage.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.StubSimpleDialogMessage.DoCallbackTypedObject">
            <summary>Establecer el stub de SimpleDialogMessage.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.StubSimpleDialogMessage.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubSimpleDialogMessage</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.StubSimpleDialogMessage.TypeNameGet">
            <summary>Establecer el stub de SimpleDialogMessage.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.StubSimpleDialogMessage.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.StubSimpleDialogMessage.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.StubSimpleDialogMessage.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.StubSimpleDialogMessage.TypeName">
            <summary>Establecer el stub de SimpleDialogMessage.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.StubStoreAccountBalanceNotification">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Messaging.StoreAccountBalanceNotification</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.StubStoreAccountBalanceNotification.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.StubStoreAccountBalanceNotification.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.StubStoreAccountBalanceNotification.#ctor(PVPNetConnect.RiotObjects.Platform.Messaging.StoreAccountBalanceNotification.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.StubStoreAccountBalanceNotification.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de StoreAccountBalanceNotification.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.StubStoreAccountBalanceNotification.DoCallbackTypedObject">
            <summary>Establecer el stub de StoreAccountBalanceNotification.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.StubStoreAccountBalanceNotification.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubStoreAccountBalanceNotification</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.StubStoreAccountBalanceNotification.TypeNameGet">
            <summary>Establecer el stub de StoreAccountBalanceNotification.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.StubStoreAccountBalanceNotification.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.StubStoreAccountBalanceNotification.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.StubStoreAccountBalanceNotification.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.StubStoreAccountBalanceNotification.TypeName">
            <summary>Establecer el stub de StoreAccountBalanceNotification.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.StubStoreFulfillmentNotification">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Messaging.StoreFulfillmentNotification</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.StubStoreFulfillmentNotification.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.StubStoreFulfillmentNotification.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.StubStoreFulfillmentNotification.#ctor(PVPNetConnect.RiotObjects.Platform.Messaging.StoreFulfillmentNotification.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.StubStoreFulfillmentNotification.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de StoreFulfillmentNotification.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.StubStoreFulfillmentNotification.DoCallbackTypedObject">
            <summary>Establecer el stub de StoreFulfillmentNotification.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.StubStoreFulfillmentNotification.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubStoreFulfillmentNotification</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.StubStoreFulfillmentNotification.TypeNameGet">
            <summary>Establecer el stub de StoreFulfillmentNotification.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.StubStoreFulfillmentNotification.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.StubStoreFulfillmentNotification.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.StubStoreFulfillmentNotification.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Messaging.Fakes.StubStoreFulfillmentNotification.TypeName">
            <summary>Establecer el stub de StoreFulfillmentNotification.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.AramPlayerParticipant</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.#ctor(PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.AramPlayerParticipant)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AccountIdGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_AccountId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AccountIdSetDouble">
            <summary>Establecer el shim de AramPlayerParticipant.set_AccountId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.BadgesGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_Badges()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.BadgesSetInt32">
            <summary>Establecer el shim de AramPlayerParticipant.set_Badges(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.BotDifficultyGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_BotDifficulty()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.BotDifficultySetString">
            <summary>Establecer el shim de AramPlayerParticipant.set_BotDifficulty(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.ClientInSynchGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_ClientInSynch()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.ClientInSynchSetBoolean">
            <summary>Establecer el shim de AramPlayerParticipant.set_ClientInSynch(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.Constructor">
            <summary>Establecer el shim de AramPlayerParticipant.AramPlayerParticipant()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.ConstructorAramPlayerParticipantCallback">
            <summary>Establecer el shim de AramPlayerParticipant.AramPlayerParticipant(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.ConstructorTypedObject">
            <summary>Establecer el shim de AramPlayerParticipant.AramPlayerParticipant(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.DoCallbackTypedObject">
            <summary>Establecer el shim de AramPlayerParticipant.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.IndexGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_Index()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.IndexSetInt32">
            <summary>Establecer el shim de AramPlayerParticipant.set_Index(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.LastSelectedSkinIndexGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_LastSelectedSkinIndex()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.LastSelectedSkinIndexSetInt32">
            <summary>Establecer el shim de AramPlayerParticipant.set_LastSelectedSkinIndex(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.LocaleGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_Locale()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.LocaleSetObject">
            <summary>Establecer el shim de AramPlayerParticipant.set_Locale(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.MinorGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_Minor()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.MinorSetBoolean">
            <summary>Establecer el shim de AramPlayerParticipant.set_Minor(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.OriginalAccountNumberGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_OriginalAccountNumber()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.OriginalAccountNumberSetDouble">
            <summary>Establecer el shim de AramPlayerParticipant.set_OriginalAccountNumber(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.OriginalPlatformIdGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_OriginalPlatformId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.OriginalPlatformIdSetString">
            <summary>Establecer el shim de AramPlayerParticipant.set_OriginalPlatformId(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.PartnerIdGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_PartnerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.PartnerIdSetString">
            <summary>Establecer el shim de AramPlayerParticipant.set_PartnerId(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.PickModeGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_PickMode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.PickModeSetInt32">
            <summary>Establecer el shim de AramPlayerParticipant.set_PickMode(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.PickTurnGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_PickTurn()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.PickTurnSetInt32">
            <summary>Establecer el shim de AramPlayerParticipant.set_PickTurn(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.PointSummaryGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_PointSummary()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.PointSummarySetPointSummary">
            <summary>Establecer el shim de AramPlayerParticipant.set_PointSummary(PointSummary value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.ProfileIconIdGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_ProfileIconId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.ProfileIconIdSetInt32">
            <summary>Establecer el shim de AramPlayerParticipant.set_ProfileIconId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.QueueRatingGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_QueueRating()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.QueueRatingSetInt32">
            <summary>Establecer el shim de AramPlayerParticipant.set_QueueRating(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.SummonerIdGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.SummonerIdSetDouble">
            <summary>Establecer el shim de AramPlayerParticipant.set_SummonerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.SummonerInternalNameGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_SummonerInternalName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.SummonerInternalNameSetString">
            <summary>Establecer el shim de AramPlayerParticipant.set_SummonerInternalName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.SummonerNameGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_SummonerName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.SummonerNameSetString">
            <summary>Establecer el shim de AramPlayerParticipant.set_SummonerName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.TeamOwnerGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_TeamOwner()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.TeamOwnerSetBoolean">
            <summary>Establecer el shim de AramPlayerParticipant.set_TeamOwner(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.TeamParticipantIdGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_TeamParticipantId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.TeamParticipantIdSetDouble">
            <summary>Establecer el shim de AramPlayerParticipant.set_TeamParticipantId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.TimeAddedToQueueGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_TimeAddedToQueue()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.TimeAddedToQueueSetDouble">
            <summary>Establecer el shim de AramPlayerParticipant.set_TimeAddedToQueue(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.TypeNameGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.AccountIdGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_AccountId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.AccountIdSetDouble">
            <summary>Establecer el shim de AramPlayerParticipant.set_AccountId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.BadgesGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_Badges()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.BadgesSetInt32">
            <summary>Establecer el shim de AramPlayerParticipant.set_Badges(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.BotDifficultyGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_BotDifficulty()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.BotDifficultySetString">
            <summary>Establecer el shim de AramPlayerParticipant.set_BotDifficulty(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.ClientInSynchGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_ClientInSynch()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.ClientInSynchSetBoolean">
            <summary>Establecer el shim de AramPlayerParticipant.set_ClientInSynch(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de AramPlayerParticipant.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.IndexGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_Index()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.IndexSetInt32">
            <summary>Establecer el shim de AramPlayerParticipant.set_Index(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.LastSelectedSkinIndexGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_LastSelectedSkinIndex()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.LastSelectedSkinIndexSetInt32">
            <summary>Establecer el shim de AramPlayerParticipant.set_LastSelectedSkinIndex(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.LocaleGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_Locale()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.LocaleSetObject">
            <summary>Establecer el shim de AramPlayerParticipant.set_Locale(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.MinorGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_Minor()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.MinorSetBoolean">
            <summary>Establecer el shim de AramPlayerParticipant.set_Minor(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.OriginalAccountNumberGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_OriginalAccountNumber()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.OriginalAccountNumberSetDouble">
            <summary>Establecer el shim de AramPlayerParticipant.set_OriginalAccountNumber(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.OriginalPlatformIdGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_OriginalPlatformId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.OriginalPlatformIdSetString">
            <summary>Establecer el shim de AramPlayerParticipant.set_OriginalPlatformId(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.PartnerIdGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_PartnerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.PartnerIdSetString">
            <summary>Establecer el shim de AramPlayerParticipant.set_PartnerId(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.PickModeGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_PickMode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.PickModeSetInt32">
            <summary>Establecer el shim de AramPlayerParticipant.set_PickMode(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.PickTurnGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_PickTurn()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.PickTurnSetInt32">
            <summary>Establecer el shim de AramPlayerParticipant.set_PickTurn(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.PointSummaryGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_PointSummary()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.PointSummarySetPointSummary">
            <summary>Establecer el shim de AramPlayerParticipant.set_PointSummary(PointSummary value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.ProfileIconIdGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_ProfileIconId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.ProfileIconIdSetInt32">
            <summary>Establecer el shim de AramPlayerParticipant.set_ProfileIconId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.QueueRatingGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_QueueRating()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.QueueRatingSetInt32">
            <summary>Establecer el shim de AramPlayerParticipant.set_QueueRating(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.SummonerIdGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.SummonerIdSetDouble">
            <summary>Establecer el shim de AramPlayerParticipant.set_SummonerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.SummonerInternalNameGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_SummonerInternalName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.SummonerInternalNameSetString">
            <summary>Establecer el shim de AramPlayerParticipant.set_SummonerInternalName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.SummonerNameGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_SummonerName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.SummonerNameSetString">
            <summary>Establecer el shim de AramPlayerParticipant.set_SummonerName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.TeamOwnerGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_TeamOwner()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.TeamOwnerSetBoolean">
            <summary>Establecer el shim de AramPlayerParticipant.set_TeamOwner(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.TeamParticipantIdGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_TeamParticipantId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.TeamParticipantIdSetDouble">
            <summary>Establecer el shim de AramPlayerParticipant.set_TeamParticipantId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.TimeAddedToQueueGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_TimeAddedToQueue()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.TimeAddedToQueueSetDouble">
            <summary>Establecer el shim de AramPlayerParticipant.set_TimeAddedToQueue(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimAramPlayerParticipant.AllInstances.TypeNameGet">
            <summary>Establecer el shim de AramPlayerParticipant.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimPointSummary">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.PointSummary</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimPointSummary.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimPointSummary.#ctor(PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.PointSummary)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimPointSummary.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimPointSummary.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimPointSummary.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimPointSummary.Constructor">
            <summary>Establecer el shim de PointSummary.PointSummary()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimPointSummary.ConstructorPointSummaryCallback">
            <summary>Establecer el shim de PointSummary.PointSummary(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimPointSummary.ConstructorTypedObject">
            <summary>Establecer el shim de PointSummary.PointSummary(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimPointSummary.CurrentPointsGet">
            <summary>Establecer el shim de PointSummary.get_CurrentPoints()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimPointSummary.CurrentPointsSetDouble">
            <summary>Establecer el shim de PointSummary.set_CurrentPoints(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimPointSummary.DoCallbackTypedObject">
            <summary>Establecer el shim de PointSummary.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimPointSummary.MaxRollsGet">
            <summary>Establecer el shim de PointSummary.get_MaxRolls()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimPointSummary.MaxRollsSetInt32">
            <summary>Establecer el shim de PointSummary.set_MaxRolls(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimPointSummary.NumberOfRollsGet">
            <summary>Establecer el shim de PointSummary.get_NumberOfRolls()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimPointSummary.NumberOfRollsSetInt32">
            <summary>Establecer el shim de PointSummary.set_NumberOfRolls(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimPointSummary.PointsCostToRollGet">
            <summary>Establecer el shim de PointSummary.get_PointsCostToRoll()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimPointSummary.PointsCostToRollSetDouble">
            <summary>Establecer el shim de PointSummary.set_PointsCostToRoll(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimPointSummary.PointsToNextRollGet">
            <summary>Establecer el shim de PointSummary.get_PointsToNextRoll()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimPointSummary.PointsToNextRollSetDouble">
            <summary>Establecer el shim de PointSummary.set_PointsToNextRoll(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimPointSummary.TypeNameGet">
            <summary>Establecer el shim de PointSummary.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimPointSummary.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimPointSummary.AllInstances.CurrentPointsGet">
            <summary>Establecer el shim de PointSummary.get_CurrentPoints()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimPointSummary.AllInstances.CurrentPointsSetDouble">
            <summary>Establecer el shim de PointSummary.set_CurrentPoints(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimPointSummary.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de PointSummary.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimPointSummary.AllInstances.MaxRollsGet">
            <summary>Establecer el shim de PointSummary.get_MaxRolls()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimPointSummary.AllInstances.MaxRollsSetInt32">
            <summary>Establecer el shim de PointSummary.set_MaxRolls(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimPointSummary.AllInstances.NumberOfRollsGet">
            <summary>Establecer el shim de PointSummary.get_NumberOfRolls()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimPointSummary.AllInstances.NumberOfRollsSetInt32">
            <summary>Establecer el shim de PointSummary.set_NumberOfRolls(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimPointSummary.AllInstances.PointsCostToRollGet">
            <summary>Establecer el shim de PointSummary.get_PointsCostToRoll()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimPointSummary.AllInstances.PointsCostToRollSetDouble">
            <summary>Establecer el shim de PointSummary.set_PointsCostToRoll(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimPointSummary.AllInstances.PointsToNextRollGet">
            <summary>Establecer el shim de PointSummary.get_PointsToNextRoll()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimPointSummary.AllInstances.PointsToNextRollSetDouble">
            <summary>Establecer el shim de PointSummary.set_PointsToNextRoll(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.ShimPointSummary.AllInstances.TypeNameGet">
            <summary>Establecer el shim de PointSummary.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.StubAramPlayerParticipant">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.AramPlayerParticipant</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.StubAramPlayerParticipant.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.StubAramPlayerParticipant.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.StubAramPlayerParticipant.#ctor(PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.AramPlayerParticipant.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.StubAramPlayerParticipant.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de AramPlayerParticipant.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.StubAramPlayerParticipant.DoCallbackTypedObject">
            <summary>Establecer el stub de AramPlayerParticipant.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.StubAramPlayerParticipant.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubAramPlayerParticipant</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.StubAramPlayerParticipant.TypeNameGet">
            <summary>Establecer el stub de AramPlayerParticipant.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.StubAramPlayerParticipant.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.StubAramPlayerParticipant.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.StubAramPlayerParticipant.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.StubAramPlayerParticipant.TypeName">
            <summary>Establecer el stub de AramPlayerParticipant.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.StubPointSummary">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.PointSummary</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.StubPointSummary.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.StubPointSummary.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.StubPointSummary.#ctor(PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.PointSummary.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.StubPointSummary.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de PointSummary.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.StubPointSummary.DoCallbackTypedObject">
            <summary>Establecer el stub de PointSummary.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.StubPointSummary.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPointSummary</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.StubPointSummary.TypeNameGet">
            <summary>Establecer el stub de PointSummary.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.StubPointSummary.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.StubPointSummary.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.StubPointSummary.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Reroll.Pojo.Fakes.StubPointSummary.TypeName">
            <summary>Establecer el stub de PointSummary.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStat">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Statistics.AggregatedStat</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStat.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStat.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.AggregatedStat)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStat.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStat.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStat.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStat.ChampionIdGet">
            <summary>Establecer el shim de AggregatedStat.get_ChampionId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStat.ChampionIdSetDouble">
            <summary>Establecer el shim de AggregatedStat.set_ChampionId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStat.Constructor">
            <summary>Establecer el shim de AggregatedStat.AggregatedStat()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStat.ConstructorAggregatedStatCallback">
            <summary>Establecer el shim de AggregatedStat.AggregatedStat(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStat.ConstructorTypedObject">
            <summary>Establecer el shim de AggregatedStat.AggregatedStat(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStat.CountGet">
            <summary>Establecer el shim de AggregatedStat.get_Count()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStat.CountSetDouble">
            <summary>Establecer el shim de AggregatedStat.set_Count(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStat.DoCallbackTypedObject">
            <summary>Establecer el shim de AggregatedStat.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStat.StatTypeGet">
            <summary>Establecer el shim de AggregatedStat.get_StatType()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStat.StatTypeSetString">
            <summary>Establecer el shim de AggregatedStat.set_StatType(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStat.TypeNameGet">
            <summary>Establecer el shim de AggregatedStat.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStat.ValueGet">
            <summary>Establecer el shim de AggregatedStat.get_Value()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStat.ValueSetDouble">
            <summary>Establecer el shim de AggregatedStat.set_Value(Double value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStat.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStat.AllInstances.ChampionIdGet">
            <summary>Establecer el shim de AggregatedStat.get_ChampionId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStat.AllInstances.ChampionIdSetDouble">
            <summary>Establecer el shim de AggregatedStat.set_ChampionId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStat.AllInstances.CountGet">
            <summary>Establecer el shim de AggregatedStat.get_Count()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStat.AllInstances.CountSetDouble">
            <summary>Establecer el shim de AggregatedStat.set_Count(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStat.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de AggregatedStat.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStat.AllInstances.StatTypeGet">
            <summary>Establecer el shim de AggregatedStat.get_StatType()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStat.AllInstances.StatTypeSetString">
            <summary>Establecer el shim de AggregatedStat.set_StatType(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStat.AllInstances.TypeNameGet">
            <summary>Establecer el shim de AggregatedStat.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStat.AllInstances.ValueGet">
            <summary>Establecer el shim de AggregatedStat.get_Value()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStat.AllInstances.ValueSetDouble">
            <summary>Establecer el shim de AggregatedStat.set_Value(Double value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStats">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Statistics.AggregatedStats</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStats.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStats.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.AggregatedStats)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStats.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStats.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStats.AggregatedStatsJsonGet">
            <summary>Establecer el shim de AggregatedStats.get_AggregatedStatsJson()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStats.AggregatedStatsJsonSetString">
            <summary>Establecer el shim de AggregatedStats.set_AggregatedStatsJson(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStats.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStats.Constructor">
            <summary>Establecer el shim de AggregatedStats.AggregatedStats()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStats.ConstructorAggregatedStatsCallback">
            <summary>Establecer el shim de AggregatedStats.AggregatedStats(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStats.ConstructorTypedObject">
            <summary>Establecer el shim de AggregatedStats.AggregatedStats(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStats.DoCallbackTypedObject">
            <summary>Establecer el shim de AggregatedStats.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStats.KeyGet">
            <summary>Establecer el shim de AggregatedStats.get_Key()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStats.KeySetAggregatedStatsKey">
            <summary>Establecer el shim de AggregatedStats.set_Key(AggregatedStatsKey value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStats.LifetimeStatisticsGet">
            <summary>Establecer el shim de AggregatedStats.get_LifetimeStatistics()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStats.LifetimeStatisticsSetListOfAggregatedStat">
            <summary>Establecer el shim de AggregatedStats.set_LifetimeStatistics(List`1&lt;AggregatedStat&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStats.ModifyDateGet">
            <summary>Establecer el shim de AggregatedStats.get_ModifyDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStats.ModifyDateSetObject">
            <summary>Establecer el shim de AggregatedStats.set_ModifyDate(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStats.TypeNameGet">
            <summary>Establecer el shim de AggregatedStats.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStats.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStats.AllInstances.AggregatedStatsJsonGet">
            <summary>Establecer el shim de AggregatedStats.get_AggregatedStatsJson()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStats.AllInstances.AggregatedStatsJsonSetString">
            <summary>Establecer el shim de AggregatedStats.set_AggregatedStatsJson(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStats.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de AggregatedStats.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStats.AllInstances.KeyGet">
            <summary>Establecer el shim de AggregatedStats.get_Key()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStats.AllInstances.KeySetAggregatedStatsKey">
            <summary>Establecer el shim de AggregatedStats.set_Key(AggregatedStatsKey value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStats.AllInstances.LifetimeStatisticsGet">
            <summary>Establecer el shim de AggregatedStats.get_LifetimeStatistics()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStats.AllInstances.LifetimeStatisticsSetListOfAggregatedStat">
            <summary>Establecer el shim de AggregatedStats.set_LifetimeStatistics(List`1&lt;AggregatedStat&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStats.AllInstances.ModifyDateGet">
            <summary>Establecer el shim de AggregatedStats.get_ModifyDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStats.AllInstances.ModifyDateSetObject">
            <summary>Establecer el shim de AggregatedStats.set_ModifyDate(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStats.AllInstances.TypeNameGet">
            <summary>Establecer el shim de AggregatedStats.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStatsKey">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Statistics.AggregatedStatsKey</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStatsKey.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStatsKey.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.AggregatedStatsKey)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStatsKey.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStatsKey.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStatsKey.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStatsKey.Constructor">
            <summary>Establecer el shim de AggregatedStatsKey.AggregatedStatsKey()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStatsKey.ConstructorAggregatedStatsKeyCallback">
            <summary>Establecer el shim de AggregatedStatsKey.AggregatedStatsKey(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStatsKey.ConstructorTypedObject">
            <summary>Establecer el shim de AggregatedStatsKey.AggregatedStatsKey(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStatsKey.DoCallbackTypedObject">
            <summary>Establecer el shim de AggregatedStatsKey.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStatsKey.GameModeGet">
            <summary>Establecer el shim de AggregatedStatsKey.get_GameMode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStatsKey.GameModeSetString">
            <summary>Establecer el shim de AggregatedStatsKey.set_GameMode(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStatsKey.GameModeStringGet">
            <summary>Establecer el shim de AggregatedStatsKey.get_GameModeString()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStatsKey.GameModeStringSetString">
            <summary>Establecer el shim de AggregatedStatsKey.set_GameModeString(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStatsKey.TypeNameGet">
            <summary>Establecer el shim de AggregatedStatsKey.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStatsKey.UserIdGet">
            <summary>Establecer el shim de AggregatedStatsKey.get_UserId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStatsKey.UserIdSetDouble">
            <summary>Establecer el shim de AggregatedStatsKey.set_UserId(Double value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStatsKey.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStatsKey.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de AggregatedStatsKey.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStatsKey.AllInstances.GameModeGet">
            <summary>Establecer el shim de AggregatedStatsKey.get_GameMode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStatsKey.AllInstances.GameModeSetString">
            <summary>Establecer el shim de AggregatedStatsKey.set_GameMode(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStatsKey.AllInstances.GameModeStringGet">
            <summary>Establecer el shim de AggregatedStatsKey.get_GameModeString()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStatsKey.AllInstances.GameModeStringSetString">
            <summary>Establecer el shim de AggregatedStatsKey.set_GameModeString(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStatsKey.AllInstances.TypeNameGet">
            <summary>Establecer el shim de AggregatedStatsKey.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStatsKey.AllInstances.UserIdGet">
            <summary>Establecer el shim de AggregatedStatsKey.get_UserId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimAggregatedStatsKey.AllInstances.UserIdSetDouble">
            <summary>Establecer el shim de AggregatedStatsKey.set_UserId(Double value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimChampionStatInfo">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Statistics.ChampionStatInfo</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimChampionStatInfo.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimChampionStatInfo.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.ChampionStatInfo)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimChampionStatInfo.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimChampionStatInfo.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimChampionStatInfo.AccountIdGet">
            <summary>Establecer el shim de ChampionStatInfo.get_AccountId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimChampionStatInfo.AccountIdSetDouble">
            <summary>Establecer el shim de ChampionStatInfo.set_AccountId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimChampionStatInfo.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimChampionStatInfo.ChampionIdGet">
            <summary>Establecer el shim de ChampionStatInfo.get_ChampionId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimChampionStatInfo.ChampionIdSetDouble">
            <summary>Establecer el shim de ChampionStatInfo.set_ChampionId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimChampionStatInfo.Constructor">
            <summary>Establecer el shim de ChampionStatInfo.ChampionStatInfo()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimChampionStatInfo.ConstructorChampionStatInfoCallback">
            <summary>Establecer el shim de ChampionStatInfo.ChampionStatInfo(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimChampionStatInfo.ConstructorTypedObject">
            <summary>Establecer el shim de ChampionStatInfo.ChampionStatInfo(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimChampionStatInfo.DoCallbackTypedObject">
            <summary>Establecer el shim de ChampionStatInfo.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimChampionStatInfo.StatsGet">
            <summary>Establecer el shim de ChampionStatInfo.get_Stats()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimChampionStatInfo.StatsSetListOfAggregatedStat">
            <summary>Establecer el shim de ChampionStatInfo.set_Stats(List`1&lt;AggregatedStat&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimChampionStatInfo.TotalGamesPlayedGet">
            <summary>Establecer el shim de ChampionStatInfo.get_TotalGamesPlayed()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimChampionStatInfo.TotalGamesPlayedSetInt32">
            <summary>Establecer el shim de ChampionStatInfo.set_TotalGamesPlayed(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimChampionStatInfo.TypeNameGet">
            <summary>Establecer el shim de ChampionStatInfo.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimChampionStatInfo.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimChampionStatInfo.AllInstances.AccountIdGet">
            <summary>Establecer el shim de ChampionStatInfo.get_AccountId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimChampionStatInfo.AllInstances.AccountIdSetDouble">
            <summary>Establecer el shim de ChampionStatInfo.set_AccountId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimChampionStatInfo.AllInstances.ChampionIdGet">
            <summary>Establecer el shim de ChampionStatInfo.get_ChampionId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimChampionStatInfo.AllInstances.ChampionIdSetDouble">
            <summary>Establecer el shim de ChampionStatInfo.set_ChampionId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimChampionStatInfo.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de ChampionStatInfo.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimChampionStatInfo.AllInstances.StatsGet">
            <summary>Establecer el shim de ChampionStatInfo.get_Stats()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimChampionStatInfo.AllInstances.StatsSetListOfAggregatedStat">
            <summary>Establecer el shim de ChampionStatInfo.set_Stats(List`1&lt;AggregatedStat&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimChampionStatInfo.AllInstances.TotalGamesPlayedGet">
            <summary>Establecer el shim de ChampionStatInfo.get_TotalGamesPlayed()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimChampionStatInfo.AllInstances.TotalGamesPlayedSetInt32">
            <summary>Establecer el shim de ChampionStatInfo.set_TotalGamesPlayed(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimChampionStatInfo.AllInstances.TypeNameGet">
            <summary>Establecer el shim de ChampionStatInfo.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Statistics.EndOfGameStats</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.EndOfGameStats)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.BasePointsGet">
            <summary>Establecer el shim de EndOfGameStats.get_BasePoints()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.BasePointsSetInt32">
            <summary>Establecer el shim de EndOfGameStats.set_BasePoints(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.BoostIpEarnedGet">
            <summary>Establecer el shim de EndOfGameStats.get_BoostIpEarned()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.BoostIpEarnedSetDouble">
            <summary>Establecer el shim de EndOfGameStats.set_BoostIpEarned(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.BoostXpEarnedGet">
            <summary>Establecer el shim de EndOfGameStats.get_BoostXpEarned()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.BoostXpEarnedSetDouble">
            <summary>Establecer el shim de EndOfGameStats.set_BoostXpEarned(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.CoOpVsAiMinutesLeftTodayGet">
            <summary>Establecer el shim de EndOfGameStats.get_CoOpVsAiMinutesLeftToday()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.CoOpVsAiMinutesLeftTodaySetInt32">
            <summary>Establecer el shim de EndOfGameStats.set_CoOpVsAiMinutesLeftToday(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.CoOpVsAiMsecsUntilResetGet">
            <summary>Establecer el shim de EndOfGameStats.get_CoOpVsAiMsecsUntilReset()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.CoOpVsAiMsecsUntilResetSetDouble">
            <summary>Establecer el shim de EndOfGameStats.set_CoOpVsAiMsecsUntilReset(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.CompletionBonusPointsGet">
            <summary>Establecer el shim de EndOfGameStats.get_CompletionBonusPoints()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.CompletionBonusPointsSetInt32">
            <summary>Establecer el shim de EndOfGameStats.set_CompletionBonusPoints(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.Constructor">
            <summary>Establecer el shim de EndOfGameStats.EndOfGameStats()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.ConstructorEndOfGameStatsCallback">
            <summary>Establecer el shim de EndOfGameStats.EndOfGameStats(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.ConstructorTypedObject">
            <summary>Establecer el shim de EndOfGameStats.EndOfGameStats(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.CustomMinutesLeftTodayGet">
            <summary>Establecer el shim de EndOfGameStats.get_CustomMinutesLeftToday()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.CustomMinutesLeftTodaySetInt32">
            <summary>Establecer el shim de EndOfGameStats.set_CustomMinutesLeftToday(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.CustomMsecsUntilResetGet">
            <summary>Establecer el shim de EndOfGameStats.get_CustomMsecsUntilReset()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.CustomMsecsUntilResetSetDouble">
            <summary>Establecer el shim de EndOfGameStats.set_CustomMsecsUntilReset(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.DifficultyGet">
            <summary>Establecer el shim de EndOfGameStats.get_Difficulty()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.DifficultySetString">
            <summary>Establecer el shim de EndOfGameStats.set_Difficulty(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.DoCallbackTypedObject">
            <summary>Establecer el shim de EndOfGameStats.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.EloChangeGet">
            <summary>Establecer el shim de EndOfGameStats.get_EloChange()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.EloChangeSetInt32">
            <summary>Establecer el shim de EndOfGameStats.set_EloChange(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.EloGet">
            <summary>Establecer el shim de EndOfGameStats.get_Elo()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.EloSetInt32">
            <summary>Establecer el shim de EndOfGameStats.set_Elo(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.ExperienceEarnedGet">
            <summary>Establecer el shim de EndOfGameStats.get_ExperienceEarned()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.ExperienceEarnedSetDouble">
            <summary>Establecer el shim de EndOfGameStats.set_ExperienceEarned(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.ExperienceTotalGet">
            <summary>Establecer el shim de EndOfGameStats.get_ExperienceTotal()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.ExperienceTotalSetDouble">
            <summary>Establecer el shim de EndOfGameStats.set_ExperienceTotal(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.FirstWinBonusGet">
            <summary>Establecer el shim de EndOfGameStats.get_FirstWinBonus()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.FirstWinBonusSetDouble">
            <summary>Establecer el shim de EndOfGameStats.set_FirstWinBonus(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.GameIdGet">
            <summary>Establecer el shim de EndOfGameStats.get_GameId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.GameIdSetDouble">
            <summary>Establecer el shim de EndOfGameStats.set_GameId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.GameLengthGet">
            <summary>Establecer el shim de EndOfGameStats.get_GameLength()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.GameLengthSetDouble">
            <summary>Establecer el shim de EndOfGameStats.set_GameLength(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.GameModeGet">
            <summary>Establecer el shim de EndOfGameStats.get_GameMode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.GameModeSetString">
            <summary>Establecer el shim de EndOfGameStats.set_GameMode(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.GameTypeGet">
            <summary>Establecer el shim de EndOfGameStats.get_GameType()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.GameTypeSetString">
            <summary>Establecer el shim de EndOfGameStats.set_GameType(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.ImbalancedTeamsNoPointsGet">
            <summary>Establecer el shim de EndOfGameStats.get_ImbalancedTeamsNoPoints()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.ImbalancedTeamsNoPointsSetBoolean">
            <summary>Establecer el shim de EndOfGameStats.set_ImbalancedTeamsNoPoints(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.InvalidGet">
            <summary>Establecer el shim de EndOfGameStats.get_Invalid()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.InvalidSetBoolean">
            <summary>Establecer el shim de EndOfGameStats.set_Invalid(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.IpEarnedGet">
            <summary>Establecer el shim de EndOfGameStats.get_IpEarned()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.IpEarnedSetDouble">
            <summary>Establecer el shim de EndOfGameStats.set_IpEarned(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.IpTotalGet">
            <summary>Establecer el shim de EndOfGameStats.get_IpTotal()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.IpTotalSetDouble">
            <summary>Establecer el shim de EndOfGameStats.set_IpTotal(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.LeveledUpGet">
            <summary>Establecer el shim de EndOfGameStats.get_LeveledUp()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.LeveledUpSetBoolean">
            <summary>Establecer el shim de EndOfGameStats.set_LeveledUp(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.LoyaltyBoostIpEarnedGet">
            <summary>Establecer el shim de EndOfGameStats.get_LoyaltyBoostIpEarned()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.LoyaltyBoostIpEarnedSetDouble">
            <summary>Establecer el shim de EndOfGameStats.set_LoyaltyBoostIpEarned(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.LoyaltyBoostXpEarnedGet">
            <summary>Establecer el shim de EndOfGameStats.get_LoyaltyBoostXpEarned()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.LoyaltyBoostXpEarnedSetDouble">
            <summary>Establecer el shim de EndOfGameStats.set_LoyaltyBoostXpEarned(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.MyTeamInfoGet">
            <summary>Establecer el shim de EndOfGameStats.get_MyTeamInfo()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.MyTeamInfoSetTeamInfo">
            <summary>Establecer el shim de EndOfGameStats.set_MyTeamInfo(TeamInfo value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.MyTeamStatusGet">
            <summary>Establecer el shim de EndOfGameStats.get_MyTeamStatus()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.MyTeamStatusSetString">
            <summary>Establecer el shim de EndOfGameStats.set_MyTeamStatus(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.NewSpellsGet">
            <summary>Establecer el shim de EndOfGameStats.get_NewSpells()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.NewSpellsSetListOfObject">
            <summary>Establecer el shim de EndOfGameStats.set_NewSpells(List`1&lt;Object&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.OdinBonusIpGet">
            <summary>Establecer el shim de EndOfGameStats.get_OdinBonusIp()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.OdinBonusIpSetInt32">
            <summary>Establecer el shim de EndOfGameStats.set_OdinBonusIp(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.OtherTeamInfoGet">
            <summary>Establecer el shim de EndOfGameStats.get_OtherTeamInfo()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.OtherTeamInfoSetTeamInfo">
            <summary>Establecer el shim de EndOfGameStats.set_OtherTeamInfo(TeamInfo value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.OtherTeamPlayerParticipantStatsGet">
            <summary>Establecer el shim de EndOfGameStats.get_OtherTeamPlayerParticipantStats()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.OtherTeamPlayerParticipantStatsSetListOfPlayerParticipantStatsSummary">
            <summary>Establecer el shim de EndOfGameStats.set_OtherTeamPlayerParticipantStats(List`1&lt;PlayerParticipantStatsSummary&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.PointsPenaltiesGet">
            <summary>Establecer el shim de EndOfGameStats.get_PointsPenalties()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.PointsPenaltiesSetListOfObject">
            <summary>Establecer el shim de EndOfGameStats.set_PointsPenalties(List`1&lt;Object&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.QueueBonusEarnedGet">
            <summary>Establecer el shim de EndOfGameStats.get_QueueBonusEarned()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.QueueBonusEarnedSetInt32">
            <summary>Establecer el shim de EndOfGameStats.set_QueueBonusEarned(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.QueueTypeGet">
            <summary>Establecer el shim de EndOfGameStats.get_QueueType()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.QueueTypeSetString">
            <summary>Establecer el shim de EndOfGameStats.set_QueueType(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.RankedGet">
            <summary>Establecer el shim de EndOfGameStats.get_Ranked()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.RankedSetBoolean">
            <summary>Establecer el shim de EndOfGameStats.set_Ranked(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.ReportGameIdGet">
            <summary>Establecer el shim de EndOfGameStats.get_ReportGameId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.ReportGameIdSetInt32">
            <summary>Establecer el shim de EndOfGameStats.set_ReportGameId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.RerollPointsEarnedGet">
            <summary>Establecer el shim de EndOfGameStats.get_RerollPointsEarned()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.RerollPointsEarnedSetDouble">
            <summary>Establecer el shim de EndOfGameStats.set_RerollPointsEarned(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.RoomNameGet">
            <summary>Establecer el shim de EndOfGameStats.get_RoomName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.RoomNameSetString">
            <summary>Establecer el shim de EndOfGameStats.set_RoomName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.RoomPasswordGet">
            <summary>Establecer el shim de EndOfGameStats.get_RoomPassword()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.RoomPasswordSetString">
            <summary>Establecer el shim de EndOfGameStats.set_RoomPassword(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.RpEarnedGet">
            <summary>Establecer el shim de EndOfGameStats.get_RpEarned()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.RpEarnedSetDouble">
            <summary>Establecer el shim de EndOfGameStats.set_RpEarned(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.SendStatsToTournamentProviderGet">
            <summary>Establecer el shim de EndOfGameStats.get_SendStatsToTournamentProvider()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.SendStatsToTournamentProviderSetBoolean">
            <summary>Establecer el shim de EndOfGameStats.set_SendStatsToTournamentProvider(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.SkinIndexGet">
            <summary>Establecer el shim de EndOfGameStats.get_SkinIndex()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.SkinIndexSetInt32">
            <summary>Establecer el shim de EndOfGameStats.set_SkinIndex(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.SummonerNameGet">
            <summary>Establecer el shim de EndOfGameStats.get_SummonerName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.SummonerNameSetString">
            <summary>Establecer el shim de EndOfGameStats.set_SummonerName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.TalentPointsGainedGet">
            <summary>Establecer el shim de EndOfGameStats.get_TalentPointsGained()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.TalentPointsGainedSetInt32">
            <summary>Establecer el shim de EndOfGameStats.set_TalentPointsGained(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.TeamPlayerParticipantStatsGet">
            <summary>Establecer el shim de EndOfGameStats.get_TeamPlayerParticipantStats()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.TeamPlayerParticipantStatsSetListOfPlayerParticipantStatsSummary">
            <summary>Establecer el shim de EndOfGameStats.set_TeamPlayerParticipantStats(List`1&lt;PlayerParticipantStatsSummary&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.TimeUntilNextFirstWinBonusGet">
            <summary>Establecer el shim de EndOfGameStats.get_TimeUntilNextFirstWinBonus()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.TimeUntilNextFirstWinBonusSetDouble">
            <summary>Establecer el shim de EndOfGameStats.set_TimeUntilNextFirstWinBonus(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.TypeNameGet">
            <summary>Establecer el shim de EndOfGameStats.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.UserIdGet">
            <summary>Establecer el shim de EndOfGameStats.get_UserId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.UserIdSetInt32">
            <summary>Establecer el shim de EndOfGameStats.set_UserId(Int32 value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.BasePointsGet">
            <summary>Establecer el shim de EndOfGameStats.get_BasePoints()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.BasePointsSetInt32">
            <summary>Establecer el shim de EndOfGameStats.set_BasePoints(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.BoostIpEarnedGet">
            <summary>Establecer el shim de EndOfGameStats.get_BoostIpEarned()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.BoostIpEarnedSetDouble">
            <summary>Establecer el shim de EndOfGameStats.set_BoostIpEarned(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.BoostXpEarnedGet">
            <summary>Establecer el shim de EndOfGameStats.get_BoostXpEarned()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.BoostXpEarnedSetDouble">
            <summary>Establecer el shim de EndOfGameStats.set_BoostXpEarned(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.CoOpVsAiMinutesLeftTodayGet">
            <summary>Establecer el shim de EndOfGameStats.get_CoOpVsAiMinutesLeftToday()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.CoOpVsAiMinutesLeftTodaySetInt32">
            <summary>Establecer el shim de EndOfGameStats.set_CoOpVsAiMinutesLeftToday(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.CoOpVsAiMsecsUntilResetGet">
            <summary>Establecer el shim de EndOfGameStats.get_CoOpVsAiMsecsUntilReset()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.CoOpVsAiMsecsUntilResetSetDouble">
            <summary>Establecer el shim de EndOfGameStats.set_CoOpVsAiMsecsUntilReset(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.CompletionBonusPointsGet">
            <summary>Establecer el shim de EndOfGameStats.get_CompletionBonusPoints()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.CompletionBonusPointsSetInt32">
            <summary>Establecer el shim de EndOfGameStats.set_CompletionBonusPoints(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.CustomMinutesLeftTodayGet">
            <summary>Establecer el shim de EndOfGameStats.get_CustomMinutesLeftToday()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.CustomMinutesLeftTodaySetInt32">
            <summary>Establecer el shim de EndOfGameStats.set_CustomMinutesLeftToday(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.CustomMsecsUntilResetGet">
            <summary>Establecer el shim de EndOfGameStats.get_CustomMsecsUntilReset()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.CustomMsecsUntilResetSetDouble">
            <summary>Establecer el shim de EndOfGameStats.set_CustomMsecsUntilReset(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.DifficultyGet">
            <summary>Establecer el shim de EndOfGameStats.get_Difficulty()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.DifficultySetString">
            <summary>Establecer el shim de EndOfGameStats.set_Difficulty(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de EndOfGameStats.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.EloChangeGet">
            <summary>Establecer el shim de EndOfGameStats.get_EloChange()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.EloChangeSetInt32">
            <summary>Establecer el shim de EndOfGameStats.set_EloChange(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.EloGet">
            <summary>Establecer el shim de EndOfGameStats.get_Elo()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.EloSetInt32">
            <summary>Establecer el shim de EndOfGameStats.set_Elo(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.ExperienceEarnedGet">
            <summary>Establecer el shim de EndOfGameStats.get_ExperienceEarned()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.ExperienceEarnedSetDouble">
            <summary>Establecer el shim de EndOfGameStats.set_ExperienceEarned(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.ExperienceTotalGet">
            <summary>Establecer el shim de EndOfGameStats.get_ExperienceTotal()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.ExperienceTotalSetDouble">
            <summary>Establecer el shim de EndOfGameStats.set_ExperienceTotal(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.FirstWinBonusGet">
            <summary>Establecer el shim de EndOfGameStats.get_FirstWinBonus()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.FirstWinBonusSetDouble">
            <summary>Establecer el shim de EndOfGameStats.set_FirstWinBonus(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.GameIdGet">
            <summary>Establecer el shim de EndOfGameStats.get_GameId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.GameIdSetDouble">
            <summary>Establecer el shim de EndOfGameStats.set_GameId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.GameLengthGet">
            <summary>Establecer el shim de EndOfGameStats.get_GameLength()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.GameLengthSetDouble">
            <summary>Establecer el shim de EndOfGameStats.set_GameLength(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.GameModeGet">
            <summary>Establecer el shim de EndOfGameStats.get_GameMode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.GameModeSetString">
            <summary>Establecer el shim de EndOfGameStats.set_GameMode(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.GameTypeGet">
            <summary>Establecer el shim de EndOfGameStats.get_GameType()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.GameTypeSetString">
            <summary>Establecer el shim de EndOfGameStats.set_GameType(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.ImbalancedTeamsNoPointsGet">
            <summary>Establecer el shim de EndOfGameStats.get_ImbalancedTeamsNoPoints()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.ImbalancedTeamsNoPointsSetBoolean">
            <summary>Establecer el shim de EndOfGameStats.set_ImbalancedTeamsNoPoints(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.InvalidGet">
            <summary>Establecer el shim de EndOfGameStats.get_Invalid()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.InvalidSetBoolean">
            <summary>Establecer el shim de EndOfGameStats.set_Invalid(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.IpEarnedGet">
            <summary>Establecer el shim de EndOfGameStats.get_IpEarned()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.IpEarnedSetDouble">
            <summary>Establecer el shim de EndOfGameStats.set_IpEarned(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.IpTotalGet">
            <summary>Establecer el shim de EndOfGameStats.get_IpTotal()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.IpTotalSetDouble">
            <summary>Establecer el shim de EndOfGameStats.set_IpTotal(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.LeveledUpGet">
            <summary>Establecer el shim de EndOfGameStats.get_LeveledUp()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.LeveledUpSetBoolean">
            <summary>Establecer el shim de EndOfGameStats.set_LeveledUp(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.LoyaltyBoostIpEarnedGet">
            <summary>Establecer el shim de EndOfGameStats.get_LoyaltyBoostIpEarned()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.LoyaltyBoostIpEarnedSetDouble">
            <summary>Establecer el shim de EndOfGameStats.set_LoyaltyBoostIpEarned(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.LoyaltyBoostXpEarnedGet">
            <summary>Establecer el shim de EndOfGameStats.get_LoyaltyBoostXpEarned()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.LoyaltyBoostXpEarnedSetDouble">
            <summary>Establecer el shim de EndOfGameStats.set_LoyaltyBoostXpEarned(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.MyTeamInfoGet">
            <summary>Establecer el shim de EndOfGameStats.get_MyTeamInfo()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.MyTeamInfoSetTeamInfo">
            <summary>Establecer el shim de EndOfGameStats.set_MyTeamInfo(TeamInfo value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.MyTeamStatusGet">
            <summary>Establecer el shim de EndOfGameStats.get_MyTeamStatus()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.MyTeamStatusSetString">
            <summary>Establecer el shim de EndOfGameStats.set_MyTeamStatus(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.NewSpellsGet">
            <summary>Establecer el shim de EndOfGameStats.get_NewSpells()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.NewSpellsSetListOfObject">
            <summary>Establecer el shim de EndOfGameStats.set_NewSpells(List`1&lt;Object&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.OdinBonusIpGet">
            <summary>Establecer el shim de EndOfGameStats.get_OdinBonusIp()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.OdinBonusIpSetInt32">
            <summary>Establecer el shim de EndOfGameStats.set_OdinBonusIp(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.OtherTeamInfoGet">
            <summary>Establecer el shim de EndOfGameStats.get_OtherTeamInfo()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.OtherTeamInfoSetTeamInfo">
            <summary>Establecer el shim de EndOfGameStats.set_OtherTeamInfo(TeamInfo value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.OtherTeamPlayerParticipantStatsGet">
            <summary>Establecer el shim de EndOfGameStats.get_OtherTeamPlayerParticipantStats()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.OtherTeamPlayerParticipantStatsSetListOfPlayerParticipantStatsSummary">
            <summary>Establecer el shim de EndOfGameStats.set_OtherTeamPlayerParticipantStats(List`1&lt;PlayerParticipantStatsSummary&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.PointsPenaltiesGet">
            <summary>Establecer el shim de EndOfGameStats.get_PointsPenalties()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.PointsPenaltiesSetListOfObject">
            <summary>Establecer el shim de EndOfGameStats.set_PointsPenalties(List`1&lt;Object&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.QueueBonusEarnedGet">
            <summary>Establecer el shim de EndOfGameStats.get_QueueBonusEarned()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.QueueBonusEarnedSetInt32">
            <summary>Establecer el shim de EndOfGameStats.set_QueueBonusEarned(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.QueueTypeGet">
            <summary>Establecer el shim de EndOfGameStats.get_QueueType()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.QueueTypeSetString">
            <summary>Establecer el shim de EndOfGameStats.set_QueueType(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.RankedGet">
            <summary>Establecer el shim de EndOfGameStats.get_Ranked()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.RankedSetBoolean">
            <summary>Establecer el shim de EndOfGameStats.set_Ranked(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.ReportGameIdGet">
            <summary>Establecer el shim de EndOfGameStats.get_ReportGameId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.ReportGameIdSetInt32">
            <summary>Establecer el shim de EndOfGameStats.set_ReportGameId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.RerollPointsEarnedGet">
            <summary>Establecer el shim de EndOfGameStats.get_RerollPointsEarned()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.RerollPointsEarnedSetDouble">
            <summary>Establecer el shim de EndOfGameStats.set_RerollPointsEarned(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.RoomNameGet">
            <summary>Establecer el shim de EndOfGameStats.get_RoomName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.RoomNameSetString">
            <summary>Establecer el shim de EndOfGameStats.set_RoomName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.RoomPasswordGet">
            <summary>Establecer el shim de EndOfGameStats.get_RoomPassword()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.RoomPasswordSetString">
            <summary>Establecer el shim de EndOfGameStats.set_RoomPassword(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.RpEarnedGet">
            <summary>Establecer el shim de EndOfGameStats.get_RpEarned()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.RpEarnedSetDouble">
            <summary>Establecer el shim de EndOfGameStats.set_RpEarned(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.SendStatsToTournamentProviderGet">
            <summary>Establecer el shim de EndOfGameStats.get_SendStatsToTournamentProvider()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.SendStatsToTournamentProviderSetBoolean">
            <summary>Establecer el shim de EndOfGameStats.set_SendStatsToTournamentProvider(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.SkinIndexGet">
            <summary>Establecer el shim de EndOfGameStats.get_SkinIndex()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.SkinIndexSetInt32">
            <summary>Establecer el shim de EndOfGameStats.set_SkinIndex(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.SummonerNameGet">
            <summary>Establecer el shim de EndOfGameStats.get_SummonerName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.SummonerNameSetString">
            <summary>Establecer el shim de EndOfGameStats.set_SummonerName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.TalentPointsGainedGet">
            <summary>Establecer el shim de EndOfGameStats.get_TalentPointsGained()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.TalentPointsGainedSetInt32">
            <summary>Establecer el shim de EndOfGameStats.set_TalentPointsGained(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.TeamPlayerParticipantStatsGet">
            <summary>Establecer el shim de EndOfGameStats.get_TeamPlayerParticipantStats()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.TeamPlayerParticipantStatsSetListOfPlayerParticipantStatsSummary">
            <summary>Establecer el shim de EndOfGameStats.set_TeamPlayerParticipantStats(List`1&lt;PlayerParticipantStatsSummary&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.TimeUntilNextFirstWinBonusGet">
            <summary>Establecer el shim de EndOfGameStats.get_TimeUntilNextFirstWinBonus()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.TimeUntilNextFirstWinBonusSetDouble">
            <summary>Establecer el shim de EndOfGameStats.set_TimeUntilNextFirstWinBonus(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.TypeNameGet">
            <summary>Establecer el shim de EndOfGameStats.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.UserIdGet">
            <summary>Establecer el shim de EndOfGameStats.get_UserId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimEndOfGameStats.AllInstances.UserIdSetInt32">
            <summary>Establecer el shim de EndOfGameStats.set_UserId(Int32 value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimFellowPlayerInfo">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Statistics.FellowPlayerInfo</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimFellowPlayerInfo.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimFellowPlayerInfo.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.FellowPlayerInfo)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimFellowPlayerInfo.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimFellowPlayerInfo.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimFellowPlayerInfo.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimFellowPlayerInfo.ChampionIdGet">
            <summary>Establecer el shim de FellowPlayerInfo.get_ChampionId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimFellowPlayerInfo.ChampionIdSetDouble">
            <summary>Establecer el shim de FellowPlayerInfo.set_ChampionId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimFellowPlayerInfo.Constructor">
            <summary>Establecer el shim de FellowPlayerInfo.FellowPlayerInfo()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimFellowPlayerInfo.ConstructorFellowPlayerInfoCallback">
            <summary>Establecer el shim de FellowPlayerInfo.FellowPlayerInfo(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimFellowPlayerInfo.ConstructorTypedObject">
            <summary>Establecer el shim de FellowPlayerInfo.FellowPlayerInfo(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimFellowPlayerInfo.DoCallbackTypedObject">
            <summary>Establecer el shim de FellowPlayerInfo.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimFellowPlayerInfo.SummonerIdGet">
            <summary>Establecer el shim de FellowPlayerInfo.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimFellowPlayerInfo.SummonerIdSetDouble">
            <summary>Establecer el shim de FellowPlayerInfo.set_SummonerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimFellowPlayerInfo.TeamIdGet">
            <summary>Establecer el shim de FellowPlayerInfo.get_TeamId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimFellowPlayerInfo.TeamIdSetInt32">
            <summary>Establecer el shim de FellowPlayerInfo.set_TeamId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimFellowPlayerInfo.TypeNameGet">
            <summary>Establecer el shim de FellowPlayerInfo.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimFellowPlayerInfo.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimFellowPlayerInfo.AllInstances.ChampionIdGet">
            <summary>Establecer el shim de FellowPlayerInfo.get_ChampionId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimFellowPlayerInfo.AllInstances.ChampionIdSetDouble">
            <summary>Establecer el shim de FellowPlayerInfo.set_ChampionId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimFellowPlayerInfo.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de FellowPlayerInfo.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimFellowPlayerInfo.AllInstances.SummonerIdGet">
            <summary>Establecer el shim de FellowPlayerInfo.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimFellowPlayerInfo.AllInstances.SummonerIdSetDouble">
            <summary>Establecer el shim de FellowPlayerInfo.set_SummonerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimFellowPlayerInfo.AllInstances.TeamIdGet">
            <summary>Establecer el shim de FellowPlayerInfo.get_TeamId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimFellowPlayerInfo.AllInstances.TeamIdSetInt32">
            <summary>Establecer el shim de FellowPlayerInfo.set_TeamId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimFellowPlayerInfo.AllInstances.TypeNameGet">
            <summary>Establecer el shim de FellowPlayerInfo.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimLeaverPenaltyStats">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Statistics.LeaverPenaltyStats</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimLeaverPenaltyStats.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimLeaverPenaltyStats.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.LeaverPenaltyStats)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimLeaverPenaltyStats.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimLeaverPenaltyStats.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimLeaverPenaltyStats.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimLeaverPenaltyStats.Constructor">
            <summary>Establecer el shim de LeaverPenaltyStats.LeaverPenaltyStats()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimLeaverPenaltyStats.ConstructorLeaverPenaltyStatsCallback">
            <summary>Establecer el shim de LeaverPenaltyStats.LeaverPenaltyStats(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimLeaverPenaltyStats.ConstructorTypedObject">
            <summary>Establecer el shim de LeaverPenaltyStats.LeaverPenaltyStats(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimLeaverPenaltyStats.DoCallbackTypedObject">
            <summary>Establecer el shim de LeaverPenaltyStats.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimLeaverPenaltyStats.LastDecayGet">
            <summary>Establecer el shim de LeaverPenaltyStats.get_LastDecay()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimLeaverPenaltyStats.LastDecaySetDateTime">
            <summary>Establecer el shim de LeaverPenaltyStats.set_LastDecay(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimLeaverPenaltyStats.LastLevelIncreaseGet">
            <summary>Establecer el shim de LeaverPenaltyStats.get_LastLevelIncrease()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimLeaverPenaltyStats.LastLevelIncreaseSetObject">
            <summary>Establecer el shim de LeaverPenaltyStats.set_LastLevelIncrease(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimLeaverPenaltyStats.LevelGet">
            <summary>Establecer el shim de LeaverPenaltyStats.get_Level()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimLeaverPenaltyStats.LevelSetInt32">
            <summary>Establecer el shim de LeaverPenaltyStats.set_Level(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimLeaverPenaltyStats.PointsGet">
            <summary>Establecer el shim de LeaverPenaltyStats.get_Points()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimLeaverPenaltyStats.PointsSetInt32">
            <summary>Establecer el shim de LeaverPenaltyStats.set_Points(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimLeaverPenaltyStats.TypeNameGet">
            <summary>Establecer el shim de LeaverPenaltyStats.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimLeaverPenaltyStats.UserInformedGet">
            <summary>Establecer el shim de LeaverPenaltyStats.get_UserInformed()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimLeaverPenaltyStats.UserInformedSetBoolean">
            <summary>Establecer el shim de LeaverPenaltyStats.set_UserInformed(Boolean value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimLeaverPenaltyStats.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimLeaverPenaltyStats.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de LeaverPenaltyStats.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimLeaverPenaltyStats.AllInstances.LastDecayGet">
            <summary>Establecer el shim de LeaverPenaltyStats.get_LastDecay()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimLeaverPenaltyStats.AllInstances.LastDecaySetDateTime">
            <summary>Establecer el shim de LeaverPenaltyStats.set_LastDecay(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimLeaverPenaltyStats.AllInstances.LastLevelIncreaseGet">
            <summary>Establecer el shim de LeaverPenaltyStats.get_LastLevelIncrease()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimLeaverPenaltyStats.AllInstances.LastLevelIncreaseSetObject">
            <summary>Establecer el shim de LeaverPenaltyStats.set_LastLevelIncrease(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimLeaverPenaltyStats.AllInstances.LevelGet">
            <summary>Establecer el shim de LeaverPenaltyStats.get_Level()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimLeaverPenaltyStats.AllInstances.LevelSetInt32">
            <summary>Establecer el shim de LeaverPenaltyStats.set_Level(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimLeaverPenaltyStats.AllInstances.PointsGet">
            <summary>Establecer el shim de LeaverPenaltyStats.get_Points()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimLeaverPenaltyStats.AllInstances.PointsSetInt32">
            <summary>Establecer el shim de LeaverPenaltyStats.set_Points(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimLeaverPenaltyStats.AllInstances.TypeNameGet">
            <summary>Establecer el shim de LeaverPenaltyStats.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimLeaverPenaltyStats.AllInstances.UserInformedGet">
            <summary>Establecer el shim de LeaverPenaltyStats.get_UserInformed()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimLeaverPenaltyStats.AllInstances.UserInformedSetBoolean">
            <summary>Establecer el shim de LeaverPenaltyStats.set_UserInformed(Boolean value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Statistics.PlayerGameStats</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.PlayerGameStats)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AdjustedRatingGet">
            <summary>Establecer el shim de PlayerGameStats.get_AdjustedRating()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AdjustedRatingSetInt32">
            <summary>Establecer el shim de PlayerGameStats.set_AdjustedRating(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AfkGet">
            <summary>Establecer el shim de PlayerGameStats.get_Afk()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AfkSetBoolean">
            <summary>Establecer el shim de PlayerGameStats.set_Afk(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.BoostIpEarnedGet">
            <summary>Establecer el shim de PlayerGameStats.get_BoostIpEarned()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.BoostIpEarnedSetDouble">
            <summary>Establecer el shim de PlayerGameStats.set_BoostIpEarned(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.BoostXpEarnedGet">
            <summary>Establecer el shim de PlayerGameStats.get_BoostXpEarned()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.BoostXpEarnedSetDouble">
            <summary>Establecer el shim de PlayerGameStats.set_BoostXpEarned(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.ChampionIdGet">
            <summary>Establecer el shim de PlayerGameStats.get_ChampionId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.ChampionIdSetDouble">
            <summary>Establecer el shim de PlayerGameStats.set_ChampionId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.Constructor">
            <summary>Establecer el shim de PlayerGameStats.PlayerGameStats()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.ConstructorPlayerGameStatsCallback">
            <summary>Establecer el shim de PlayerGameStats.PlayerGameStats(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.ConstructorTypedObject">
            <summary>Establecer el shim de PlayerGameStats.PlayerGameStats(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.CreateDateGet">
            <summary>Establecer el shim de PlayerGameStats.get_CreateDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.CreateDateSetDateTime">
            <summary>Establecer el shim de PlayerGameStats.set_CreateDate(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.DifficultyGet">
            <summary>Establecer el shim de PlayerGameStats.get_Difficulty()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.DifficultySetObject">
            <summary>Establecer el shim de PlayerGameStats.set_Difficulty(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.DifficultyStringGet">
            <summary>Establecer el shim de PlayerGameStats.get_DifficultyString()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.DifficultyStringSetObject">
            <summary>Establecer el shim de PlayerGameStats.set_DifficultyString(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.DoCallbackTypedObject">
            <summary>Establecer el shim de PlayerGameStats.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.EligibleFirstWinOfDayGet">
            <summary>Establecer el shim de PlayerGameStats.get_EligibleFirstWinOfDay()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.EligibleFirstWinOfDaySetBoolean">
            <summary>Establecer el shim de PlayerGameStats.set_EligibleFirstWinOfDay(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.EloChangeGet">
            <summary>Establecer el shim de PlayerGameStats.get_EloChange()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.EloChangeSetInt32">
            <summary>Establecer el shim de PlayerGameStats.set_EloChange(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.ExperienceEarnedGet">
            <summary>Establecer el shim de PlayerGameStats.get_ExperienceEarned()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.ExperienceEarnedSetDouble">
            <summary>Establecer el shim de PlayerGameStats.set_ExperienceEarned(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.FellowPlayersGet">
            <summary>Establecer el shim de PlayerGameStats.get_FellowPlayers()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.FellowPlayersSetListOfFellowPlayerInfo">
            <summary>Establecer el shim de PlayerGameStats.set_FellowPlayers(List`1&lt;FellowPlayerInfo&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.GameIdGet">
            <summary>Establecer el shim de PlayerGameStats.get_GameId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.GameIdSetDouble">
            <summary>Establecer el shim de PlayerGameStats.set_GameId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.GameMapIdGet">
            <summary>Establecer el shim de PlayerGameStats.get_GameMapId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.GameMapIdSetInt32">
            <summary>Establecer el shim de PlayerGameStats.set_GameMapId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.GameModeGet">
            <summary>Establecer el shim de PlayerGameStats.get_GameMode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.GameModeSetString">
            <summary>Establecer el shim de PlayerGameStats.set_GameMode(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.GameTypeEnumGet">
            <summary>Establecer el shim de PlayerGameStats.get_GameTypeEnum()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.GameTypeEnumSetString">
            <summary>Establecer el shim de PlayerGameStats.set_GameTypeEnum(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.GameTypeGet">
            <summary>Establecer el shim de PlayerGameStats.get_GameType()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.GameTypeSetString">
            <summary>Establecer el shim de PlayerGameStats.set_GameType(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.IdGet">
            <summary>Establecer el shim de PlayerGameStats.get_Id()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.IdSetObject">
            <summary>Establecer el shim de PlayerGameStats.set_Id(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.InvalidGet">
            <summary>Establecer el shim de PlayerGameStats.get_Invalid()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.InvalidSetBoolean">
            <summary>Establecer el shim de PlayerGameStats.set_Invalid(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.IpEarnedGet">
            <summary>Establecer el shim de PlayerGameStats.get_IpEarned()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.IpEarnedSetDouble">
            <summary>Establecer el shim de PlayerGameStats.set_IpEarned(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.KCoefficientGet">
            <summary>Establecer el shim de PlayerGameStats.get_KCoefficient()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.KCoefficientSetDouble">
            <summary>Establecer el shim de PlayerGameStats.set_KCoefficient(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.LeaverGet">
            <summary>Establecer el shim de PlayerGameStats.get_Leaver()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.LeaverSetBoolean">
            <summary>Establecer el shim de PlayerGameStats.set_Leaver(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.LevelGet">
            <summary>Establecer el shim de PlayerGameStats.get_Level()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.LevelSetDouble">
            <summary>Establecer el shim de PlayerGameStats.set_Level(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.PredictedWinPctGet">
            <summary>Establecer el shim de PlayerGameStats.get_PredictedWinPct()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.PredictedWinPctSetDouble">
            <summary>Establecer el shim de PlayerGameStats.set_PredictedWinPct(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.PremadeSizeGet">
            <summary>Establecer el shim de PlayerGameStats.get_PremadeSize()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.PremadeSizeSetInt32">
            <summary>Establecer el shim de PlayerGameStats.set_PremadeSize(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.PremadeTeamGet">
            <summary>Establecer el shim de PlayerGameStats.get_PremadeTeam()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.PremadeTeamSetBoolean">
            <summary>Establecer el shim de PlayerGameStats.set_PremadeTeam(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.QueueTypeGet">
            <summary>Establecer el shim de PlayerGameStats.get_QueueType()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.QueueTypeSetString">
            <summary>Establecer el shim de PlayerGameStats.set_QueueType(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.RankedGet">
            <summary>Establecer el shim de PlayerGameStats.get_Ranked()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.RankedSetBoolean">
            <summary>Establecer el shim de PlayerGameStats.set_Ranked(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.RatingGet">
            <summary>Establecer el shim de PlayerGameStats.get_Rating()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.RatingSetDouble">
            <summary>Establecer el shim de PlayerGameStats.set_Rating(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.RawStatsJsonGet">
            <summary>Establecer el shim de PlayerGameStats.get_RawStatsJson()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.RawStatsJsonSetObject">
            <summary>Establecer el shim de PlayerGameStats.set_RawStatsJson(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.SkinIndexGet">
            <summary>Establecer el shim de PlayerGameStats.get_SkinIndex()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.SkinIndexSetInt32">
            <summary>Establecer el shim de PlayerGameStats.set_SkinIndex(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.SkinNameGet">
            <summary>Establecer el shim de PlayerGameStats.get_SkinName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.SkinNameSetObject">
            <summary>Establecer el shim de PlayerGameStats.set_SkinName(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.Spell1Get">
            <summary>Establecer el shim de PlayerGameStats.get_Spell1()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.Spell1SetDouble">
            <summary>Establecer el shim de PlayerGameStats.set_Spell1(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.Spell2Get">
            <summary>Establecer el shim de PlayerGameStats.get_Spell2()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.Spell2SetDouble">
            <summary>Establecer el shim de PlayerGameStats.set_Spell2(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.StatisticsGet">
            <summary>Establecer el shim de PlayerGameStats.get_Statistics()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.StatisticsSetListOfRawStat">
            <summary>Establecer el shim de PlayerGameStats.set_Statistics(List`1&lt;RawStat&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.SubTypeGet">
            <summary>Establecer el shim de PlayerGameStats.get_SubType()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.SubTypeSetString">
            <summary>Establecer el shim de PlayerGameStats.set_SubType(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.SummonerIdGet">
            <summary>Establecer el shim de PlayerGameStats.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.SummonerIdSetDouble">
            <summary>Establecer el shim de PlayerGameStats.set_SummonerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.TeamIdGet">
            <summary>Establecer el shim de PlayerGameStats.get_TeamId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.TeamIdSetDouble">
            <summary>Establecer el shim de PlayerGameStats.set_TeamId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.TeamRatingGet">
            <summary>Establecer el shim de PlayerGameStats.get_TeamRating()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.TeamRatingSetInt32">
            <summary>Establecer el shim de PlayerGameStats.set_TeamRating(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.TimeInQueueGet">
            <summary>Establecer el shim de PlayerGameStats.get_TimeInQueue()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.TimeInQueueSetInt32">
            <summary>Establecer el shim de PlayerGameStats.set_TimeInQueue(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.TypeNameGet">
            <summary>Establecer el shim de PlayerGameStats.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.UserIdGet">
            <summary>Establecer el shim de PlayerGameStats.get_UserId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.UserIdSetDouble">
            <summary>Establecer el shim de PlayerGameStats.set_UserId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.UserServerPingGet">
            <summary>Establecer el shim de PlayerGameStats.get_UserServerPing()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.UserServerPingSetInt32">
            <summary>Establecer el shim de PlayerGameStats.set_UserServerPing(Int32 value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.AdjustedRatingGet">
            <summary>Establecer el shim de PlayerGameStats.get_AdjustedRating()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.AdjustedRatingSetInt32">
            <summary>Establecer el shim de PlayerGameStats.set_AdjustedRating(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.AfkGet">
            <summary>Establecer el shim de PlayerGameStats.get_Afk()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.AfkSetBoolean">
            <summary>Establecer el shim de PlayerGameStats.set_Afk(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.BoostIpEarnedGet">
            <summary>Establecer el shim de PlayerGameStats.get_BoostIpEarned()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.BoostIpEarnedSetDouble">
            <summary>Establecer el shim de PlayerGameStats.set_BoostIpEarned(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.BoostXpEarnedGet">
            <summary>Establecer el shim de PlayerGameStats.get_BoostXpEarned()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.BoostXpEarnedSetDouble">
            <summary>Establecer el shim de PlayerGameStats.set_BoostXpEarned(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.ChampionIdGet">
            <summary>Establecer el shim de PlayerGameStats.get_ChampionId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.ChampionIdSetDouble">
            <summary>Establecer el shim de PlayerGameStats.set_ChampionId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.CreateDateGet">
            <summary>Establecer el shim de PlayerGameStats.get_CreateDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.CreateDateSetDateTime">
            <summary>Establecer el shim de PlayerGameStats.set_CreateDate(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.DifficultyGet">
            <summary>Establecer el shim de PlayerGameStats.get_Difficulty()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.DifficultySetObject">
            <summary>Establecer el shim de PlayerGameStats.set_Difficulty(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.DifficultyStringGet">
            <summary>Establecer el shim de PlayerGameStats.get_DifficultyString()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.DifficultyStringSetObject">
            <summary>Establecer el shim de PlayerGameStats.set_DifficultyString(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de PlayerGameStats.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.EligibleFirstWinOfDayGet">
            <summary>Establecer el shim de PlayerGameStats.get_EligibleFirstWinOfDay()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.EligibleFirstWinOfDaySetBoolean">
            <summary>Establecer el shim de PlayerGameStats.set_EligibleFirstWinOfDay(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.EloChangeGet">
            <summary>Establecer el shim de PlayerGameStats.get_EloChange()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.EloChangeSetInt32">
            <summary>Establecer el shim de PlayerGameStats.set_EloChange(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.ExperienceEarnedGet">
            <summary>Establecer el shim de PlayerGameStats.get_ExperienceEarned()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.ExperienceEarnedSetDouble">
            <summary>Establecer el shim de PlayerGameStats.set_ExperienceEarned(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.FellowPlayersGet">
            <summary>Establecer el shim de PlayerGameStats.get_FellowPlayers()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.FellowPlayersSetListOfFellowPlayerInfo">
            <summary>Establecer el shim de PlayerGameStats.set_FellowPlayers(List`1&lt;FellowPlayerInfo&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.GameIdGet">
            <summary>Establecer el shim de PlayerGameStats.get_GameId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.GameIdSetDouble">
            <summary>Establecer el shim de PlayerGameStats.set_GameId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.GameMapIdGet">
            <summary>Establecer el shim de PlayerGameStats.get_GameMapId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.GameMapIdSetInt32">
            <summary>Establecer el shim de PlayerGameStats.set_GameMapId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.GameModeGet">
            <summary>Establecer el shim de PlayerGameStats.get_GameMode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.GameModeSetString">
            <summary>Establecer el shim de PlayerGameStats.set_GameMode(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.GameTypeEnumGet">
            <summary>Establecer el shim de PlayerGameStats.get_GameTypeEnum()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.GameTypeEnumSetString">
            <summary>Establecer el shim de PlayerGameStats.set_GameTypeEnum(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.GameTypeGet">
            <summary>Establecer el shim de PlayerGameStats.get_GameType()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.GameTypeSetString">
            <summary>Establecer el shim de PlayerGameStats.set_GameType(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.IdGet">
            <summary>Establecer el shim de PlayerGameStats.get_Id()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.IdSetObject">
            <summary>Establecer el shim de PlayerGameStats.set_Id(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.InvalidGet">
            <summary>Establecer el shim de PlayerGameStats.get_Invalid()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.InvalidSetBoolean">
            <summary>Establecer el shim de PlayerGameStats.set_Invalid(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.IpEarnedGet">
            <summary>Establecer el shim de PlayerGameStats.get_IpEarned()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.IpEarnedSetDouble">
            <summary>Establecer el shim de PlayerGameStats.set_IpEarned(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.KCoefficientGet">
            <summary>Establecer el shim de PlayerGameStats.get_KCoefficient()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.KCoefficientSetDouble">
            <summary>Establecer el shim de PlayerGameStats.set_KCoefficient(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.LeaverGet">
            <summary>Establecer el shim de PlayerGameStats.get_Leaver()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.LeaverSetBoolean">
            <summary>Establecer el shim de PlayerGameStats.set_Leaver(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.LevelGet">
            <summary>Establecer el shim de PlayerGameStats.get_Level()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.LevelSetDouble">
            <summary>Establecer el shim de PlayerGameStats.set_Level(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.PredictedWinPctGet">
            <summary>Establecer el shim de PlayerGameStats.get_PredictedWinPct()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.PredictedWinPctSetDouble">
            <summary>Establecer el shim de PlayerGameStats.set_PredictedWinPct(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.PremadeSizeGet">
            <summary>Establecer el shim de PlayerGameStats.get_PremadeSize()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.PremadeSizeSetInt32">
            <summary>Establecer el shim de PlayerGameStats.set_PremadeSize(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.PremadeTeamGet">
            <summary>Establecer el shim de PlayerGameStats.get_PremadeTeam()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.PremadeTeamSetBoolean">
            <summary>Establecer el shim de PlayerGameStats.set_PremadeTeam(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.QueueTypeGet">
            <summary>Establecer el shim de PlayerGameStats.get_QueueType()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.QueueTypeSetString">
            <summary>Establecer el shim de PlayerGameStats.set_QueueType(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.RankedGet">
            <summary>Establecer el shim de PlayerGameStats.get_Ranked()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.RankedSetBoolean">
            <summary>Establecer el shim de PlayerGameStats.set_Ranked(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.RatingGet">
            <summary>Establecer el shim de PlayerGameStats.get_Rating()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.RatingSetDouble">
            <summary>Establecer el shim de PlayerGameStats.set_Rating(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.RawStatsJsonGet">
            <summary>Establecer el shim de PlayerGameStats.get_RawStatsJson()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.RawStatsJsonSetObject">
            <summary>Establecer el shim de PlayerGameStats.set_RawStatsJson(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.SkinIndexGet">
            <summary>Establecer el shim de PlayerGameStats.get_SkinIndex()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.SkinIndexSetInt32">
            <summary>Establecer el shim de PlayerGameStats.set_SkinIndex(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.SkinNameGet">
            <summary>Establecer el shim de PlayerGameStats.get_SkinName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.SkinNameSetObject">
            <summary>Establecer el shim de PlayerGameStats.set_SkinName(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.Spell1Get">
            <summary>Establecer el shim de PlayerGameStats.get_Spell1()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.Spell1SetDouble">
            <summary>Establecer el shim de PlayerGameStats.set_Spell1(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.Spell2Get">
            <summary>Establecer el shim de PlayerGameStats.get_Spell2()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.Spell2SetDouble">
            <summary>Establecer el shim de PlayerGameStats.set_Spell2(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.StatisticsGet">
            <summary>Establecer el shim de PlayerGameStats.get_Statistics()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.StatisticsSetListOfRawStat">
            <summary>Establecer el shim de PlayerGameStats.set_Statistics(List`1&lt;RawStat&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.SubTypeGet">
            <summary>Establecer el shim de PlayerGameStats.get_SubType()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.SubTypeSetString">
            <summary>Establecer el shim de PlayerGameStats.set_SubType(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.SummonerIdGet">
            <summary>Establecer el shim de PlayerGameStats.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.SummonerIdSetDouble">
            <summary>Establecer el shim de PlayerGameStats.set_SummonerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.TeamIdGet">
            <summary>Establecer el shim de PlayerGameStats.get_TeamId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.TeamIdSetDouble">
            <summary>Establecer el shim de PlayerGameStats.set_TeamId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.TeamRatingGet">
            <summary>Establecer el shim de PlayerGameStats.get_TeamRating()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.TeamRatingSetInt32">
            <summary>Establecer el shim de PlayerGameStats.set_TeamRating(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.TimeInQueueGet">
            <summary>Establecer el shim de PlayerGameStats.get_TimeInQueue()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.TimeInQueueSetInt32">
            <summary>Establecer el shim de PlayerGameStats.set_TimeInQueue(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.TypeNameGet">
            <summary>Establecer el shim de PlayerGameStats.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.UserIdGet">
            <summary>Establecer el shim de PlayerGameStats.get_UserId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.UserIdSetDouble">
            <summary>Establecer el shim de PlayerGameStats.set_UserId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.UserServerPingGet">
            <summary>Establecer el shim de PlayerGameStats.get_UserServerPing()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerGameStats.AllInstances.UserServerPingSetInt32">
            <summary>Establecer el shim de PlayerGameStats.set_UserServerPing(Int32 value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Statistics.PlayerLifetimeStats</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.PlayerLifetimeStats)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.Constructor">
            <summary>Establecer el shim de PlayerLifetimeStats.PlayerLifetimeStats()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.ConstructorPlayerLifetimeStatsCallback">
            <summary>Establecer el shim de PlayerLifetimeStats.PlayerLifetimeStats(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.ConstructorTypedObject">
            <summary>Establecer el shim de PlayerLifetimeStats.PlayerLifetimeStats(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.DoCallbackTypedObject">
            <summary>Establecer el shim de PlayerLifetimeStats.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.DodgePenaltyDateGet">
            <summary>Establecer el shim de PlayerLifetimeStats.get_DodgePenaltyDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.DodgePenaltyDateSetObject">
            <summary>Establecer el shim de PlayerLifetimeStats.set_DodgePenaltyDate(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.DodgeStreakGet">
            <summary>Establecer el shim de PlayerLifetimeStats.get_DodgeStreak()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.DodgeStreakSetInt32">
            <summary>Establecer el shim de PlayerLifetimeStats.set_DodgeStreak(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.LeaverPenaltyStatsGet">
            <summary>Establecer el shim de PlayerLifetimeStats.get_LeaverPenaltyStats()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.LeaverPenaltyStatsSetLeaverPenaltyStats">
            <summary>Establecer el shim de PlayerLifetimeStats.set_LeaverPenaltyStats(LeaverPenaltyStats value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.PlayerStatSummariesGet">
            <summary>Establecer el shim de PlayerLifetimeStats.get_PlayerStatSummaries()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.PlayerStatSummariesSetPlayerStatSummaries">
            <summary>Establecer el shim de PlayerLifetimeStats.set_PlayerStatSummaries(PlayerStatSummaries value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.PlayerStatsGet">
            <summary>Establecer el shim de PlayerLifetimeStats.get_PlayerStats()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.PlayerStatsJsonGet">
            <summary>Establecer el shim de PlayerLifetimeStats.get_PlayerStatsJson()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.PlayerStatsJsonSetObject">
            <summary>Establecer el shim de PlayerLifetimeStats.set_PlayerStatsJson(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.PlayerStatsSetPlayerStats">
            <summary>Establecer el shim de PlayerLifetimeStats.set_PlayerStats(PlayerStats value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.PreviousFirstWinOfDayGet">
            <summary>Establecer el shim de PlayerLifetimeStats.get_PreviousFirstWinOfDay()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.PreviousFirstWinOfDaySetDateTime">
            <summary>Establecer el shim de PlayerLifetimeStats.set_PreviousFirstWinOfDay(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.TypeNameGet">
            <summary>Establecer el shim de PlayerLifetimeStats.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.UserIdGet">
            <summary>Establecer el shim de PlayerLifetimeStats.get_UserId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.UserIdSetDouble">
            <summary>Establecer el shim de PlayerLifetimeStats.set_UserId(Double value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de PlayerLifetimeStats.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.AllInstances.DodgePenaltyDateGet">
            <summary>Establecer el shim de PlayerLifetimeStats.get_DodgePenaltyDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.AllInstances.DodgePenaltyDateSetObject">
            <summary>Establecer el shim de PlayerLifetimeStats.set_DodgePenaltyDate(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.AllInstances.DodgeStreakGet">
            <summary>Establecer el shim de PlayerLifetimeStats.get_DodgeStreak()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.AllInstances.DodgeStreakSetInt32">
            <summary>Establecer el shim de PlayerLifetimeStats.set_DodgeStreak(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.AllInstances.LeaverPenaltyStatsGet">
            <summary>Establecer el shim de PlayerLifetimeStats.get_LeaverPenaltyStats()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.AllInstances.LeaverPenaltyStatsSetLeaverPenaltyStats">
            <summary>Establecer el shim de PlayerLifetimeStats.set_LeaverPenaltyStats(LeaverPenaltyStats value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.AllInstances.PlayerStatSummariesGet">
            <summary>Establecer el shim de PlayerLifetimeStats.get_PlayerStatSummaries()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.AllInstances.PlayerStatSummariesSetPlayerStatSummaries">
            <summary>Establecer el shim de PlayerLifetimeStats.set_PlayerStatSummaries(PlayerStatSummaries value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.AllInstances.PlayerStatsGet">
            <summary>Establecer el shim de PlayerLifetimeStats.get_PlayerStats()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.AllInstances.PlayerStatsJsonGet">
            <summary>Establecer el shim de PlayerLifetimeStats.get_PlayerStatsJson()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.AllInstances.PlayerStatsJsonSetObject">
            <summary>Establecer el shim de PlayerLifetimeStats.set_PlayerStatsJson(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.AllInstances.PlayerStatsSetPlayerStats">
            <summary>Establecer el shim de PlayerLifetimeStats.set_PlayerStats(PlayerStats value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.AllInstances.PreviousFirstWinOfDayGet">
            <summary>Establecer el shim de PlayerLifetimeStats.get_PreviousFirstWinOfDay()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.AllInstances.PreviousFirstWinOfDaySetDateTime">
            <summary>Establecer el shim de PlayerLifetimeStats.set_PreviousFirstWinOfDay(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.AllInstances.TypeNameGet">
            <summary>Establecer el shim de PlayerLifetimeStats.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.AllInstances.UserIdGet">
            <summary>Establecer el shim de PlayerLifetimeStats.get_UserId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerLifetimeStats.AllInstances.UserIdSetDouble">
            <summary>Establecer el shim de PlayerLifetimeStats.set_UserId(Double value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Statistics.PlayerParticipantStatsSummary</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.PlayerParticipantStatsSummary)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.BotPlayerGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_BotPlayer()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.BotPlayerSetBoolean">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_BotPlayer(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.Constructor">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.PlayerParticipantStatsSummary()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.ConstructorPlayerParticipantStatsSummaryCallback">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.PlayerParticipantStatsSummary(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.ConstructorTypedObject">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.PlayerParticipantStatsSummary(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.DoCallbackTypedObject">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.EloChangeGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_EloChange()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.EloChangeSetInt32">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_EloChange(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.EloGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_Elo()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.EloSetInt32">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_Elo(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.GameIdGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_GameId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.GameIdSetDouble">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_GameId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.InChatGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_InChat()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.InChatSetBoolean">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_InChat(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.IsMeGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_IsMe()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.IsMeSetBoolean">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_IsMe(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.KudosEnabledGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_KudosEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.KudosEnabledSetBoolean">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_KudosEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.LeaverGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_Leaver()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.LeaverSetBoolean">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_Leaver(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.LeavesGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_Leaves()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.LeavesSetDouble">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_Leaves(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.LevelGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_Level()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.LevelSetDouble">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_Level(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.LossesGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_Losses()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.LossesSetDouble">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_Losses(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.ProfileIconIdGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_ProfileIconId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.ProfileIconIdSetInt32">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_ProfileIconId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.ReportEnabledGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_ReportEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.ReportEnabledSetBoolean">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_ReportEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.SkinNameGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_SkinName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.SkinNameSetString">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_SkinName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.Spell1IdGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_Spell1Id()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.Spell1IdSetDouble">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_Spell1Id(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.Spell2IdGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_Spell2Id()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.Spell2IdSetDouble">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_Spell2Id(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.StatisticsGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_Statistics()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.StatisticsSetListOfRawStatDTO">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_Statistics(List`1&lt;RawStatDTO&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.SummonerNameGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_SummonerName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.SummonerNameSetString">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_SummonerName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.TeamIdGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_TeamId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.TeamIdSetDouble">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_TeamId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.TeamInfoGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_TeamInfo()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.TeamInfoSetTeamInfo">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_TeamInfo(TeamInfo value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.TypeNameGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.UserIdGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_UserId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.UserIdSetDouble">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_UserId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.WinsGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_Wins()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.WinsSetDouble">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_Wins(Double value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.BotPlayerGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_BotPlayer()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.BotPlayerSetBoolean">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_BotPlayer(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.EloChangeGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_EloChange()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.EloChangeSetInt32">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_EloChange(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.EloGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_Elo()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.EloSetInt32">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_Elo(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.GameIdGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_GameId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.GameIdSetDouble">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_GameId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.InChatGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_InChat()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.InChatSetBoolean">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_InChat(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.IsMeGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_IsMe()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.IsMeSetBoolean">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_IsMe(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.KudosEnabledGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_KudosEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.KudosEnabledSetBoolean">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_KudosEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.LeaverGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_Leaver()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.LeaverSetBoolean">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_Leaver(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.LeavesGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_Leaves()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.LeavesSetDouble">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_Leaves(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.LevelGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_Level()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.LevelSetDouble">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_Level(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.LossesGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_Losses()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.LossesSetDouble">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_Losses(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.ProfileIconIdGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_ProfileIconId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.ProfileIconIdSetInt32">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_ProfileIconId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.ReportEnabledGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_ReportEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.ReportEnabledSetBoolean">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_ReportEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.SkinNameGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_SkinName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.SkinNameSetString">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_SkinName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.Spell1IdGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_Spell1Id()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.Spell1IdSetDouble">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_Spell1Id(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.Spell2IdGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_Spell2Id()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.Spell2IdSetDouble">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_Spell2Id(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.StatisticsGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_Statistics()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.StatisticsSetListOfRawStatDTO">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_Statistics(List`1&lt;RawStatDTO&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.SummonerNameGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_SummonerName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.SummonerNameSetString">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_SummonerName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.TeamIdGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_TeamId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.TeamIdSetDouble">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_TeamId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.TeamInfoGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_TeamInfo()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.TeamInfoSetTeamInfo">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_TeamInfo(TeamInfo value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.TypeNameGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.UserIdGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_UserId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.UserIdSetDouble">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_UserId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.WinsGet">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.get_Wins()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerParticipantStatsSummary.AllInstances.WinsSetDouble">
            <summary>Establecer el shim de PlayerParticipantStatsSummary.set_Wins(Double value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummaries">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Statistics.PlayerStatSummaries</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummaries.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummaries.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.PlayerStatSummaries)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummaries.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummaries.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummaries.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummaries.Constructor">
            <summary>Establecer el shim de PlayerStatSummaries.PlayerStatSummaries()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummaries.ConstructorPlayerStatSummariesCallback">
            <summary>Establecer el shim de PlayerStatSummaries.PlayerStatSummaries(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummaries.ConstructorTypedObject">
            <summary>Establecer el shim de PlayerStatSummaries.PlayerStatSummaries(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummaries.DoCallbackTypedObject">
            <summary>Establecer el shim de PlayerStatSummaries.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummaries.PlayerStatSummarySetGet">
            <summary>Establecer el shim de PlayerStatSummaries.get_PlayerStatSummarySet()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummaries.PlayerStatSummarySetSetListOfPlayerStatSummary">
            <summary>Establecer el shim de PlayerStatSummaries.set_PlayerStatSummarySet(List`1&lt;PlayerStatSummary&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummaries.TypeNameGet">
            <summary>Establecer el shim de PlayerStatSummaries.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummaries.UserIdGet">
            <summary>Establecer el shim de PlayerStatSummaries.get_UserId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummaries.UserIdSetDouble">
            <summary>Establecer el shim de PlayerStatSummaries.set_UserId(Double value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummaries.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummaries.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de PlayerStatSummaries.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummaries.AllInstances.PlayerStatSummarySetGet">
            <summary>Establecer el shim de PlayerStatSummaries.get_PlayerStatSummarySet()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummaries.AllInstances.PlayerStatSummarySetSetListOfPlayerStatSummary">
            <summary>Establecer el shim de PlayerStatSummaries.set_PlayerStatSummarySet(List`1&lt;PlayerStatSummary&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummaries.AllInstances.TypeNameGet">
            <summary>Establecer el shim de PlayerStatSummaries.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummaries.AllInstances.UserIdGet">
            <summary>Establecer el shim de PlayerStatSummaries.get_UserId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummaries.AllInstances.UserIdSetDouble">
            <summary>Establecer el shim de PlayerStatSummaries.set_UserId(Double value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Statistics.PlayerStatSummary</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.PlayerStatSummary)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.AggregatedStatsGet">
            <summary>Establecer el shim de PlayerStatSummary.get_AggregatedStats()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.AggregatedStatsJsonGet">
            <summary>Establecer el shim de PlayerStatSummary.get_AggregatedStatsJson()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.AggregatedStatsJsonSetObject">
            <summary>Establecer el shim de PlayerStatSummary.set_AggregatedStatsJson(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.AggregatedStatsSetSummaryAggStats">
            <summary>Establecer el shim de PlayerStatSummary.set_AggregatedStats(SummaryAggStats value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.Constructor">
            <summary>Establecer el shim de PlayerStatSummary.PlayerStatSummary()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.ConstructorPlayerStatSummaryCallback">
            <summary>Establecer el shim de PlayerStatSummary.PlayerStatSummary(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.ConstructorTypedObject">
            <summary>Establecer el shim de PlayerStatSummary.PlayerStatSummary(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.DoCallbackTypedObject">
            <summary>Establecer el shim de PlayerStatSummary.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.LeavesGet">
            <summary>Establecer el shim de PlayerStatSummary.get_Leaves()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.LeavesSetInt32">
            <summary>Establecer el shim de PlayerStatSummary.set_Leaves(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.LossesGet">
            <summary>Establecer el shim de PlayerStatSummary.get_Losses()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.LossesSetInt32">
            <summary>Establecer el shim de PlayerStatSummary.set_Losses(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.MaxRatingGet">
            <summary>Establecer el shim de PlayerStatSummary.get_MaxRating()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.MaxRatingSetInt32">
            <summary>Establecer el shim de PlayerStatSummary.set_MaxRating(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.ModifyDateGet">
            <summary>Establecer el shim de PlayerStatSummary.get_ModifyDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.ModifyDateSetDateTime">
            <summary>Establecer el shim de PlayerStatSummary.set_ModifyDate(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.PlayerStatSummaryTypeGet">
            <summary>Establecer el shim de PlayerStatSummary.get_PlayerStatSummaryType()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.PlayerStatSummaryTypeSetString">
            <summary>Establecer el shim de PlayerStatSummary.set_PlayerStatSummaryType(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.PlayerStatSummaryTypeStringGet">
            <summary>Establecer el shim de PlayerStatSummary.get_PlayerStatSummaryTypeString()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.PlayerStatSummaryTypeStringSetString">
            <summary>Establecer el shim de PlayerStatSummary.set_PlayerStatSummaryTypeString(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.RatingGet">
            <summary>Establecer el shim de PlayerStatSummary.get_Rating()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.RatingSetInt32">
            <summary>Establecer el shim de PlayerStatSummary.set_Rating(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.TypeNameGet">
            <summary>Establecer el shim de PlayerStatSummary.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.UserIdGet">
            <summary>Establecer el shim de PlayerStatSummary.get_UserId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.UserIdSetDouble">
            <summary>Establecer el shim de PlayerStatSummary.set_UserId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.WinsGet">
            <summary>Establecer el shim de PlayerStatSummary.get_Wins()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.WinsSetInt32">
            <summary>Establecer el shim de PlayerStatSummary.set_Wins(Int32 value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.AllInstances.AggregatedStatsGet">
            <summary>Establecer el shim de PlayerStatSummary.get_AggregatedStats()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.AllInstances.AggregatedStatsJsonGet">
            <summary>Establecer el shim de PlayerStatSummary.get_AggregatedStatsJson()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.AllInstances.AggregatedStatsJsonSetObject">
            <summary>Establecer el shim de PlayerStatSummary.set_AggregatedStatsJson(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.AllInstances.AggregatedStatsSetSummaryAggStats">
            <summary>Establecer el shim de PlayerStatSummary.set_AggregatedStats(SummaryAggStats value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de PlayerStatSummary.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.AllInstances.LeavesGet">
            <summary>Establecer el shim de PlayerStatSummary.get_Leaves()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.AllInstances.LeavesSetInt32">
            <summary>Establecer el shim de PlayerStatSummary.set_Leaves(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.AllInstances.LossesGet">
            <summary>Establecer el shim de PlayerStatSummary.get_Losses()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.AllInstances.LossesSetInt32">
            <summary>Establecer el shim de PlayerStatSummary.set_Losses(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.AllInstances.MaxRatingGet">
            <summary>Establecer el shim de PlayerStatSummary.get_MaxRating()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.AllInstances.MaxRatingSetInt32">
            <summary>Establecer el shim de PlayerStatSummary.set_MaxRating(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.AllInstances.ModifyDateGet">
            <summary>Establecer el shim de PlayerStatSummary.get_ModifyDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.AllInstances.ModifyDateSetDateTime">
            <summary>Establecer el shim de PlayerStatSummary.set_ModifyDate(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.AllInstances.PlayerStatSummaryTypeGet">
            <summary>Establecer el shim de PlayerStatSummary.get_PlayerStatSummaryType()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.AllInstances.PlayerStatSummaryTypeSetString">
            <summary>Establecer el shim de PlayerStatSummary.set_PlayerStatSummaryType(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.AllInstances.PlayerStatSummaryTypeStringGet">
            <summary>Establecer el shim de PlayerStatSummary.get_PlayerStatSummaryTypeString()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.AllInstances.PlayerStatSummaryTypeStringSetString">
            <summary>Establecer el shim de PlayerStatSummary.set_PlayerStatSummaryTypeString(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.AllInstances.RatingGet">
            <summary>Establecer el shim de PlayerStatSummary.get_Rating()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.AllInstances.RatingSetInt32">
            <summary>Establecer el shim de PlayerStatSummary.set_Rating(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.AllInstances.TypeNameGet">
            <summary>Establecer el shim de PlayerStatSummary.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.AllInstances.UserIdGet">
            <summary>Establecer el shim de PlayerStatSummary.get_UserId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.AllInstances.UserIdSetDouble">
            <summary>Establecer el shim de PlayerStatSummary.set_UserId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.AllInstances.WinsGet">
            <summary>Establecer el shim de PlayerStatSummary.get_Wins()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStatSummary.AllInstances.WinsSetInt32">
            <summary>Establecer el shim de PlayerStatSummary.set_Wins(Int32 value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStats">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Statistics.PlayerStats</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStats.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStats.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.PlayerStats)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStats.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStats.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStats.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStats.Constructor">
            <summary>Establecer el shim de PlayerStats.PlayerStats()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStats.ConstructorPlayerStatsCallback">
            <summary>Establecer el shim de PlayerStats.PlayerStats(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStats.ConstructorTypedObject">
            <summary>Establecer el shim de PlayerStats.PlayerStats(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStats.DoCallbackTypedObject">
            <summary>Establecer el shim de PlayerStats.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStats.PromoGamesPlayedGet">
            <summary>Establecer el shim de PlayerStats.get_PromoGamesPlayed()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStats.PromoGamesPlayedLastUpdatedGet">
            <summary>Establecer el shim de PlayerStats.get_PromoGamesPlayedLastUpdated()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStats.PromoGamesPlayedLastUpdatedSetObject">
            <summary>Establecer el shim de PlayerStats.set_PromoGamesPlayedLastUpdated(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStats.PromoGamesPlayedSetInt32">
            <summary>Establecer el shim de PlayerStats.set_PromoGamesPlayed(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStats.TimeTrackedStatsGet">
            <summary>Establecer el shim de PlayerStats.get_TimeTrackedStats()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStats.TimeTrackedStatsSetListOfTimeTrackedStat">
            <summary>Establecer el shim de PlayerStats.set_TimeTrackedStats(List`1&lt;TimeTrackedStat&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStats.TypeNameGet">
            <summary>Establecer el shim de PlayerStats.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStats.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStats.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de PlayerStats.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStats.AllInstances.PromoGamesPlayedGet">
            <summary>Establecer el shim de PlayerStats.get_PromoGamesPlayed()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStats.AllInstances.PromoGamesPlayedLastUpdatedGet">
            <summary>Establecer el shim de PlayerStats.get_PromoGamesPlayedLastUpdated()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStats.AllInstances.PromoGamesPlayedLastUpdatedSetObject">
            <summary>Establecer el shim de PlayerStats.set_PromoGamesPlayedLastUpdated(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStats.AllInstances.PromoGamesPlayedSetInt32">
            <summary>Establecer el shim de PlayerStats.set_PromoGamesPlayed(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStats.AllInstances.TimeTrackedStatsGet">
            <summary>Establecer el shim de PlayerStats.get_TimeTrackedStats()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStats.AllInstances.TimeTrackedStatsSetListOfTimeTrackedStat">
            <summary>Establecer el shim de PlayerStats.set_TimeTrackedStats(List`1&lt;TimeTrackedStat&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimPlayerStats.AllInstances.TypeNameGet">
            <summary>Establecer el shim de PlayerStats.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStat">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Statistics.RawStat</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStat.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStat.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.RawStat)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStat.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStat.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStat.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStat.Constructor">
            <summary>Establecer el shim de RawStat.RawStat()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStat.ConstructorRawStatCallback">
            <summary>Establecer el shim de RawStat.RawStat(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStat.ConstructorTypedObject">
            <summary>Establecer el shim de RawStat.RawStat(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStat.DoCallbackTypedObject">
            <summary>Establecer el shim de RawStat.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStat.StatTypeGet">
            <summary>Establecer el shim de RawStat.get_StatType()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStat.StatTypeSetString">
            <summary>Establecer el shim de RawStat.set_StatType(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStat.TypeNameGet">
            <summary>Establecer el shim de RawStat.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStat.ValueGet">
            <summary>Establecer el shim de RawStat.get_Value()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStat.ValueSetDouble">
            <summary>Establecer el shim de RawStat.set_Value(Double value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStat.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStat.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de RawStat.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStat.AllInstances.StatTypeGet">
            <summary>Establecer el shim de RawStat.get_StatType()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStat.AllInstances.StatTypeSetString">
            <summary>Establecer el shim de RawStat.set_StatType(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStat.AllInstances.TypeNameGet">
            <summary>Establecer el shim de RawStat.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStat.AllInstances.ValueGet">
            <summary>Establecer el shim de RawStat.get_Value()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStat.AllInstances.ValueSetDouble">
            <summary>Establecer el shim de RawStat.set_Value(Double value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStatDTO">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Statistics.RawStatDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStatDTO.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStatDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.RawStatDTO)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStatDTO.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStatDTO.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStatDTO.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStatDTO.Constructor">
            <summary>Establecer el shim de RawStatDTO.RawStatDTO()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStatDTO.ConstructorRawStatDTOCallback">
            <summary>Establecer el shim de RawStatDTO.RawStatDTO(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStatDTO.ConstructorTypedObject">
            <summary>Establecer el shim de RawStatDTO.RawStatDTO(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStatDTO.DoCallbackTypedObject">
            <summary>Establecer el shim de RawStatDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStatDTO.StatTypeNameGet">
            <summary>Establecer el shim de RawStatDTO.get_StatTypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStatDTO.StatTypeNameSetString">
            <summary>Establecer el shim de RawStatDTO.set_StatTypeName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStatDTO.TypeNameGet">
            <summary>Establecer el shim de RawStatDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStatDTO.ValueGet">
            <summary>Establecer el shim de RawStatDTO.get_Value()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStatDTO.ValueSetDouble">
            <summary>Establecer el shim de RawStatDTO.set_Value(Double value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStatDTO.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStatDTO.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de RawStatDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStatDTO.AllInstances.StatTypeNameGet">
            <summary>Establecer el shim de RawStatDTO.get_StatTypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStatDTO.AllInstances.StatTypeNameSetString">
            <summary>Establecer el shim de RawStatDTO.set_StatTypeName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStatDTO.AllInstances.TypeNameGet">
            <summary>Establecer el shim de RawStatDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStatDTO.AllInstances.ValueGet">
            <summary>Establecer el shim de RawStatDTO.get_Value()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRawStatDTO.AllInstances.ValueSetDouble">
            <summary>Establecer el shim de RawStatDTO.set_Value(Double value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRecentGames">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Statistics.RecentGames</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRecentGames.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRecentGames.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.RecentGames)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRecentGames.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRecentGames.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRecentGames.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRecentGames.Constructor">
            <summary>Establecer el shim de RecentGames.RecentGames()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRecentGames.ConstructorRecentGamesCallback">
            <summary>Establecer el shim de RecentGames.RecentGames(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRecentGames.ConstructorTypedObject">
            <summary>Establecer el shim de RecentGames.RecentGames(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRecentGames.DoCallbackTypedObject">
            <summary>Establecer el shim de RecentGames.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRecentGames.GameStatisticsGet">
            <summary>Establecer el shim de RecentGames.get_GameStatistics()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRecentGames.GameStatisticsSetListOfPlayerGameStats">
            <summary>Establecer el shim de RecentGames.set_GameStatistics(List`1&lt;PlayerGameStats&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRecentGames.PlayerGameStatsMapGet">
            <summary>Establecer el shim de RecentGames.get_PlayerGameStatsMap()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRecentGames.PlayerGameStatsMapSetTypedObject">
            <summary>Establecer el shim de RecentGames.set_PlayerGameStatsMap(TypedObject value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRecentGames.RecentGamesJsonGet">
            <summary>Establecer el shim de RecentGames.get_RecentGamesJson()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRecentGames.RecentGamesJsonSetObject">
            <summary>Establecer el shim de RecentGames.set_RecentGamesJson(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRecentGames.TypeNameGet">
            <summary>Establecer el shim de RecentGames.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRecentGames.UserIdGet">
            <summary>Establecer el shim de RecentGames.get_UserId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRecentGames.UserIdSetDouble">
            <summary>Establecer el shim de RecentGames.set_UserId(Double value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRecentGames.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRecentGames.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de RecentGames.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRecentGames.AllInstances.GameStatisticsGet">
            <summary>Establecer el shim de RecentGames.get_GameStatistics()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRecentGames.AllInstances.GameStatisticsSetListOfPlayerGameStats">
            <summary>Establecer el shim de RecentGames.set_GameStatistics(List`1&lt;PlayerGameStats&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRecentGames.AllInstances.PlayerGameStatsMapGet">
            <summary>Establecer el shim de RecentGames.get_PlayerGameStatsMap()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRecentGames.AllInstances.PlayerGameStatsMapSetTypedObject">
            <summary>Establecer el shim de RecentGames.set_PlayerGameStatsMap(TypedObject value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRecentGames.AllInstances.RecentGamesJsonGet">
            <summary>Establecer el shim de RecentGames.get_RecentGamesJson()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRecentGames.AllInstances.RecentGamesJsonSetObject">
            <summary>Establecer el shim de RecentGames.set_RecentGamesJson(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRecentGames.AllInstances.TypeNameGet">
            <summary>Establecer el shim de RecentGames.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRecentGames.AllInstances.UserIdGet">
            <summary>Establecer el shim de RecentGames.get_UserId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimRecentGames.AllInstances.UserIdSetDouble">
            <summary>Establecer el shim de RecentGames.set_UserId(Double value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStat">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Statistics.SummaryAggStat</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStat.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStat.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.SummaryAggStat)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStat.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStat.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStat.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStat.ConstructorSummaryAggStatCallback">
            <summary>Establecer el shim de SummaryAggStat.SummaryAggStat(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStat.ConstructorTypedObject">
            <summary>Establecer el shim de SummaryAggStat.SummaryAggStat(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStat.CountGet">
            <summary>Establecer el shim de SummaryAggStat.get_Count()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStat.CountSetDouble">
            <summary>Establecer el shim de SummaryAggStat.set_Count(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStat.DoCallbackTypedObject">
            <summary>Establecer el shim de SummaryAggStat.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStat.StatTypeGet">
            <summary>Establecer el shim de SummaryAggStat.get_StatType()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStat.StatTypeSetString">
            <summary>Establecer el shim de SummaryAggStat.set_StatType(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStat.TypeNameGet">
            <summary>Establecer el shim de SummaryAggStat.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStat.ValueGet">
            <summary>Establecer el shim de SummaryAggStat.get_Value()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStat.ValueSetDouble">
            <summary>Establecer el shim de SummaryAggStat.set_Value(Double value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStat.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStat.AllInstances.CountGet">
            <summary>Establecer el shim de SummaryAggStat.get_Count()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStat.AllInstances.CountSetDouble">
            <summary>Establecer el shim de SummaryAggStat.set_Count(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStat.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de SummaryAggStat.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStat.AllInstances.StatTypeGet">
            <summary>Establecer el shim de SummaryAggStat.get_StatType()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStat.AllInstances.StatTypeSetString">
            <summary>Establecer el shim de SummaryAggStat.set_StatType(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStat.AllInstances.TypeNameGet">
            <summary>Establecer el shim de SummaryAggStat.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStat.AllInstances.ValueGet">
            <summary>Establecer el shim de SummaryAggStat.get_Value()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStat.AllInstances.ValueSetDouble">
            <summary>Establecer el shim de SummaryAggStat.set_Value(Double value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStats">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Statistics.SummaryAggStats</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStats.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStats.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.SummaryAggStats)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStats.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStats.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStats.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStats.Constructor">
            <summary>Establecer el shim de SummaryAggStats.SummaryAggStats()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStats.ConstructorSummaryAggStatsCallback">
            <summary>Establecer el shim de SummaryAggStats.SummaryAggStats(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStats.ConstructorTypedObject">
            <summary>Establecer el shim de SummaryAggStats.SummaryAggStats(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStats.DoCallbackTypedObject">
            <summary>Establecer el shim de SummaryAggStats.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStats.StatsGet">
            <summary>Establecer el shim de SummaryAggStats.get_Stats()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStats.StatsJsonGet">
            <summary>Establecer el shim de SummaryAggStats.get_StatsJson()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStats.StatsJsonSetObject">
            <summary>Establecer el shim de SummaryAggStats.set_StatsJson(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStats.StatsSetListOfSummaryAggStat">
            <summary>Establecer el shim de SummaryAggStats.set_Stats(List`1&lt;SummaryAggStat&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStats.TypeNameGet">
            <summary>Establecer el shim de SummaryAggStats.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStats.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStats.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de SummaryAggStats.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStats.AllInstances.StatsGet">
            <summary>Establecer el shim de SummaryAggStats.get_Stats()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStats.AllInstances.StatsJsonGet">
            <summary>Establecer el shim de SummaryAggStats.get_StatsJson()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStats.AllInstances.StatsJsonSetObject">
            <summary>Establecer el shim de SummaryAggStats.set_StatsJson(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStats.AllInstances.StatsSetListOfSummaryAggStat">
            <summary>Establecer el shim de SummaryAggStats.set_Stats(List`1&lt;SummaryAggStat&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimSummaryAggStats.AllInstances.TypeNameGet">
            <summary>Establecer el shim de SummaryAggStats.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimTimeTrackedStat">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Statistics.TimeTrackedStat</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimTimeTrackedStat.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimTimeTrackedStat.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.TimeTrackedStat)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimTimeTrackedStat.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimTimeTrackedStat.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimTimeTrackedStat.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimTimeTrackedStat.Constructor">
            <summary>Establecer el shim de TimeTrackedStat.TimeTrackedStat()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimTimeTrackedStat.ConstructorTimeTrackedStatCallback">
            <summary>Establecer el shim de TimeTrackedStat.TimeTrackedStat(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimTimeTrackedStat.ConstructorTypedObject">
            <summary>Establecer el shim de TimeTrackedStat.TimeTrackedStat(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimTimeTrackedStat.DoCallbackTypedObject">
            <summary>Establecer el shim de TimeTrackedStat.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimTimeTrackedStat.TimestampGet">
            <summary>Establecer el shim de TimeTrackedStat.get_Timestamp()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimTimeTrackedStat.TimestampSetDateTime">
            <summary>Establecer el shim de TimeTrackedStat.set_Timestamp(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimTimeTrackedStat.TypeGet">
            <summary>Establecer el shim de TimeTrackedStat.get_Type()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimTimeTrackedStat.TypeNameGet">
            <summary>Establecer el shim de TimeTrackedStat.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimTimeTrackedStat.TypeSetString">
            <summary>Establecer el shim de TimeTrackedStat.set_Type(String value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimTimeTrackedStat.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimTimeTrackedStat.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de TimeTrackedStat.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimTimeTrackedStat.AllInstances.TimestampGet">
            <summary>Establecer el shim de TimeTrackedStat.get_Timestamp()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimTimeTrackedStat.AllInstances.TimestampSetDateTime">
            <summary>Establecer el shim de TimeTrackedStat.set_Timestamp(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimTimeTrackedStat.AllInstances.TypeGet">
            <summary>Establecer el shim de TimeTrackedStat.get_Type()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimTimeTrackedStat.AllInstances.TypeNameGet">
            <summary>Establecer el shim de TimeTrackedStat.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.ShimTimeTrackedStat.AllInstances.TypeSetString">
            <summary>Establecer el shim de TimeTrackedStat.set_Type(String value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubAggregatedStat">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Statistics.AggregatedStat</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubAggregatedStat.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubAggregatedStat.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubAggregatedStat.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.AggregatedStat.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubAggregatedStat.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de AggregatedStat.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubAggregatedStat.DoCallbackTypedObject">
            <summary>Establecer el stub de AggregatedStat.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubAggregatedStat.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubAggregatedStat</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubAggregatedStat.TypeNameGet">
            <summary>Establecer el stub de AggregatedStat.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubAggregatedStat.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubAggregatedStat.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubAggregatedStat.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubAggregatedStat.TypeName">
            <summary>Establecer el stub de AggregatedStat.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubAggregatedStats">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Statistics.AggregatedStats</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubAggregatedStats.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubAggregatedStats.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubAggregatedStats.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.AggregatedStats.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubAggregatedStats.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de AggregatedStats.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubAggregatedStats.DoCallbackTypedObject">
            <summary>Establecer el stub de AggregatedStats.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubAggregatedStats.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubAggregatedStats</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubAggregatedStats.TypeNameGet">
            <summary>Establecer el stub de AggregatedStats.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubAggregatedStats.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubAggregatedStats.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubAggregatedStats.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubAggregatedStats.TypeName">
            <summary>Establecer el stub de AggregatedStats.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubAggregatedStatsKey">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Statistics.AggregatedStatsKey</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubAggregatedStatsKey.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubAggregatedStatsKey.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubAggregatedStatsKey.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.AggregatedStatsKey.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubAggregatedStatsKey.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de AggregatedStatsKey.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubAggregatedStatsKey.DoCallbackTypedObject">
            <summary>Establecer el stub de AggregatedStatsKey.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubAggregatedStatsKey.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubAggregatedStatsKey</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubAggregatedStatsKey.TypeNameGet">
            <summary>Establecer el stub de AggregatedStatsKey.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubAggregatedStatsKey.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubAggregatedStatsKey.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubAggregatedStatsKey.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubAggregatedStatsKey.TypeName">
            <summary>Establecer el stub de AggregatedStatsKey.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubChampionStatInfo">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Statistics.ChampionStatInfo</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubChampionStatInfo.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubChampionStatInfo.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubChampionStatInfo.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.ChampionStatInfo.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubChampionStatInfo.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de ChampionStatInfo.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubChampionStatInfo.DoCallbackTypedObject">
            <summary>Establecer el stub de ChampionStatInfo.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubChampionStatInfo.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubChampionStatInfo</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubChampionStatInfo.TypeNameGet">
            <summary>Establecer el stub de ChampionStatInfo.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubChampionStatInfo.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubChampionStatInfo.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubChampionStatInfo.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubChampionStatInfo.TypeName">
            <summary>Establecer el stub de ChampionStatInfo.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubEndOfGameStats">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Statistics.EndOfGameStats</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubEndOfGameStats.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubEndOfGameStats.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubEndOfGameStats.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.EndOfGameStats.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubEndOfGameStats.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de EndOfGameStats.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubEndOfGameStats.DoCallbackTypedObject">
            <summary>Establecer el stub de EndOfGameStats.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubEndOfGameStats.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubEndOfGameStats</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubEndOfGameStats.TypeNameGet">
            <summary>Establecer el stub de EndOfGameStats.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubEndOfGameStats.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubEndOfGameStats.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubEndOfGameStats.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubEndOfGameStats.TypeName">
            <summary>Establecer el stub de EndOfGameStats.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubFellowPlayerInfo">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Statistics.FellowPlayerInfo</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubFellowPlayerInfo.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubFellowPlayerInfo.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubFellowPlayerInfo.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.FellowPlayerInfo.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubFellowPlayerInfo.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de FellowPlayerInfo.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubFellowPlayerInfo.DoCallbackTypedObject">
            <summary>Establecer el stub de FellowPlayerInfo.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubFellowPlayerInfo.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubFellowPlayerInfo</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubFellowPlayerInfo.TypeNameGet">
            <summary>Establecer el stub de FellowPlayerInfo.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubFellowPlayerInfo.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubFellowPlayerInfo.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubFellowPlayerInfo.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubFellowPlayerInfo.TypeName">
            <summary>Establecer el stub de FellowPlayerInfo.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubLeaverPenaltyStats">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Statistics.LeaverPenaltyStats</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubLeaverPenaltyStats.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubLeaverPenaltyStats.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubLeaverPenaltyStats.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.LeaverPenaltyStats.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubLeaverPenaltyStats.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de LeaverPenaltyStats.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubLeaverPenaltyStats.DoCallbackTypedObject">
            <summary>Establecer el stub de LeaverPenaltyStats.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubLeaverPenaltyStats.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubLeaverPenaltyStats</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubLeaverPenaltyStats.TypeNameGet">
            <summary>Establecer el stub de LeaverPenaltyStats.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubLeaverPenaltyStats.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubLeaverPenaltyStats.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubLeaverPenaltyStats.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubLeaverPenaltyStats.TypeName">
            <summary>Establecer el stub de LeaverPenaltyStats.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerGameStats">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Statistics.PlayerGameStats</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerGameStats.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerGameStats.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerGameStats.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.PlayerGameStats.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerGameStats.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de PlayerGameStats.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerGameStats.DoCallbackTypedObject">
            <summary>Establecer el stub de PlayerGameStats.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerGameStats.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPlayerGameStats</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerGameStats.TypeNameGet">
            <summary>Establecer el stub de PlayerGameStats.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerGameStats.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerGameStats.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerGameStats.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerGameStats.TypeName">
            <summary>Establecer el stub de PlayerGameStats.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerLifetimeStats">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Statistics.PlayerLifetimeStats</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerLifetimeStats.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerLifetimeStats.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerLifetimeStats.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.PlayerLifetimeStats.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerLifetimeStats.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de PlayerLifetimeStats.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerLifetimeStats.DoCallbackTypedObject">
            <summary>Establecer el stub de PlayerLifetimeStats.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerLifetimeStats.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPlayerLifetimeStats</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerLifetimeStats.TypeNameGet">
            <summary>Establecer el stub de PlayerLifetimeStats.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerLifetimeStats.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerLifetimeStats.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerLifetimeStats.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerLifetimeStats.TypeName">
            <summary>Establecer el stub de PlayerLifetimeStats.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerParticipantStatsSummary">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Statistics.PlayerParticipantStatsSummary</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerParticipantStatsSummary.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerParticipantStatsSummary.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerParticipantStatsSummary.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.PlayerParticipantStatsSummary.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerParticipantStatsSummary.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de PlayerParticipantStatsSummary.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerParticipantStatsSummary.DoCallbackTypedObject">
            <summary>Establecer el stub de PlayerParticipantStatsSummary.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerParticipantStatsSummary.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPlayerParticipantStatsSummary</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerParticipantStatsSummary.TypeNameGet">
            <summary>Establecer el stub de PlayerParticipantStatsSummary.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerParticipantStatsSummary.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerParticipantStatsSummary.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerParticipantStatsSummary.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerParticipantStatsSummary.TypeName">
            <summary>Establecer el stub de PlayerParticipantStatsSummary.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerStatSummaries">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Statistics.PlayerStatSummaries</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerStatSummaries.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerStatSummaries.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerStatSummaries.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.PlayerStatSummaries.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerStatSummaries.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de PlayerStatSummaries.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerStatSummaries.DoCallbackTypedObject">
            <summary>Establecer el stub de PlayerStatSummaries.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerStatSummaries.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPlayerStatSummaries</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerStatSummaries.TypeNameGet">
            <summary>Establecer el stub de PlayerStatSummaries.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerStatSummaries.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerStatSummaries.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerStatSummaries.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerStatSummaries.TypeName">
            <summary>Establecer el stub de PlayerStatSummaries.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerStatSummary">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Statistics.PlayerStatSummary</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerStatSummary.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerStatSummary.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerStatSummary.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.PlayerStatSummary.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerStatSummary.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de PlayerStatSummary.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerStatSummary.DoCallbackTypedObject">
            <summary>Establecer el stub de PlayerStatSummary.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerStatSummary.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPlayerStatSummary</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerStatSummary.TypeNameGet">
            <summary>Establecer el stub de PlayerStatSummary.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerStatSummary.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerStatSummary.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerStatSummary.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerStatSummary.TypeName">
            <summary>Establecer el stub de PlayerStatSummary.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerStats">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Statistics.PlayerStats</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerStats.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerStats.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerStats.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.PlayerStats.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerStats.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de PlayerStats.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerStats.DoCallbackTypedObject">
            <summary>Establecer el stub de PlayerStats.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerStats.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPlayerStats</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerStats.TypeNameGet">
            <summary>Establecer el stub de PlayerStats.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerStats.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerStats.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerStats.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubPlayerStats.TypeName">
            <summary>Establecer el stub de PlayerStats.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubRawStat">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Statistics.RawStat</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubRawStat.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubRawStat.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubRawStat.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.RawStat.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubRawStat.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de RawStat.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubRawStat.DoCallbackTypedObject">
            <summary>Establecer el stub de RawStat.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubRawStat.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubRawStat</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubRawStat.TypeNameGet">
            <summary>Establecer el stub de RawStat.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubRawStat.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubRawStat.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubRawStat.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubRawStat.TypeName">
            <summary>Establecer el stub de RawStat.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubRawStatDTO">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Statistics.RawStatDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubRawStatDTO.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubRawStatDTO.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubRawStatDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.RawStatDTO.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubRawStatDTO.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de RawStatDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubRawStatDTO.DoCallbackTypedObject">
            <summary>Establecer el stub de RawStatDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubRawStatDTO.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubRawStatDTO</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubRawStatDTO.TypeNameGet">
            <summary>Establecer el stub de RawStatDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubRawStatDTO.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubRawStatDTO.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubRawStatDTO.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubRawStatDTO.TypeName">
            <summary>Establecer el stub de RawStatDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubRecentGames">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Statistics.RecentGames</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubRecentGames.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubRecentGames.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubRecentGames.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.RecentGames.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubRecentGames.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de RecentGames.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubRecentGames.DoCallbackTypedObject">
            <summary>Establecer el stub de RecentGames.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubRecentGames.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubRecentGames</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubRecentGames.TypeNameGet">
            <summary>Establecer el stub de RecentGames.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubRecentGames.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubRecentGames.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubRecentGames.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubRecentGames.TypeName">
            <summary>Establecer el stub de RecentGames.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubSummaryAggStat">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Statistics.SummaryAggStat</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubSummaryAggStat.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubSummaryAggStat.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.SummaryAggStat.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubSummaryAggStat.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de SummaryAggStat.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubSummaryAggStat.DoCallbackTypedObject">
            <summary>Establecer el stub de SummaryAggStat.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubSummaryAggStat.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubSummaryAggStat</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubSummaryAggStat.TypeNameGet">
            <summary>Establecer el stub de SummaryAggStat.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubSummaryAggStat.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubSummaryAggStat.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubSummaryAggStat.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubSummaryAggStat.TypeName">
            <summary>Establecer el stub de SummaryAggStat.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubSummaryAggStats">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Statistics.SummaryAggStats</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubSummaryAggStats.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubSummaryAggStats.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubSummaryAggStats.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.SummaryAggStats.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubSummaryAggStats.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de SummaryAggStats.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubSummaryAggStats.DoCallbackTypedObject">
            <summary>Establecer el stub de SummaryAggStats.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubSummaryAggStats.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubSummaryAggStats</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubSummaryAggStats.TypeNameGet">
            <summary>Establecer el stub de SummaryAggStats.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubSummaryAggStats.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubSummaryAggStats.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubSummaryAggStats.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubSummaryAggStats.TypeName">
            <summary>Establecer el stub de SummaryAggStats.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubTimeTrackedStat">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Statistics.TimeTrackedStat</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubTimeTrackedStat.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubTimeTrackedStat.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubTimeTrackedStat.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.TimeTrackedStat.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubTimeTrackedStat.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de TimeTrackedStat.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubTimeTrackedStat.DoCallbackTypedObject">
            <summary>Establecer el stub de TimeTrackedStat.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubTimeTrackedStat.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubTimeTrackedStat</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubTimeTrackedStat.TypeNameGet">
            <summary>Establecer el stub de TimeTrackedStat.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubTimeTrackedStat.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubTimeTrackedStat.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubTimeTrackedStat.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Fakes.StubTimeTrackedStat.TypeName">
            <summary>Establecer el stub de TimeTrackedStat.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamAggregatedStatsDTO">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Statistics.Team.TeamAggregatedStatsDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamAggregatedStatsDTO.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamAggregatedStatsDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.Team.TeamAggregatedStatsDTO)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamAggregatedStatsDTO.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamAggregatedStatsDTO.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamAggregatedStatsDTO.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamAggregatedStatsDTO.Constructor">
            <summary>Establecer el shim de TeamAggregatedStatsDTO.TeamAggregatedStatsDTO()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamAggregatedStatsDTO.ConstructorTeamAggregatedStatsDTOCallback">
            <summary>Establecer el shim de TeamAggregatedStatsDTO.TeamAggregatedStatsDTO(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamAggregatedStatsDTO.ConstructorTypedObject">
            <summary>Establecer el shim de TeamAggregatedStatsDTO.TeamAggregatedStatsDTO(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamAggregatedStatsDTO.DoCallbackTypedObject">
            <summary>Establecer el shim de TeamAggregatedStatsDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamAggregatedStatsDTO.PlayerAggregatedStatsListGet">
            <summary>Establecer el shim de TeamAggregatedStatsDTO.get_PlayerAggregatedStatsList()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamAggregatedStatsDTO.PlayerAggregatedStatsListSetListOfTeamPlayerAggregatedStatsDTO">
            <summary>Establecer el shim de TeamAggregatedStatsDTO.set_PlayerAggregatedStatsList(List`1&lt;TeamPlayerAggregatedStatsDTO&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamAggregatedStatsDTO.QueueTypeGet">
            <summary>Establecer el shim de TeamAggregatedStatsDTO.get_QueueType()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamAggregatedStatsDTO.QueueTypeSetString">
            <summary>Establecer el shim de TeamAggregatedStatsDTO.set_QueueType(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamAggregatedStatsDTO.SerializedToJsonGet">
            <summary>Establecer el shim de TeamAggregatedStatsDTO.get_SerializedToJson()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamAggregatedStatsDTO.SerializedToJsonSetString">
            <summary>Establecer el shim de TeamAggregatedStatsDTO.set_SerializedToJson(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamAggregatedStatsDTO.TeamIdGet">
            <summary>Establecer el shim de TeamAggregatedStatsDTO.get_TeamId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamAggregatedStatsDTO.TeamIdSetTeamId">
            <summary>Establecer el shim de TeamAggregatedStatsDTO.set_TeamId(TeamId value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamAggregatedStatsDTO.TypeNameGet">
            <summary>Establecer el shim de TeamAggregatedStatsDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamAggregatedStatsDTO.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamAggregatedStatsDTO.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de TeamAggregatedStatsDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamAggregatedStatsDTO.AllInstances.PlayerAggregatedStatsListGet">
            <summary>Establecer el shim de TeamAggregatedStatsDTO.get_PlayerAggregatedStatsList()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamAggregatedStatsDTO.AllInstances.PlayerAggregatedStatsListSetListOfTeamPlayerAggregatedStatsDTO">
            <summary>Establecer el shim de TeamAggregatedStatsDTO.set_PlayerAggregatedStatsList(List`1&lt;TeamPlayerAggregatedStatsDTO&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamAggregatedStatsDTO.AllInstances.QueueTypeGet">
            <summary>Establecer el shim de TeamAggregatedStatsDTO.get_QueueType()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamAggregatedStatsDTO.AllInstances.QueueTypeSetString">
            <summary>Establecer el shim de TeamAggregatedStatsDTO.set_QueueType(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamAggregatedStatsDTO.AllInstances.SerializedToJsonGet">
            <summary>Establecer el shim de TeamAggregatedStatsDTO.get_SerializedToJson()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamAggregatedStatsDTO.AllInstances.SerializedToJsonSetString">
            <summary>Establecer el shim de TeamAggregatedStatsDTO.set_SerializedToJson(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamAggregatedStatsDTO.AllInstances.TeamIdGet">
            <summary>Establecer el shim de TeamAggregatedStatsDTO.get_TeamId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamAggregatedStatsDTO.AllInstances.TeamIdSetTeamId">
            <summary>Establecer el shim de TeamAggregatedStatsDTO.set_TeamId(TeamId value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamAggregatedStatsDTO.AllInstances.TypeNameGet">
            <summary>Establecer el shim de TeamAggregatedStatsDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamPlayerAggregatedStatsDTO">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Statistics.Team.TeamPlayerAggregatedStatsDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamPlayerAggregatedStatsDTO.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamPlayerAggregatedStatsDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.Team.TeamPlayerAggregatedStatsDTO)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamPlayerAggregatedStatsDTO.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamPlayerAggregatedStatsDTO.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamPlayerAggregatedStatsDTO.AggregatedStatsGet">
            <summary>Establecer el shim de TeamPlayerAggregatedStatsDTO.get_AggregatedStats()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamPlayerAggregatedStatsDTO.AggregatedStatsSetAggregatedStats">
            <summary>Establecer el shim de TeamPlayerAggregatedStatsDTO.set_AggregatedStats(AggregatedStats value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamPlayerAggregatedStatsDTO.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamPlayerAggregatedStatsDTO.Constructor">
            <summary>Establecer el shim de TeamPlayerAggregatedStatsDTO.TeamPlayerAggregatedStatsDTO()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamPlayerAggregatedStatsDTO.ConstructorTeamPlayerAggregatedStatsDTOCallback">
            <summary>Establecer el shim de TeamPlayerAggregatedStatsDTO.TeamPlayerAggregatedStatsDTO(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamPlayerAggregatedStatsDTO.ConstructorTypedObject">
            <summary>Establecer el shim de TeamPlayerAggregatedStatsDTO.TeamPlayerAggregatedStatsDTO(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamPlayerAggregatedStatsDTO.DoCallbackTypedObject">
            <summary>Establecer el shim de TeamPlayerAggregatedStatsDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamPlayerAggregatedStatsDTO.PlayerIdGet">
            <summary>Establecer el shim de TeamPlayerAggregatedStatsDTO.get_PlayerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamPlayerAggregatedStatsDTO.PlayerIdSetDouble">
            <summary>Establecer el shim de TeamPlayerAggregatedStatsDTO.set_PlayerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamPlayerAggregatedStatsDTO.TypeNameGet">
            <summary>Establecer el shim de TeamPlayerAggregatedStatsDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamPlayerAggregatedStatsDTO.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamPlayerAggregatedStatsDTO.AllInstances.AggregatedStatsGet">
            <summary>Establecer el shim de TeamPlayerAggregatedStatsDTO.get_AggregatedStats()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamPlayerAggregatedStatsDTO.AllInstances.AggregatedStatsSetAggregatedStats">
            <summary>Establecer el shim de TeamPlayerAggregatedStatsDTO.set_AggregatedStats(AggregatedStats value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamPlayerAggregatedStatsDTO.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de TeamPlayerAggregatedStatsDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamPlayerAggregatedStatsDTO.AllInstances.PlayerIdGet">
            <summary>Establecer el shim de TeamPlayerAggregatedStatsDTO.get_PlayerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamPlayerAggregatedStatsDTO.AllInstances.PlayerIdSetDouble">
            <summary>Establecer el shim de TeamPlayerAggregatedStatsDTO.set_PlayerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.ShimTeamPlayerAggregatedStatsDTO.AllInstances.TypeNameGet">
            <summary>Establecer el shim de TeamPlayerAggregatedStatsDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.StubTeamAggregatedStatsDTO">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Statistics.Team.TeamAggregatedStatsDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.StubTeamAggregatedStatsDTO.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.StubTeamAggregatedStatsDTO.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.StubTeamAggregatedStatsDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.Team.TeamAggregatedStatsDTO.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.StubTeamAggregatedStatsDTO.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de TeamAggregatedStatsDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.StubTeamAggregatedStatsDTO.DoCallbackTypedObject">
            <summary>Establecer el stub de TeamAggregatedStatsDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.StubTeamAggregatedStatsDTO.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubTeamAggregatedStatsDTO</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.StubTeamAggregatedStatsDTO.TypeNameGet">
            <summary>Establecer el stub de TeamAggregatedStatsDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.StubTeamAggregatedStatsDTO.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.StubTeamAggregatedStatsDTO.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.StubTeamAggregatedStatsDTO.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.StubTeamAggregatedStatsDTO.TypeName">
            <summary>Establecer el stub de TeamAggregatedStatsDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.StubTeamPlayerAggregatedStatsDTO">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Statistics.Team.TeamPlayerAggregatedStatsDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.StubTeamPlayerAggregatedStatsDTO.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.StubTeamPlayerAggregatedStatsDTO.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.StubTeamPlayerAggregatedStatsDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Statistics.Team.TeamPlayerAggregatedStatsDTO.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.StubTeamPlayerAggregatedStatsDTO.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de TeamPlayerAggregatedStatsDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.StubTeamPlayerAggregatedStatsDTO.DoCallbackTypedObject">
            <summary>Establecer el stub de TeamPlayerAggregatedStatsDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.StubTeamPlayerAggregatedStatsDTO.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubTeamPlayerAggregatedStatsDTO</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.StubTeamPlayerAggregatedStatsDTO.TypeNameGet">
            <summary>Establecer el stub de TeamPlayerAggregatedStatsDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.StubTeamPlayerAggregatedStatsDTO.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.StubTeamPlayerAggregatedStatsDTO.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.StubTeamPlayerAggregatedStatsDTO.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Statistics.Team.Fakes.StubTeamPlayerAggregatedStatsDTO.TypeName">
            <summary>Establecer el stub de TeamPlayerAggregatedStatsDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Summoner.Boost.SummonerActiveBoostsDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.Boost.SummonerActiveBoostsDTO)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.Constructor">
            <summary>Establecer el shim de SummonerActiveBoostsDTO.SummonerActiveBoostsDTO()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.ConstructorSummonerActiveBoostsDTOCallback">
            <summary>Establecer el shim de SummonerActiveBoostsDTO.SummonerActiveBoostsDTO(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.ConstructorTypedObject">
            <summary>Establecer el shim de SummonerActiveBoostsDTO.SummonerActiveBoostsDTO(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.DoCallbackTypedObject">
            <summary>Establecer el shim de SummonerActiveBoostsDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.IpBoostEndDateGet">
            <summary>Establecer el shim de SummonerActiveBoostsDTO.get_IpBoostEndDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.IpBoostEndDateSetDouble">
            <summary>Establecer el shim de SummonerActiveBoostsDTO.set_IpBoostEndDate(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.IpBoostPerWinCountGet">
            <summary>Establecer el shim de SummonerActiveBoostsDTO.get_IpBoostPerWinCount()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.IpBoostPerWinCountSetInt32">
            <summary>Establecer el shim de SummonerActiveBoostsDTO.set_IpBoostPerWinCount(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.IpLoyaltyBoostGet">
            <summary>Establecer el shim de SummonerActiveBoostsDTO.get_IpLoyaltyBoost()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.IpLoyaltyBoostSetInt32">
            <summary>Establecer el shim de SummonerActiveBoostsDTO.set_IpLoyaltyBoost(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.SummonerIdGet">
            <summary>Establecer el shim de SummonerActiveBoostsDTO.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.SummonerIdSetDouble">
            <summary>Establecer el shim de SummonerActiveBoostsDTO.set_SummonerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.TypeNameGet">
            <summary>Establecer el shim de SummonerActiveBoostsDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.XpBoostEndDateGet">
            <summary>Establecer el shim de SummonerActiveBoostsDTO.get_XpBoostEndDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.XpBoostEndDateSetDouble">
            <summary>Establecer el shim de SummonerActiveBoostsDTO.set_XpBoostEndDate(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.XpBoostPerWinCountGet">
            <summary>Establecer el shim de SummonerActiveBoostsDTO.get_XpBoostPerWinCount()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.XpBoostPerWinCountSetInt32">
            <summary>Establecer el shim de SummonerActiveBoostsDTO.set_XpBoostPerWinCount(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.XpLoyaltyBoostGet">
            <summary>Establecer el shim de SummonerActiveBoostsDTO.get_XpLoyaltyBoost()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.XpLoyaltyBoostSetInt32">
            <summary>Establecer el shim de SummonerActiveBoostsDTO.set_XpLoyaltyBoost(Int32 value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de SummonerActiveBoostsDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.AllInstances.IpBoostEndDateGet">
            <summary>Establecer el shim de SummonerActiveBoostsDTO.get_IpBoostEndDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.AllInstances.IpBoostEndDateSetDouble">
            <summary>Establecer el shim de SummonerActiveBoostsDTO.set_IpBoostEndDate(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.AllInstances.IpBoostPerWinCountGet">
            <summary>Establecer el shim de SummonerActiveBoostsDTO.get_IpBoostPerWinCount()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.AllInstances.IpBoostPerWinCountSetInt32">
            <summary>Establecer el shim de SummonerActiveBoostsDTO.set_IpBoostPerWinCount(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.AllInstances.IpLoyaltyBoostGet">
            <summary>Establecer el shim de SummonerActiveBoostsDTO.get_IpLoyaltyBoost()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.AllInstances.IpLoyaltyBoostSetInt32">
            <summary>Establecer el shim de SummonerActiveBoostsDTO.set_IpLoyaltyBoost(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.AllInstances.SummonerIdGet">
            <summary>Establecer el shim de SummonerActiveBoostsDTO.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.AllInstances.SummonerIdSetDouble">
            <summary>Establecer el shim de SummonerActiveBoostsDTO.set_SummonerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.AllInstances.TypeNameGet">
            <summary>Establecer el shim de SummonerActiveBoostsDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.AllInstances.XpBoostEndDateGet">
            <summary>Establecer el shim de SummonerActiveBoostsDTO.get_XpBoostEndDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.AllInstances.XpBoostEndDateSetDouble">
            <summary>Establecer el shim de SummonerActiveBoostsDTO.set_XpBoostEndDate(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.AllInstances.XpBoostPerWinCountGet">
            <summary>Establecer el shim de SummonerActiveBoostsDTO.get_XpBoostPerWinCount()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.AllInstances.XpBoostPerWinCountSetInt32">
            <summary>Establecer el shim de SummonerActiveBoostsDTO.set_XpBoostPerWinCount(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.AllInstances.XpLoyaltyBoostGet">
            <summary>Establecer el shim de SummonerActiveBoostsDTO.get_XpLoyaltyBoost()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.ShimSummonerActiveBoostsDTO.AllInstances.XpLoyaltyBoostSetInt32">
            <summary>Establecer el shim de SummonerActiveBoostsDTO.set_XpLoyaltyBoost(Int32 value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.StubSummonerActiveBoostsDTO">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Summoner.Boost.SummonerActiveBoostsDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.StubSummonerActiveBoostsDTO.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.StubSummonerActiveBoostsDTO.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.StubSummonerActiveBoostsDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.Boost.SummonerActiveBoostsDTO.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.StubSummonerActiveBoostsDTO.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de SummonerActiveBoostsDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.StubSummonerActiveBoostsDTO.DoCallbackTypedObject">
            <summary>Establecer el stub de SummonerActiveBoostsDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.StubSummonerActiveBoostsDTO.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubSummonerActiveBoostsDTO</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.StubSummonerActiveBoostsDTO.TypeNameGet">
            <summary>Establecer el stub de SummonerActiveBoostsDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.StubSummonerActiveBoostsDTO.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.StubSummonerActiveBoostsDTO.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.StubSummonerActiveBoostsDTO.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Boost.Fakes.StubSummonerActiveBoostsDTO.TypeName">
            <summary>Establecer el stub de SummonerActiveBoostsDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllPublicSummonerDataDTO">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Summoner.AllPublicSummonerDataDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllPublicSummonerDataDTO.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllPublicSummonerDataDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.AllPublicSummonerDataDTO)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllPublicSummonerDataDTO.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllPublicSummonerDataDTO.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllPublicSummonerDataDTO.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllPublicSummonerDataDTO.Constructor">
            <summary>Establecer el shim de AllPublicSummonerDataDTO.AllPublicSummonerDataDTO()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllPublicSummonerDataDTO.ConstructorAllPublicSummonerDataDTOCallback">
            <summary>Establecer el shim de AllPublicSummonerDataDTO.AllPublicSummonerDataDTO(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllPublicSummonerDataDTO.ConstructorTypedObject">
            <summary>Establecer el shim de AllPublicSummonerDataDTO.AllPublicSummonerDataDTO(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllPublicSummonerDataDTO.DoCallbackTypedObject">
            <summary>Establecer el shim de AllPublicSummonerDataDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllPublicSummonerDataDTO.SpellBookGet">
            <summary>Establecer el shim de AllPublicSummonerDataDTO.get_SpellBook()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllPublicSummonerDataDTO.SpellBookSetSpellBookDTO">
            <summary>Establecer el shim de AllPublicSummonerDataDTO.set_SpellBook(SpellBookDTO value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllPublicSummonerDataDTO.SummonerDefaultSpellsGet">
            <summary>Establecer el shim de AllPublicSummonerDataDTO.get_SummonerDefaultSpells()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllPublicSummonerDataDTO.SummonerDefaultSpellsSetSummonerDefaultSpells">
            <summary>Establecer el shim de AllPublicSummonerDataDTO.set_SummonerDefaultSpells(SummonerDefaultSpells value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllPublicSummonerDataDTO.SummonerGet">
            <summary>Establecer el shim de AllPublicSummonerDataDTO.get_Summoner()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllPublicSummonerDataDTO.SummonerLevelAndPointsGet">
            <summary>Establecer el shim de AllPublicSummonerDataDTO.get_SummonerLevelAndPoints()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllPublicSummonerDataDTO.SummonerLevelAndPointsSetSummonerLevelAndPoints">
            <summary>Establecer el shim de AllPublicSummonerDataDTO.set_SummonerLevelAndPoints(SummonerLevelAndPoints value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllPublicSummonerDataDTO.SummonerLevelGet">
            <summary>Establecer el shim de AllPublicSummonerDataDTO.get_SummonerLevel()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllPublicSummonerDataDTO.SummonerLevelSetSummonerLevel">
            <summary>Establecer el shim de AllPublicSummonerDataDTO.set_SummonerLevel(SummonerLevel value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllPublicSummonerDataDTO.SummonerSetBasePublicSummonerDTO">
            <summary>Establecer el shim de AllPublicSummonerDataDTO.set_Summoner(BasePublicSummonerDTO value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllPublicSummonerDataDTO.SummonerTalentsAndPointsGet">
            <summary>Establecer el shim de AllPublicSummonerDataDTO.get_SummonerTalentsAndPoints()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllPublicSummonerDataDTO.SummonerTalentsAndPointsSetSummonerTalentsAndPoints">
            <summary>Establecer el shim de AllPublicSummonerDataDTO.set_SummonerTalentsAndPoints(SummonerTalentsAndPoints value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllPublicSummonerDataDTO.TypeNameGet">
            <summary>Establecer el shim de AllPublicSummonerDataDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllPublicSummonerDataDTO.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllPublicSummonerDataDTO.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de AllPublicSummonerDataDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllPublicSummonerDataDTO.AllInstances.SpellBookGet">
            <summary>Establecer el shim de AllPublicSummonerDataDTO.get_SpellBook()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllPublicSummonerDataDTO.AllInstances.SpellBookSetSpellBookDTO">
            <summary>Establecer el shim de AllPublicSummonerDataDTO.set_SpellBook(SpellBookDTO value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllPublicSummonerDataDTO.AllInstances.SummonerDefaultSpellsGet">
            <summary>Establecer el shim de AllPublicSummonerDataDTO.get_SummonerDefaultSpells()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllPublicSummonerDataDTO.AllInstances.SummonerDefaultSpellsSetSummonerDefaultSpells">
            <summary>Establecer el shim de AllPublicSummonerDataDTO.set_SummonerDefaultSpells(SummonerDefaultSpells value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllPublicSummonerDataDTO.AllInstances.SummonerGet">
            <summary>Establecer el shim de AllPublicSummonerDataDTO.get_Summoner()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllPublicSummonerDataDTO.AllInstances.SummonerLevelAndPointsGet">
            <summary>Establecer el shim de AllPublicSummonerDataDTO.get_SummonerLevelAndPoints()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllPublicSummonerDataDTO.AllInstances.SummonerLevelAndPointsSetSummonerLevelAndPoints">
            <summary>Establecer el shim de AllPublicSummonerDataDTO.set_SummonerLevelAndPoints(SummonerLevelAndPoints value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllPublicSummonerDataDTO.AllInstances.SummonerLevelGet">
            <summary>Establecer el shim de AllPublicSummonerDataDTO.get_SummonerLevel()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllPublicSummonerDataDTO.AllInstances.SummonerLevelSetSummonerLevel">
            <summary>Establecer el shim de AllPublicSummonerDataDTO.set_SummonerLevel(SummonerLevel value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllPublicSummonerDataDTO.AllInstances.SummonerSetBasePublicSummonerDTO">
            <summary>Establecer el shim de AllPublicSummonerDataDTO.set_Summoner(BasePublicSummonerDTO value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllPublicSummonerDataDTO.AllInstances.SummonerTalentsAndPointsGet">
            <summary>Establecer el shim de AllPublicSummonerDataDTO.get_SummonerTalentsAndPoints()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllPublicSummonerDataDTO.AllInstances.SummonerTalentsAndPointsSetSummonerTalentsAndPoints">
            <summary>Establecer el shim de AllPublicSummonerDataDTO.set_SummonerTalentsAndPoints(SummonerTalentsAndPoints value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllPublicSummonerDataDTO.AllInstances.TypeNameGet">
            <summary>Establecer el shim de AllPublicSummonerDataDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Summoner.AllSummonerData</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.AllSummonerData)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.Constructor">
            <summary>Establecer el shim de AllSummonerData.AllSummonerData()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.ConstructorAllSummonerDataCallback">
            <summary>Establecer el shim de AllSummonerData.AllSummonerData(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.ConstructorTypedObject">
            <summary>Establecer el shim de AllSummonerData.AllSummonerData(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.DoCallbackTypedObject">
            <summary>Establecer el shim de AllSummonerData.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.MasteryBookGet">
            <summary>Establecer el shim de AllSummonerData.get_MasteryBook()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.MasteryBookSetMasteryBookDTO">
            <summary>Establecer el shim de AllSummonerData.set_MasteryBook(MasteryBookDTO value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.SpellBookGet">
            <summary>Establecer el shim de AllSummonerData.get_SpellBook()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.SpellBookSetSpellBookDTO">
            <summary>Establecer el shim de AllSummonerData.set_SpellBook(SpellBookDTO value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.SummonerDefaultSpellsGet">
            <summary>Establecer el shim de AllSummonerData.get_SummonerDefaultSpells()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.SummonerDefaultSpellsSetSummonerDefaultSpells">
            <summary>Establecer el shim de AllSummonerData.set_SummonerDefaultSpells(SummonerDefaultSpells value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.SummonerGet">
            <summary>Establecer el shim de AllSummonerData.get_Summoner()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.SummonerLevelAndPointsGet">
            <summary>Establecer el shim de AllSummonerData.get_SummonerLevelAndPoints()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.SummonerLevelAndPointsSetSummonerLevelAndPoints">
            <summary>Establecer el shim de AllSummonerData.set_SummonerLevelAndPoints(SummonerLevelAndPoints value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.SummonerLevelGet">
            <summary>Establecer el shim de AllSummonerData.get_SummonerLevel()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.SummonerLevelSetSummonerLevel">
            <summary>Establecer el shim de AllSummonerData.set_SummonerLevel(SummonerLevel value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.SummonerSetSummoner">
            <summary>Establecer el shim de AllSummonerData.set_Summoner(Summoner value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.SummonerTalentsAndPointsGet">
            <summary>Establecer el shim de AllSummonerData.get_SummonerTalentsAndPoints()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.SummonerTalentsAndPointsSetSummonerTalentsAndPoints">
            <summary>Establecer el shim de AllSummonerData.set_SummonerTalentsAndPoints(SummonerTalentsAndPoints value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.TypeNameGet">
            <summary>Establecer el shim de AllSummonerData.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de AllSummonerData.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.AllInstances.MasteryBookGet">
            <summary>Establecer el shim de AllSummonerData.get_MasteryBook()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.AllInstances.MasteryBookSetMasteryBookDTO">
            <summary>Establecer el shim de AllSummonerData.set_MasteryBook(MasteryBookDTO value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.AllInstances.SpellBookGet">
            <summary>Establecer el shim de AllSummonerData.get_SpellBook()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.AllInstances.SpellBookSetSpellBookDTO">
            <summary>Establecer el shim de AllSummonerData.set_SpellBook(SpellBookDTO value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.AllInstances.SummonerDefaultSpellsGet">
            <summary>Establecer el shim de AllSummonerData.get_SummonerDefaultSpells()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.AllInstances.SummonerDefaultSpellsSetSummonerDefaultSpells">
            <summary>Establecer el shim de AllSummonerData.set_SummonerDefaultSpells(SummonerDefaultSpells value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.AllInstances.SummonerGet">
            <summary>Establecer el shim de AllSummonerData.get_Summoner()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.AllInstances.SummonerLevelAndPointsGet">
            <summary>Establecer el shim de AllSummonerData.get_SummonerLevelAndPoints()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.AllInstances.SummonerLevelAndPointsSetSummonerLevelAndPoints">
            <summary>Establecer el shim de AllSummonerData.set_SummonerLevelAndPoints(SummonerLevelAndPoints value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.AllInstances.SummonerLevelGet">
            <summary>Establecer el shim de AllSummonerData.get_SummonerLevel()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.AllInstances.SummonerLevelSetSummonerLevel">
            <summary>Establecer el shim de AllSummonerData.set_SummonerLevel(SummonerLevel value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.AllInstances.SummonerSetSummoner">
            <summary>Establecer el shim de AllSummonerData.set_Summoner(Summoner value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.AllInstances.SummonerTalentsAndPointsGet">
            <summary>Establecer el shim de AllSummonerData.get_SummonerTalentsAndPoints()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.AllInstances.SummonerTalentsAndPointsSetSummonerTalentsAndPoints">
            <summary>Establecer el shim de AllSummonerData.set_SummonerTalentsAndPoints(SummonerTalentsAndPoints value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimAllSummonerData.AllInstances.TypeNameGet">
            <summary>Establecer el shim de AllSummonerData.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Summoner.BasePublicSummonerDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.BasePublicSummonerDTO)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.AcctIdGet">
            <summary>Establecer el shim de BasePublicSummonerDTO.get_AcctId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.AcctIdSetDouble">
            <summary>Establecer el shim de BasePublicSummonerDTO.set_AcctId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.Constructor">
            <summary>Establecer el shim de BasePublicSummonerDTO.BasePublicSummonerDTO()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.ConstructorBasePublicSummonerDTOCallback">
            <summary>Establecer el shim de BasePublicSummonerDTO.BasePublicSummonerDTO(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.ConstructorTypedObject">
            <summary>Establecer el shim de BasePublicSummonerDTO.BasePublicSummonerDTO(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.DoCallbackTypedObject">
            <summary>Establecer el shim de BasePublicSummonerDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.InternalNameGet">
            <summary>Establecer el shim de BasePublicSummonerDTO.get_InternalName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.InternalNameSetString">
            <summary>Establecer el shim de BasePublicSummonerDTO.set_InternalName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.NameGet">
            <summary>Establecer el shim de BasePublicSummonerDTO.get_Name()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.NameSetString">
            <summary>Establecer el shim de BasePublicSummonerDTO.set_Name(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.ProfileIconIdGet">
            <summary>Establecer el shim de BasePublicSummonerDTO.get_ProfileIconId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.ProfileIconIdSetInt32">
            <summary>Establecer el shim de BasePublicSummonerDTO.set_ProfileIconId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.SeasonOneTierGet">
            <summary>Establecer el shim de BasePublicSummonerDTO.get_SeasonOneTier()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.SeasonOneTierSetString">
            <summary>Establecer el shim de BasePublicSummonerDTO.set_SeasonOneTier(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.SeasonTwoTierGet">
            <summary>Establecer el shim de BasePublicSummonerDTO.get_SeasonTwoTier()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.SeasonTwoTierSetString">
            <summary>Establecer el shim de BasePublicSummonerDTO.set_SeasonTwoTier(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.SumIdGet">
            <summary>Establecer el shim de BasePublicSummonerDTO.get_SumId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.SumIdSetDouble">
            <summary>Establecer el shim de BasePublicSummonerDTO.set_SumId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.TypeNameGet">
            <summary>Establecer el shim de BasePublicSummonerDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.AllInstances.AcctIdGet">
            <summary>Establecer el shim de BasePublicSummonerDTO.get_AcctId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.AllInstances.AcctIdSetDouble">
            <summary>Establecer el shim de BasePublicSummonerDTO.set_AcctId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de BasePublicSummonerDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.AllInstances.InternalNameGet">
            <summary>Establecer el shim de BasePublicSummonerDTO.get_InternalName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.AllInstances.InternalNameSetString">
            <summary>Establecer el shim de BasePublicSummonerDTO.set_InternalName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.AllInstances.NameGet">
            <summary>Establecer el shim de BasePublicSummonerDTO.get_Name()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.AllInstances.NameSetString">
            <summary>Establecer el shim de BasePublicSummonerDTO.set_Name(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.AllInstances.ProfileIconIdGet">
            <summary>Establecer el shim de BasePublicSummonerDTO.get_ProfileIconId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.AllInstances.ProfileIconIdSetInt32">
            <summary>Establecer el shim de BasePublicSummonerDTO.set_ProfileIconId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.AllInstances.SeasonOneTierGet">
            <summary>Establecer el shim de BasePublicSummonerDTO.get_SeasonOneTier()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.AllInstances.SeasonOneTierSetString">
            <summary>Establecer el shim de BasePublicSummonerDTO.set_SeasonOneTier(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.AllInstances.SeasonTwoTierGet">
            <summary>Establecer el shim de BasePublicSummonerDTO.get_SeasonTwoTier()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.AllInstances.SeasonTwoTierSetString">
            <summary>Establecer el shim de BasePublicSummonerDTO.set_SeasonTwoTier(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.AllInstances.SumIdGet">
            <summary>Establecer el shim de BasePublicSummonerDTO.get_SumId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.AllInstances.SumIdSetDouble">
            <summary>Establecer el shim de BasePublicSummonerDTO.set_SumId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimBasePublicSummonerDTO.AllInstances.TypeNameGet">
            <summary>Establecer el shim de BasePublicSummonerDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Summoner.PublicSummoner</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.PublicSummoner)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.AcctIdGet">
            <summary>Establecer el shim de PublicSummoner.get_AcctId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.AcctIdSetDouble">
            <summary>Establecer el shim de PublicSummoner.set_AcctId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.Constructor">
            <summary>Establecer el shim de PublicSummoner.PublicSummoner()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.ConstructorPublicSummonerCallback">
            <summary>Establecer el shim de PublicSummoner.PublicSummoner(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.ConstructorTypedObject">
            <summary>Establecer el shim de PublicSummoner.PublicSummoner(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.DoCallbackTypedObject">
            <summary>Establecer el shim de PublicSummoner.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.InternalNameGet">
            <summary>Establecer el shim de PublicSummoner.get_InternalName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.InternalNameSetString">
            <summary>Establecer el shim de PublicSummoner.set_InternalName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.NameGet">
            <summary>Establecer el shim de PublicSummoner.get_Name()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.NameSetString">
            <summary>Establecer el shim de PublicSummoner.set_Name(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.ProfileIconIdGet">
            <summary>Establecer el shim de PublicSummoner.get_ProfileIconId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.ProfileIconIdSetInt32">
            <summary>Establecer el shim de PublicSummoner.set_ProfileIconId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.RevisionDateGet">
            <summary>Establecer el shim de PublicSummoner.get_RevisionDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.RevisionDateSetDateTime">
            <summary>Establecer el shim de PublicSummoner.set_RevisionDate(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.RevisionIdGet">
            <summary>Establecer el shim de PublicSummoner.get_RevisionId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.RevisionIdSetDouble">
            <summary>Establecer el shim de PublicSummoner.set_RevisionId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.SummonerIdGet">
            <summary>Establecer el shim de PublicSummoner.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.SummonerIdSetDouble">
            <summary>Establecer el shim de PublicSummoner.set_SummonerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.SummonerLevelGet">
            <summary>Establecer el shim de PublicSummoner.get_SummonerLevel()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.SummonerLevelSetDouble">
            <summary>Establecer el shim de PublicSummoner.set_SummonerLevel(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.TypeNameGet">
            <summary>Establecer el shim de PublicSummoner.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.AllInstances.AcctIdGet">
            <summary>Establecer el shim de PublicSummoner.get_AcctId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.AllInstances.AcctIdSetDouble">
            <summary>Establecer el shim de PublicSummoner.set_AcctId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de PublicSummoner.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.AllInstances.InternalNameGet">
            <summary>Establecer el shim de PublicSummoner.get_InternalName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.AllInstances.InternalNameSetString">
            <summary>Establecer el shim de PublicSummoner.set_InternalName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.AllInstances.NameGet">
            <summary>Establecer el shim de PublicSummoner.get_Name()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.AllInstances.NameSetString">
            <summary>Establecer el shim de PublicSummoner.set_Name(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.AllInstances.ProfileIconIdGet">
            <summary>Establecer el shim de PublicSummoner.get_ProfileIconId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.AllInstances.ProfileIconIdSetInt32">
            <summary>Establecer el shim de PublicSummoner.set_ProfileIconId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.AllInstances.RevisionDateGet">
            <summary>Establecer el shim de PublicSummoner.get_RevisionDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.AllInstances.RevisionDateSetDateTime">
            <summary>Establecer el shim de PublicSummoner.set_RevisionDate(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.AllInstances.RevisionIdGet">
            <summary>Establecer el shim de PublicSummoner.get_RevisionId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.AllInstances.RevisionIdSetDouble">
            <summary>Establecer el shim de PublicSummoner.set_RevisionId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.AllInstances.SummonerIdGet">
            <summary>Establecer el shim de PublicSummoner.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.AllInstances.SummonerIdSetDouble">
            <summary>Establecer el shim de PublicSummoner.set_SummonerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.AllInstances.SummonerLevelGet">
            <summary>Establecer el shim de PublicSummoner.get_SummonerLevel()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.AllInstances.SummonerLevelSetDouble">
            <summary>Establecer el shim de PublicSummoner.set_SummonerLevel(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimPublicSummoner.AllInstances.TypeNameGet">
            <summary>Establecer el shim de PublicSummoner.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimRuneSlot">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Summoner.RuneSlot</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimRuneSlot.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimRuneSlot.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.RuneSlot)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimRuneSlot.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimRuneSlot.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimRuneSlot.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimRuneSlot.Constructor">
            <summary>Establecer el shim de RuneSlot.RuneSlot()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimRuneSlot.ConstructorRuneSlotCallback">
            <summary>Establecer el shim de RuneSlot.RuneSlot(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimRuneSlot.ConstructorTypedObject">
            <summary>Establecer el shim de RuneSlot.RuneSlot(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimRuneSlot.DoCallbackTypedObject">
            <summary>Establecer el shim de RuneSlot.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimRuneSlot.IdGet">
            <summary>Establecer el shim de RuneSlot.get_Id()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimRuneSlot.IdSetInt32">
            <summary>Establecer el shim de RuneSlot.set_Id(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimRuneSlot.MinLevelGet">
            <summary>Establecer el shim de RuneSlot.get_MinLevel()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimRuneSlot.MinLevelSetInt32">
            <summary>Establecer el shim de RuneSlot.set_MinLevel(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimRuneSlot.RuneTypeGet">
            <summary>Establecer el shim de RuneSlot.get_RuneType()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimRuneSlot.RuneTypeSetRuneType">
            <summary>Establecer el shim de RuneSlot.set_RuneType(RuneType value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimRuneSlot.TypeNameGet">
            <summary>Establecer el shim de RuneSlot.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimRuneSlot.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimRuneSlot.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de RuneSlot.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimRuneSlot.AllInstances.IdGet">
            <summary>Establecer el shim de RuneSlot.get_Id()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimRuneSlot.AllInstances.IdSetInt32">
            <summary>Establecer el shim de RuneSlot.set_Id(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimRuneSlot.AllInstances.MinLevelGet">
            <summary>Establecer el shim de RuneSlot.get_MinLevel()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimRuneSlot.AllInstances.MinLevelSetInt32">
            <summary>Establecer el shim de RuneSlot.set_MinLevel(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimRuneSlot.AllInstances.RuneTypeGet">
            <summary>Establecer el shim de RuneSlot.get_RuneType()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimRuneSlot.AllInstances.RuneTypeSetRuneType">
            <summary>Establecer el shim de RuneSlot.set_RuneType(RuneType value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimRuneSlot.AllInstances.TypeNameGet">
            <summary>Establecer el shim de RuneSlot.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Summoner.Summoner</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.Summoner)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.AcctIdGet">
            <summary>Establecer el shim de Summoner.get_AcctId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.AcctIdSetDouble">
            <summary>Establecer el shim de Summoner.set_AcctId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.AdvancedTutorialFlagGet">
            <summary>Establecer el shim de Summoner.get_AdvancedTutorialFlag()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.AdvancedTutorialFlagSetBoolean">
            <summary>Establecer el shim de Summoner.set_AdvancedTutorialFlag(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.Constructor">
            <summary>Establecer el shim de Summoner.Summoner()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.ConstructorSummonerCallback">
            <summary>Establecer el shim de Summoner.Summoner(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.ConstructorTypedObject">
            <summary>Establecer el shim de Summoner.Summoner(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.DisplayEloQuestionaireGet">
            <summary>Establecer el shim de Summoner.get_DisplayEloQuestionaire()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.DisplayEloQuestionaireSetBoolean">
            <summary>Establecer el shim de Summoner.set_DisplayEloQuestionaire(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.DoCallbackTypedObject">
            <summary>Establecer el shim de Summoner.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.HelpFlagGet">
            <summary>Establecer el shim de Summoner.get_HelpFlag()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.HelpFlagSetBoolean">
            <summary>Establecer el shim de Summoner.set_HelpFlag(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.InternalNameGet">
            <summary>Establecer el shim de Summoner.get_InternalName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.InternalNameSetString">
            <summary>Establecer el shim de Summoner.set_InternalName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.LastGameDateGet">
            <summary>Establecer el shim de Summoner.get_LastGameDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.LastGameDateSetDateTime">
            <summary>Establecer el shim de Summoner.set_LastGameDate(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.NameChangeFlagGet">
            <summary>Establecer el shim de Summoner.get_NameChangeFlag()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.NameChangeFlagSetBoolean">
            <summary>Establecer el shim de Summoner.set_NameChangeFlag(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.NameGet">
            <summary>Establecer el shim de Summoner.get_Name()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.NameSetString">
            <summary>Establecer el shim de Summoner.set_Name(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.ProfileIconIdGet">
            <summary>Establecer el shim de Summoner.get_ProfileIconId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.ProfileIconIdSetInt32">
            <summary>Establecer el shim de Summoner.set_ProfileIconId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.RevisionDateGet">
            <summary>Establecer el shim de Summoner.get_RevisionDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.RevisionDateSetDateTime">
            <summary>Establecer el shim de Summoner.set_RevisionDate(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.RevisionIdGet">
            <summary>Establecer el shim de Summoner.get_RevisionId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.RevisionIdSetDouble">
            <summary>Establecer el shim de Summoner.set_RevisionId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.SeasonOneTierGet">
            <summary>Establecer el shim de Summoner.get_SeasonOneTier()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.SeasonOneTierSetString">
            <summary>Establecer el shim de Summoner.set_SeasonOneTier(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.SeasonTwoTierGet">
            <summary>Establecer el shim de Summoner.get_SeasonTwoTier()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.SeasonTwoTierSetString">
            <summary>Establecer el shim de Summoner.set_SeasonTwoTier(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.SocialNetworkUserIdsGet">
            <summary>Establecer el shim de Summoner.get_SocialNetworkUserIds()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.SocialNetworkUserIdsSetListOfObject">
            <summary>Establecer el shim de Summoner.set_SocialNetworkUserIds(List`1&lt;Object&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.SumIdGet">
            <summary>Establecer el shim de Summoner.get_SumId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.SumIdSetDouble">
            <summary>Establecer el shim de Summoner.set_SumId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.TutorialFlagGet">
            <summary>Establecer el shim de Summoner.get_TutorialFlag()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.TutorialFlagSetBoolean">
            <summary>Establecer el shim de Summoner.set_TutorialFlag(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.TypeNameGet">
            <summary>Establecer el shim de Summoner.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.AllInstances.AcctIdGet">
            <summary>Establecer el shim de Summoner.get_AcctId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.AllInstances.AcctIdSetDouble">
            <summary>Establecer el shim de Summoner.set_AcctId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.AllInstances.AdvancedTutorialFlagGet">
            <summary>Establecer el shim de Summoner.get_AdvancedTutorialFlag()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.AllInstances.AdvancedTutorialFlagSetBoolean">
            <summary>Establecer el shim de Summoner.set_AdvancedTutorialFlag(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.AllInstances.DisplayEloQuestionaireGet">
            <summary>Establecer el shim de Summoner.get_DisplayEloQuestionaire()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.AllInstances.DisplayEloQuestionaireSetBoolean">
            <summary>Establecer el shim de Summoner.set_DisplayEloQuestionaire(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de Summoner.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.AllInstances.HelpFlagGet">
            <summary>Establecer el shim de Summoner.get_HelpFlag()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.AllInstances.HelpFlagSetBoolean">
            <summary>Establecer el shim de Summoner.set_HelpFlag(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.AllInstances.InternalNameGet">
            <summary>Establecer el shim de Summoner.get_InternalName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.AllInstances.InternalNameSetString">
            <summary>Establecer el shim de Summoner.set_InternalName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.AllInstances.LastGameDateGet">
            <summary>Establecer el shim de Summoner.get_LastGameDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.AllInstances.LastGameDateSetDateTime">
            <summary>Establecer el shim de Summoner.set_LastGameDate(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.AllInstances.NameChangeFlagGet">
            <summary>Establecer el shim de Summoner.get_NameChangeFlag()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.AllInstances.NameChangeFlagSetBoolean">
            <summary>Establecer el shim de Summoner.set_NameChangeFlag(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.AllInstances.NameGet">
            <summary>Establecer el shim de Summoner.get_Name()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.AllInstances.NameSetString">
            <summary>Establecer el shim de Summoner.set_Name(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.AllInstances.ProfileIconIdGet">
            <summary>Establecer el shim de Summoner.get_ProfileIconId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.AllInstances.ProfileIconIdSetInt32">
            <summary>Establecer el shim de Summoner.set_ProfileIconId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.AllInstances.RevisionDateGet">
            <summary>Establecer el shim de Summoner.get_RevisionDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.AllInstances.RevisionDateSetDateTime">
            <summary>Establecer el shim de Summoner.set_RevisionDate(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.AllInstances.RevisionIdGet">
            <summary>Establecer el shim de Summoner.get_RevisionId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.AllInstances.RevisionIdSetDouble">
            <summary>Establecer el shim de Summoner.set_RevisionId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.AllInstances.SeasonOneTierGet">
            <summary>Establecer el shim de Summoner.get_SeasonOneTier()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.AllInstances.SeasonOneTierSetString">
            <summary>Establecer el shim de Summoner.set_SeasonOneTier(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.AllInstances.SeasonTwoTierGet">
            <summary>Establecer el shim de Summoner.get_SeasonTwoTier()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.AllInstances.SeasonTwoTierSetString">
            <summary>Establecer el shim de Summoner.set_SeasonTwoTier(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.AllInstances.SocialNetworkUserIdsGet">
            <summary>Establecer el shim de Summoner.get_SocialNetworkUserIds()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.AllInstances.SocialNetworkUserIdsSetListOfObject">
            <summary>Establecer el shim de Summoner.set_SocialNetworkUserIds(List`1&lt;Object&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.AllInstances.SumIdGet">
            <summary>Establecer el shim de Summoner.get_SumId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.AllInstances.SumIdSetDouble">
            <summary>Establecer el shim de Summoner.set_SumId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.AllInstances.TutorialFlagGet">
            <summary>Establecer el shim de Summoner.get_TutorialFlag()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.AllInstances.TutorialFlagSetBoolean">
            <summary>Establecer el shim de Summoner.set_TutorialFlag(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummoner.AllInstances.TypeNameGet">
            <summary>Establecer el shim de Summoner.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerCatalog">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Summoner.SummonerCatalog</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerCatalog.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerCatalog.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.SummonerCatalog)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerCatalog.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerCatalog.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerCatalog.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerCatalog.Constructor">
            <summary>Establecer el shim de SummonerCatalog.SummonerCatalog()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerCatalog.ConstructorSummonerCatalogCallback">
            <summary>Establecer el shim de SummonerCatalog.SummonerCatalog(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerCatalog.ConstructorTypedObject">
            <summary>Establecer el shim de SummonerCatalog.SummonerCatalog(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerCatalog.DoCallbackTypedObject">
            <summary>Establecer el shim de SummonerCatalog.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerCatalog.ItemsGet">
            <summary>Establecer el shim de SummonerCatalog.get_Items()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerCatalog.ItemsSetObject">
            <summary>Establecer el shim de SummonerCatalog.set_Items(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerCatalog.SpellBookConfigGet">
            <summary>Establecer el shim de SummonerCatalog.get_SpellBookConfig()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerCatalog.SpellBookConfigSetListOfRuneSlot">
            <summary>Establecer el shim de SummonerCatalog.set_SpellBookConfig(List`1&lt;RuneSlot&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerCatalog.TalentTreeGet">
            <summary>Establecer el shim de SummonerCatalog.get_TalentTree()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerCatalog.TalentTreeSetListOfTalentGroup">
            <summary>Establecer el shim de SummonerCatalog.set_TalentTree(List`1&lt;TalentGroup&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerCatalog.TypeNameGet">
            <summary>Establecer el shim de SummonerCatalog.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerCatalog.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerCatalog.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de SummonerCatalog.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerCatalog.AllInstances.ItemsGet">
            <summary>Establecer el shim de SummonerCatalog.get_Items()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerCatalog.AllInstances.ItemsSetObject">
            <summary>Establecer el shim de SummonerCatalog.set_Items(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerCatalog.AllInstances.SpellBookConfigGet">
            <summary>Establecer el shim de SummonerCatalog.get_SpellBookConfig()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerCatalog.AllInstances.SpellBookConfigSetListOfRuneSlot">
            <summary>Establecer el shim de SummonerCatalog.set_SpellBookConfig(List`1&lt;RuneSlot&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerCatalog.AllInstances.TalentTreeGet">
            <summary>Establecer el shim de SummonerCatalog.get_TalentTree()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerCatalog.AllInstances.TalentTreeSetListOfTalentGroup">
            <summary>Establecer el shim de SummonerCatalog.set_TalentTree(List`1&lt;TalentGroup&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerCatalog.AllInstances.TypeNameGet">
            <summary>Establecer el shim de SummonerCatalog.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerDefaultSpells">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Summoner.SummonerDefaultSpells</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerDefaultSpells.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerDefaultSpells.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.SummonerDefaultSpells)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerDefaultSpells.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerDefaultSpells.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerDefaultSpells.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerDefaultSpells.Constructor">
            <summary>Establecer el shim de SummonerDefaultSpells.SummonerDefaultSpells()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerDefaultSpells.ConstructorSummonerDefaultSpellsCallback">
            <summary>Establecer el shim de SummonerDefaultSpells.SummonerDefaultSpells(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerDefaultSpells.ConstructorTypedObject">
            <summary>Establecer el shim de SummonerDefaultSpells.SummonerDefaultSpells(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerDefaultSpells.DoCallbackTypedObject">
            <summary>Establecer el shim de SummonerDefaultSpells.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerDefaultSpells.SummonerDefaultSpellMapGet">
            <summary>Establecer el shim de SummonerDefaultSpells.get_SummonerDefaultSpellMap()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerDefaultSpells.SummonerDefaultSpellMapSetTypedObject">
            <summary>Establecer el shim de SummonerDefaultSpells.set_SummonerDefaultSpellMap(TypedObject value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerDefaultSpells.SummonerDefaultSpellsJsonGet">
            <summary>Establecer el shim de SummonerDefaultSpells.get_SummonerDefaultSpellsJson()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerDefaultSpells.SummonerDefaultSpellsJsonSetObject">
            <summary>Establecer el shim de SummonerDefaultSpells.set_SummonerDefaultSpellsJson(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerDefaultSpells.SummonerIdGet">
            <summary>Establecer el shim de SummonerDefaultSpells.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerDefaultSpells.SummonerIdSetDouble">
            <summary>Establecer el shim de SummonerDefaultSpells.set_SummonerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerDefaultSpells.TypeNameGet">
            <summary>Establecer el shim de SummonerDefaultSpells.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerDefaultSpells.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerDefaultSpells.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de SummonerDefaultSpells.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerDefaultSpells.AllInstances.SummonerDefaultSpellMapGet">
            <summary>Establecer el shim de SummonerDefaultSpells.get_SummonerDefaultSpellMap()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerDefaultSpells.AllInstances.SummonerDefaultSpellMapSetTypedObject">
            <summary>Establecer el shim de SummonerDefaultSpells.set_SummonerDefaultSpellMap(TypedObject value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerDefaultSpells.AllInstances.SummonerDefaultSpellsJsonGet">
            <summary>Establecer el shim de SummonerDefaultSpells.get_SummonerDefaultSpellsJson()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerDefaultSpells.AllInstances.SummonerDefaultSpellsJsonSetObject">
            <summary>Establecer el shim de SummonerDefaultSpells.set_SummonerDefaultSpellsJson(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerDefaultSpells.AllInstances.SummonerIdGet">
            <summary>Establecer el shim de SummonerDefaultSpells.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerDefaultSpells.AllInstances.SummonerIdSetDouble">
            <summary>Establecer el shim de SummonerDefaultSpells.set_SummonerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerDefaultSpells.AllInstances.TypeNameGet">
            <summary>Establecer el shim de SummonerDefaultSpells.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Summoner.SummonerLevel</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.SummonerLevel)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.Constructor">
            <summary>Establecer el shim de SummonerLevel.SummonerLevel()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.ConstructorSummonerLevelCallback">
            <summary>Establecer el shim de SummonerLevel.SummonerLevel(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.ConstructorTypedObject">
            <summary>Establecer el shim de SummonerLevel.SummonerLevel(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.DoCallbackTypedObject">
            <summary>Establecer el shim de SummonerLevel.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.ExpForLossGet">
            <summary>Establecer el shim de SummonerLevel.get_ExpForLoss()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.ExpForLossSetDouble">
            <summary>Establecer el shim de SummonerLevel.set_ExpForLoss(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.ExpForWinGet">
            <summary>Establecer el shim de SummonerLevel.get_ExpForWin()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.ExpForWinSetDouble">
            <summary>Establecer el shim de SummonerLevel.set_ExpForWin(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.ExpTierModGet">
            <summary>Establecer el shim de SummonerLevel.get_ExpTierMod()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.ExpTierModSetDouble">
            <summary>Establecer el shim de SummonerLevel.set_ExpTierMod(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.ExpToNextLevelGet">
            <summary>Establecer el shim de SummonerLevel.get_ExpToNextLevel()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.ExpToNextLevelSetDouble">
            <summary>Establecer el shim de SummonerLevel.set_ExpToNextLevel(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.GrantRpGet">
            <summary>Establecer el shim de SummonerLevel.get_GrantRp()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.GrantRpSetDouble">
            <summary>Establecer el shim de SummonerLevel.set_GrantRp(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.InfTierModGet">
            <summary>Establecer el shim de SummonerLevel.get_InfTierMod()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.InfTierModSetDouble">
            <summary>Establecer el shim de SummonerLevel.set_InfTierMod(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.LevelGet">
            <summary>Establecer el shim de SummonerLevel.get_Level()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.LevelSetDouble">
            <summary>Establecer el shim de SummonerLevel.set_Level(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.SummonerTierGet">
            <summary>Establecer el shim de SummonerLevel.get_SummonerTier()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.SummonerTierSetDouble">
            <summary>Establecer el shim de SummonerLevel.set_SummonerTier(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.TypeNameGet">
            <summary>Establecer el shim de SummonerLevel.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de SummonerLevel.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.AllInstances.ExpForLossGet">
            <summary>Establecer el shim de SummonerLevel.get_ExpForLoss()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.AllInstances.ExpForLossSetDouble">
            <summary>Establecer el shim de SummonerLevel.set_ExpForLoss(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.AllInstances.ExpForWinGet">
            <summary>Establecer el shim de SummonerLevel.get_ExpForWin()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.AllInstances.ExpForWinSetDouble">
            <summary>Establecer el shim de SummonerLevel.set_ExpForWin(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.AllInstances.ExpTierModGet">
            <summary>Establecer el shim de SummonerLevel.get_ExpTierMod()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.AllInstances.ExpTierModSetDouble">
            <summary>Establecer el shim de SummonerLevel.set_ExpTierMod(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.AllInstances.ExpToNextLevelGet">
            <summary>Establecer el shim de SummonerLevel.get_ExpToNextLevel()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.AllInstances.ExpToNextLevelSetDouble">
            <summary>Establecer el shim de SummonerLevel.set_ExpToNextLevel(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.AllInstances.GrantRpGet">
            <summary>Establecer el shim de SummonerLevel.get_GrantRp()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.AllInstances.GrantRpSetDouble">
            <summary>Establecer el shim de SummonerLevel.set_GrantRp(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.AllInstances.InfTierModGet">
            <summary>Establecer el shim de SummonerLevel.get_InfTierMod()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.AllInstances.InfTierModSetDouble">
            <summary>Establecer el shim de SummonerLevel.set_InfTierMod(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.AllInstances.LevelGet">
            <summary>Establecer el shim de SummonerLevel.get_Level()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.AllInstances.LevelSetDouble">
            <summary>Establecer el shim de SummonerLevel.set_Level(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.AllInstances.SummonerTierGet">
            <summary>Establecer el shim de SummonerLevel.get_SummonerTier()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.AllInstances.SummonerTierSetDouble">
            <summary>Establecer el shim de SummonerLevel.set_SummonerTier(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevel.AllInstances.TypeNameGet">
            <summary>Establecer el shim de SummonerLevel.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevelAndPoints">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Summoner.SummonerLevelAndPoints</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevelAndPoints.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevelAndPoints.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.SummonerLevelAndPoints)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevelAndPoints.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevelAndPoints.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevelAndPoints.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevelAndPoints.Constructor">
            <summary>Establecer el shim de SummonerLevelAndPoints.SummonerLevelAndPoints()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevelAndPoints.ConstructorSummonerLevelAndPointsCallback">
            <summary>Establecer el shim de SummonerLevelAndPoints.SummonerLevelAndPoints(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevelAndPoints.ConstructorTypedObject">
            <summary>Establecer el shim de SummonerLevelAndPoints.SummonerLevelAndPoints(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevelAndPoints.DoCallbackTypedObject">
            <summary>Establecer el shim de SummonerLevelAndPoints.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevelAndPoints.ExpPointsGet">
            <summary>Establecer el shim de SummonerLevelAndPoints.get_ExpPoints()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevelAndPoints.ExpPointsSetDouble">
            <summary>Establecer el shim de SummonerLevelAndPoints.set_ExpPoints(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevelAndPoints.InfPointsGet">
            <summary>Establecer el shim de SummonerLevelAndPoints.get_InfPoints()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevelAndPoints.InfPointsSetDouble">
            <summary>Establecer el shim de SummonerLevelAndPoints.set_InfPoints(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevelAndPoints.SummonerIdGet">
            <summary>Establecer el shim de SummonerLevelAndPoints.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevelAndPoints.SummonerIdSetDouble">
            <summary>Establecer el shim de SummonerLevelAndPoints.set_SummonerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevelAndPoints.SummonerLevelGet">
            <summary>Establecer el shim de SummonerLevelAndPoints.get_SummonerLevel()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevelAndPoints.SummonerLevelSetDouble">
            <summary>Establecer el shim de SummonerLevelAndPoints.set_SummonerLevel(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevelAndPoints.TypeNameGet">
            <summary>Establecer el shim de SummonerLevelAndPoints.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevelAndPoints.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevelAndPoints.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de SummonerLevelAndPoints.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevelAndPoints.AllInstances.ExpPointsGet">
            <summary>Establecer el shim de SummonerLevelAndPoints.get_ExpPoints()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevelAndPoints.AllInstances.ExpPointsSetDouble">
            <summary>Establecer el shim de SummonerLevelAndPoints.set_ExpPoints(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevelAndPoints.AllInstances.InfPointsGet">
            <summary>Establecer el shim de SummonerLevelAndPoints.get_InfPoints()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevelAndPoints.AllInstances.InfPointsSetDouble">
            <summary>Establecer el shim de SummonerLevelAndPoints.set_InfPoints(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevelAndPoints.AllInstances.SummonerIdGet">
            <summary>Establecer el shim de SummonerLevelAndPoints.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevelAndPoints.AllInstances.SummonerIdSetDouble">
            <summary>Establecer el shim de SummonerLevelAndPoints.set_SummonerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevelAndPoints.AllInstances.SummonerLevelGet">
            <summary>Establecer el shim de SummonerLevelAndPoints.get_SummonerLevel()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevelAndPoints.AllInstances.SummonerLevelSetDouble">
            <summary>Establecer el shim de SummonerLevelAndPoints.set_SummonerLevel(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerLevelAndPoints.AllInstances.TypeNameGet">
            <summary>Establecer el shim de SummonerLevelAndPoints.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerTalentsAndPoints">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Summoner.SummonerTalentsAndPoints</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerTalentsAndPoints.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerTalentsAndPoints.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.SummonerTalentsAndPoints)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerTalentsAndPoints.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerTalentsAndPoints.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerTalentsAndPoints.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerTalentsAndPoints.Constructor">
            <summary>Establecer el shim de SummonerTalentsAndPoints.SummonerTalentsAndPoints()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerTalentsAndPoints.ConstructorSummonerTalentsAndPointsCallback">
            <summary>Establecer el shim de SummonerTalentsAndPoints.SummonerTalentsAndPoints(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerTalentsAndPoints.ConstructorTypedObject">
            <summary>Establecer el shim de SummonerTalentsAndPoints.SummonerTalentsAndPoints(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerTalentsAndPoints.CreateDateGet">
            <summary>Establecer el shim de SummonerTalentsAndPoints.get_CreateDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerTalentsAndPoints.CreateDateSetDateTime">
            <summary>Establecer el shim de SummonerTalentsAndPoints.set_CreateDate(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerTalentsAndPoints.DoCallbackTypedObject">
            <summary>Establecer el shim de SummonerTalentsAndPoints.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerTalentsAndPoints.ModifyDateGet">
            <summary>Establecer el shim de SummonerTalentsAndPoints.get_ModifyDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerTalentsAndPoints.ModifyDateSetDateTime">
            <summary>Establecer el shim de SummonerTalentsAndPoints.set_ModifyDate(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerTalentsAndPoints.SummonerIdGet">
            <summary>Establecer el shim de SummonerTalentsAndPoints.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerTalentsAndPoints.SummonerIdSetDouble">
            <summary>Establecer el shim de SummonerTalentsAndPoints.set_SummonerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerTalentsAndPoints.TalentPointsGet">
            <summary>Establecer el shim de SummonerTalentsAndPoints.get_TalentPoints()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerTalentsAndPoints.TalentPointsSetInt32">
            <summary>Establecer el shim de SummonerTalentsAndPoints.set_TalentPoints(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerTalentsAndPoints.TypeNameGet">
            <summary>Establecer el shim de SummonerTalentsAndPoints.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerTalentsAndPoints.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerTalentsAndPoints.AllInstances.CreateDateGet">
            <summary>Establecer el shim de SummonerTalentsAndPoints.get_CreateDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerTalentsAndPoints.AllInstances.CreateDateSetDateTime">
            <summary>Establecer el shim de SummonerTalentsAndPoints.set_CreateDate(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerTalentsAndPoints.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de SummonerTalentsAndPoints.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerTalentsAndPoints.AllInstances.ModifyDateGet">
            <summary>Establecer el shim de SummonerTalentsAndPoints.get_ModifyDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerTalentsAndPoints.AllInstances.ModifyDateSetDateTime">
            <summary>Establecer el shim de SummonerTalentsAndPoints.set_ModifyDate(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerTalentsAndPoints.AllInstances.SummonerIdGet">
            <summary>Establecer el shim de SummonerTalentsAndPoints.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerTalentsAndPoints.AllInstances.SummonerIdSetDouble">
            <summary>Establecer el shim de SummonerTalentsAndPoints.set_SummonerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerTalentsAndPoints.AllInstances.TalentPointsGet">
            <summary>Establecer el shim de SummonerTalentsAndPoints.get_TalentPoints()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerTalentsAndPoints.AllInstances.TalentPointsSetInt32">
            <summary>Establecer el shim de SummonerTalentsAndPoints.set_TalentPoints(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimSummonerTalentsAndPoints.AllInstances.TypeNameGet">
            <summary>Establecer el shim de SummonerTalentsAndPoints.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Summoner.Talent</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.Talent)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.Constructor">
            <summary>Establecer el shim de Talent.Talent()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.ConstructorTalentCallback">
            <summary>Establecer el shim de Talent.Talent(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.ConstructorTypedObject">
            <summary>Establecer el shim de Talent.Talent(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.DoCallbackTypedObject">
            <summary>Establecer el shim de Talent.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.GameCodeGet">
            <summary>Establecer el shim de Talent.get_GameCode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.GameCodeSetInt32">
            <summary>Establecer el shim de Talent.set_GameCode(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.IndexGet">
            <summary>Establecer el shim de Talent.get_Index()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.IndexSetInt32">
            <summary>Establecer el shim de Talent.set_Index(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.Level1DescGet">
            <summary>Establecer el shim de Talent.get_Level1Desc()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.Level1DescSetString">
            <summary>Establecer el shim de Talent.set_Level1Desc(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.Level2DescGet">
            <summary>Establecer el shim de Talent.get_Level2Desc()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.Level2DescSetString">
            <summary>Establecer el shim de Talent.set_Level2Desc(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.Level3DescGet">
            <summary>Establecer el shim de Talent.get_Level3Desc()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.Level3DescSetString">
            <summary>Establecer el shim de Talent.set_Level3Desc(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.Level4DescGet">
            <summary>Establecer el shim de Talent.get_Level4Desc()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.Level4DescSetString">
            <summary>Establecer el shim de Talent.set_Level4Desc(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.Level5DescGet">
            <summary>Establecer el shim de Talent.get_Level5Desc()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.Level5DescSetString">
            <summary>Establecer el shim de Talent.set_Level5Desc(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.MaxRankGet">
            <summary>Establecer el shim de Talent.get_MaxRank()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.MaxRankSetInt32">
            <summary>Establecer el shim de Talent.set_MaxRank(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.MinLevelGet">
            <summary>Establecer el shim de Talent.get_MinLevel()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.MinLevelSetInt32">
            <summary>Establecer el shim de Talent.set_MinLevel(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.MinTierGet">
            <summary>Establecer el shim de Talent.get_MinTier()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.MinTierSetInt32">
            <summary>Establecer el shim de Talent.set_MinTier(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.NameGet">
            <summary>Establecer el shim de Talent.get_Name()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.NameSetString">
            <summary>Establecer el shim de Talent.set_Name(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.PrereqTalentGameCodeGet">
            <summary>Establecer el shim de Talent.get_PrereqTalentGameCode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.PrereqTalentGameCodeSetObject">
            <summary>Establecer el shim de Talent.set_PrereqTalentGameCode(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.TalentGroupIdGet">
            <summary>Establecer el shim de Talent.get_TalentGroupId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.TalentGroupIdSetInt32">
            <summary>Establecer el shim de Talent.set_TalentGroupId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.TalentRowIdGet">
            <summary>Establecer el shim de Talent.get_TalentRowId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.TalentRowIdSetInt32">
            <summary>Establecer el shim de Talent.set_TalentRowId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.TltIdGet">
            <summary>Establecer el shim de Talent.get_TltId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.TltIdSetInt32">
            <summary>Establecer el shim de Talent.set_TltId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.TypeNameGet">
            <summary>Establecer el shim de Talent.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de Talent.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.AllInstances.GameCodeGet">
            <summary>Establecer el shim de Talent.get_GameCode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.AllInstances.GameCodeSetInt32">
            <summary>Establecer el shim de Talent.set_GameCode(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.AllInstances.IndexGet">
            <summary>Establecer el shim de Talent.get_Index()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.AllInstances.IndexSetInt32">
            <summary>Establecer el shim de Talent.set_Index(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.AllInstances.Level1DescGet">
            <summary>Establecer el shim de Talent.get_Level1Desc()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.AllInstances.Level1DescSetString">
            <summary>Establecer el shim de Talent.set_Level1Desc(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.AllInstances.Level2DescGet">
            <summary>Establecer el shim de Talent.get_Level2Desc()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.AllInstances.Level2DescSetString">
            <summary>Establecer el shim de Talent.set_Level2Desc(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.AllInstances.Level3DescGet">
            <summary>Establecer el shim de Talent.get_Level3Desc()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.AllInstances.Level3DescSetString">
            <summary>Establecer el shim de Talent.set_Level3Desc(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.AllInstances.Level4DescGet">
            <summary>Establecer el shim de Talent.get_Level4Desc()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.AllInstances.Level4DescSetString">
            <summary>Establecer el shim de Talent.set_Level4Desc(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.AllInstances.Level5DescGet">
            <summary>Establecer el shim de Talent.get_Level5Desc()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.AllInstances.Level5DescSetString">
            <summary>Establecer el shim de Talent.set_Level5Desc(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.AllInstances.MaxRankGet">
            <summary>Establecer el shim de Talent.get_MaxRank()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.AllInstances.MaxRankSetInt32">
            <summary>Establecer el shim de Talent.set_MaxRank(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.AllInstances.MinLevelGet">
            <summary>Establecer el shim de Talent.get_MinLevel()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.AllInstances.MinLevelSetInt32">
            <summary>Establecer el shim de Talent.set_MinLevel(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.AllInstances.MinTierGet">
            <summary>Establecer el shim de Talent.get_MinTier()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.AllInstances.MinTierSetInt32">
            <summary>Establecer el shim de Talent.set_MinTier(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.AllInstances.NameGet">
            <summary>Establecer el shim de Talent.get_Name()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.AllInstances.NameSetString">
            <summary>Establecer el shim de Talent.set_Name(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.AllInstances.PrereqTalentGameCodeGet">
            <summary>Establecer el shim de Talent.get_PrereqTalentGameCode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.AllInstances.PrereqTalentGameCodeSetObject">
            <summary>Establecer el shim de Talent.set_PrereqTalentGameCode(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.AllInstances.TalentGroupIdGet">
            <summary>Establecer el shim de Talent.get_TalentGroupId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.AllInstances.TalentGroupIdSetInt32">
            <summary>Establecer el shim de Talent.set_TalentGroupId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.AllInstances.TalentRowIdGet">
            <summary>Establecer el shim de Talent.get_TalentRowId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.AllInstances.TalentRowIdSetInt32">
            <summary>Establecer el shim de Talent.set_TalentRowId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.AllInstances.TltIdGet">
            <summary>Establecer el shim de Talent.get_TltId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.AllInstances.TltIdSetInt32">
            <summary>Establecer el shim de Talent.set_TltId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalent.AllInstances.TypeNameGet">
            <summary>Establecer el shim de Talent.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentGroup">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Summoner.TalentGroup</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentGroup.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentGroup.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.TalentGroup)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentGroup.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentGroup.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentGroup.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentGroup.Constructor">
            <summary>Establecer el shim de TalentGroup.TalentGroup()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentGroup.ConstructorTalentGroupCallback">
            <summary>Establecer el shim de TalentGroup.TalentGroup(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentGroup.ConstructorTypedObject">
            <summary>Establecer el shim de TalentGroup.TalentGroup(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentGroup.DoCallbackTypedObject">
            <summary>Establecer el shim de TalentGroup.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentGroup.IndexGet">
            <summary>Establecer el shim de TalentGroup.get_Index()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentGroup.IndexSetInt32">
            <summary>Establecer el shim de TalentGroup.set_Index(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentGroup.NameGet">
            <summary>Establecer el shim de TalentGroup.get_Name()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentGroup.NameSetString">
            <summary>Establecer el shim de TalentGroup.set_Name(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentGroup.TalentRowsGet">
            <summary>Establecer el shim de TalentGroup.get_TalentRows()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentGroup.TalentRowsSetListOfTalentRow">
            <summary>Establecer el shim de TalentGroup.set_TalentRows(List`1&lt;TalentRow&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentGroup.TltGroupIdGet">
            <summary>Establecer el shim de TalentGroup.get_TltGroupId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentGroup.TltGroupIdSetInt32">
            <summary>Establecer el shim de TalentGroup.set_TltGroupId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentGroup.TypeNameGet">
            <summary>Establecer el shim de TalentGroup.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentGroup.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentGroup.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de TalentGroup.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentGroup.AllInstances.IndexGet">
            <summary>Establecer el shim de TalentGroup.get_Index()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentGroup.AllInstances.IndexSetInt32">
            <summary>Establecer el shim de TalentGroup.set_Index(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentGroup.AllInstances.NameGet">
            <summary>Establecer el shim de TalentGroup.get_Name()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentGroup.AllInstances.NameSetString">
            <summary>Establecer el shim de TalentGroup.set_Name(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentGroup.AllInstances.TalentRowsGet">
            <summary>Establecer el shim de TalentGroup.get_TalentRows()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentGroup.AllInstances.TalentRowsSetListOfTalentRow">
            <summary>Establecer el shim de TalentGroup.set_TalentRows(List`1&lt;TalentRow&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentGroup.AllInstances.TltGroupIdGet">
            <summary>Establecer el shim de TalentGroup.get_TltGroupId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentGroup.AllInstances.TltGroupIdSetInt32">
            <summary>Establecer el shim de TalentGroup.set_TltGroupId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentGroup.AllInstances.TypeNameGet">
            <summary>Establecer el shim de TalentGroup.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentRow">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Summoner.TalentRow</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentRow.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentRow.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.TalentRow)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentRow.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentRow.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentRow.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentRow.Constructor">
            <summary>Establecer el shim de TalentRow.TalentRow()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentRow.ConstructorTalentRowCallback">
            <summary>Establecer el shim de TalentRow.TalentRow(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentRow.ConstructorTypedObject">
            <summary>Establecer el shim de TalentRow.TalentRow(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentRow.DoCallbackTypedObject">
            <summary>Establecer el shim de TalentRow.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentRow.IndexGet">
            <summary>Establecer el shim de TalentRow.get_Index()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentRow.IndexSetInt32">
            <summary>Establecer el shim de TalentRow.set_Index(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentRow.PointsToActivateGet">
            <summary>Establecer el shim de TalentRow.get_PointsToActivate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentRow.PointsToActivateSetInt32">
            <summary>Establecer el shim de TalentRow.set_PointsToActivate(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentRow.TalentsGet">
            <summary>Establecer el shim de TalentRow.get_Talents()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentRow.TalentsSetListOfTalent">
            <summary>Establecer el shim de TalentRow.set_Talents(List`1&lt;Talent&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentRow.TltGroupIdGet">
            <summary>Establecer el shim de TalentRow.get_TltGroupId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentRow.TltGroupIdSetInt32">
            <summary>Establecer el shim de TalentRow.set_TltGroupId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentRow.TltRowIdGet">
            <summary>Establecer el shim de TalentRow.get_TltRowId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentRow.TltRowIdSetInt32">
            <summary>Establecer el shim de TalentRow.set_TltRowId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentRow.TypeNameGet">
            <summary>Establecer el shim de TalentRow.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentRow.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentRow.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de TalentRow.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentRow.AllInstances.IndexGet">
            <summary>Establecer el shim de TalentRow.get_Index()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentRow.AllInstances.IndexSetInt32">
            <summary>Establecer el shim de TalentRow.set_Index(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentRow.AllInstances.PointsToActivateGet">
            <summary>Establecer el shim de TalentRow.get_PointsToActivate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentRow.AllInstances.PointsToActivateSetInt32">
            <summary>Establecer el shim de TalentRow.set_PointsToActivate(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentRow.AllInstances.TalentsGet">
            <summary>Establecer el shim de TalentRow.get_Talents()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentRow.AllInstances.TalentsSetListOfTalent">
            <summary>Establecer el shim de TalentRow.set_Talents(List`1&lt;Talent&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentRow.AllInstances.TltGroupIdGet">
            <summary>Establecer el shim de TalentRow.get_TltGroupId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentRow.AllInstances.TltGroupIdSetInt32">
            <summary>Establecer el shim de TalentRow.set_TltGroupId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentRow.AllInstances.TltRowIdGet">
            <summary>Establecer el shim de TalentRow.get_TltRowId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentRow.AllInstances.TltRowIdSetInt32">
            <summary>Establecer el shim de TalentRow.set_TltRowId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.ShimTalentRow.AllInstances.TypeNameGet">
            <summary>Establecer el shim de TalentRow.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubAllPublicSummonerDataDTO">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Summoner.AllPublicSummonerDataDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubAllPublicSummonerDataDTO.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubAllPublicSummonerDataDTO.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubAllPublicSummonerDataDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.AllPublicSummonerDataDTO.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubAllPublicSummonerDataDTO.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de AllPublicSummonerDataDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubAllPublicSummonerDataDTO.DoCallbackTypedObject">
            <summary>Establecer el stub de AllPublicSummonerDataDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubAllPublicSummonerDataDTO.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubAllPublicSummonerDataDTO</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubAllPublicSummonerDataDTO.TypeNameGet">
            <summary>Establecer el stub de AllPublicSummonerDataDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubAllPublicSummonerDataDTO.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubAllPublicSummonerDataDTO.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubAllPublicSummonerDataDTO.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubAllPublicSummonerDataDTO.TypeName">
            <summary>Establecer el stub de AllPublicSummonerDataDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubAllSummonerData">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Summoner.AllSummonerData</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubAllSummonerData.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubAllSummonerData.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubAllSummonerData.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.AllSummonerData.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubAllSummonerData.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de AllSummonerData.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubAllSummonerData.DoCallbackTypedObject">
            <summary>Establecer el stub de AllSummonerData.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubAllSummonerData.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubAllSummonerData</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubAllSummonerData.TypeNameGet">
            <summary>Establecer el stub de AllSummonerData.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubAllSummonerData.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubAllSummonerData.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubAllSummonerData.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubAllSummonerData.TypeName">
            <summary>Establecer el stub de AllSummonerData.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubBasePublicSummonerDTO">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Summoner.BasePublicSummonerDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubBasePublicSummonerDTO.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubBasePublicSummonerDTO.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubBasePublicSummonerDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.BasePublicSummonerDTO.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubBasePublicSummonerDTO.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de BasePublicSummonerDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubBasePublicSummonerDTO.DoCallbackTypedObject">
            <summary>Establecer el stub de BasePublicSummonerDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubBasePublicSummonerDTO.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubBasePublicSummonerDTO</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubBasePublicSummonerDTO.TypeNameGet">
            <summary>Establecer el stub de BasePublicSummonerDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubBasePublicSummonerDTO.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubBasePublicSummonerDTO.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubBasePublicSummonerDTO.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubBasePublicSummonerDTO.TypeName">
            <summary>Establecer el stub de BasePublicSummonerDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubPublicSummoner">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Summoner.PublicSummoner</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubPublicSummoner.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubPublicSummoner.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubPublicSummoner.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.PublicSummoner.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubPublicSummoner.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de PublicSummoner.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubPublicSummoner.DoCallbackTypedObject">
            <summary>Establecer el stub de PublicSummoner.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubPublicSummoner.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPublicSummoner</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubPublicSummoner.TypeNameGet">
            <summary>Establecer el stub de PublicSummoner.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubPublicSummoner.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubPublicSummoner.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubPublicSummoner.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubPublicSummoner.TypeName">
            <summary>Establecer el stub de PublicSummoner.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubRuneSlot">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Summoner.RuneSlot</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubRuneSlot.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubRuneSlot.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubRuneSlot.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.RuneSlot.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubRuneSlot.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de RuneSlot.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubRuneSlot.DoCallbackTypedObject">
            <summary>Establecer el stub de RuneSlot.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubRuneSlot.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubRuneSlot</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubRuneSlot.TypeNameGet">
            <summary>Establecer el stub de RuneSlot.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubRuneSlot.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubRuneSlot.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubRuneSlot.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubRuneSlot.TypeName">
            <summary>Establecer el stub de RuneSlot.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummoner">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Summoner.Summoner</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummoner.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummoner.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummoner.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.Summoner.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummoner.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de Summoner.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummoner.DoCallbackTypedObject">
            <summary>Establecer el stub de Summoner.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummoner.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubSummoner</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummoner.TypeNameGet">
            <summary>Establecer el stub de Summoner.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummoner.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummoner.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummoner.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummoner.TypeName">
            <summary>Establecer el stub de Summoner.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerCatalog">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Summoner.SummonerCatalog</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerCatalog.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerCatalog.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerCatalog.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.SummonerCatalog.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerCatalog.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de SummonerCatalog.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerCatalog.DoCallbackTypedObject">
            <summary>Establecer el stub de SummonerCatalog.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerCatalog.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubSummonerCatalog</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerCatalog.TypeNameGet">
            <summary>Establecer el stub de SummonerCatalog.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerCatalog.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerCatalog.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerCatalog.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerCatalog.TypeName">
            <summary>Establecer el stub de SummonerCatalog.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerDefaultSpells">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Summoner.SummonerDefaultSpells</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerDefaultSpells.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerDefaultSpells.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerDefaultSpells.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.SummonerDefaultSpells.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerDefaultSpells.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de SummonerDefaultSpells.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerDefaultSpells.DoCallbackTypedObject">
            <summary>Establecer el stub de SummonerDefaultSpells.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerDefaultSpells.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubSummonerDefaultSpells</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerDefaultSpells.TypeNameGet">
            <summary>Establecer el stub de SummonerDefaultSpells.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerDefaultSpells.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerDefaultSpells.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerDefaultSpells.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerDefaultSpells.TypeName">
            <summary>Establecer el stub de SummonerDefaultSpells.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerLevel">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Summoner.SummonerLevel</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerLevel.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerLevel.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerLevel.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.SummonerLevel.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerLevel.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de SummonerLevel.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerLevel.DoCallbackTypedObject">
            <summary>Establecer el stub de SummonerLevel.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerLevel.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubSummonerLevel</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerLevel.TypeNameGet">
            <summary>Establecer el stub de SummonerLevel.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerLevel.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerLevel.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerLevel.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerLevel.TypeName">
            <summary>Establecer el stub de SummonerLevel.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerLevelAndPoints">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Summoner.SummonerLevelAndPoints</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerLevelAndPoints.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerLevelAndPoints.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerLevelAndPoints.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.SummonerLevelAndPoints.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerLevelAndPoints.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de SummonerLevelAndPoints.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerLevelAndPoints.DoCallbackTypedObject">
            <summary>Establecer el stub de SummonerLevelAndPoints.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerLevelAndPoints.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubSummonerLevelAndPoints</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerLevelAndPoints.TypeNameGet">
            <summary>Establecer el stub de SummonerLevelAndPoints.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerLevelAndPoints.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerLevelAndPoints.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerLevelAndPoints.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerLevelAndPoints.TypeName">
            <summary>Establecer el stub de SummonerLevelAndPoints.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerTalentsAndPoints">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Summoner.SummonerTalentsAndPoints</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerTalentsAndPoints.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerTalentsAndPoints.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerTalentsAndPoints.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.SummonerTalentsAndPoints.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerTalentsAndPoints.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de SummonerTalentsAndPoints.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerTalentsAndPoints.DoCallbackTypedObject">
            <summary>Establecer el stub de SummonerTalentsAndPoints.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerTalentsAndPoints.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubSummonerTalentsAndPoints</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerTalentsAndPoints.TypeNameGet">
            <summary>Establecer el stub de SummonerTalentsAndPoints.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerTalentsAndPoints.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerTalentsAndPoints.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerTalentsAndPoints.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubSummonerTalentsAndPoints.TypeName">
            <summary>Establecer el stub de SummonerTalentsAndPoints.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubTalent">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Summoner.Talent</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubTalent.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubTalent.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubTalent.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.Talent.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubTalent.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de Talent.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubTalent.DoCallbackTypedObject">
            <summary>Establecer el stub de Talent.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubTalent.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubTalent</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubTalent.TypeNameGet">
            <summary>Establecer el stub de Talent.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubTalent.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubTalent.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubTalent.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubTalent.TypeName">
            <summary>Establecer el stub de Talent.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubTalentGroup">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Summoner.TalentGroup</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubTalentGroup.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubTalentGroup.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubTalentGroup.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.TalentGroup.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubTalentGroup.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de TalentGroup.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubTalentGroup.DoCallbackTypedObject">
            <summary>Establecer el stub de TalentGroup.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubTalentGroup.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubTalentGroup</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubTalentGroup.TypeNameGet">
            <summary>Establecer el stub de TalentGroup.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubTalentGroup.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubTalentGroup.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubTalentGroup.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubTalentGroup.TypeName">
            <summary>Establecer el stub de TalentGroup.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubTalentRow">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Summoner.TalentRow</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubTalentRow.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubTalentRow.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubTalentRow.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.TalentRow.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubTalentRow.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de TalentRow.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubTalentRow.DoCallbackTypedObject">
            <summary>Establecer el stub de TalentRow.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubTalentRow.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubTalentRow</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubTalentRow.TypeNameGet">
            <summary>Establecer el stub de TalentRow.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubTalentRow.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubTalentRow.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubTalentRow.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Fakes.StubTalentRow.TypeName">
            <summary>Establecer el stub de TalentRow.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Icon.Fakes.ShimSummonerIconInventoryDTO">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Summoner.Icon.SummonerIconInventoryDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Icon.Fakes.ShimSummonerIconInventoryDTO.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Icon.Fakes.ShimSummonerIconInventoryDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.Icon.SummonerIconInventoryDTO)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Icon.Fakes.ShimSummonerIconInventoryDTO.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Icon.Fakes.ShimSummonerIconInventoryDTO.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Icon.Fakes.ShimSummonerIconInventoryDTO.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Icon.Fakes.ShimSummonerIconInventoryDTO.Constructor">
            <summary>Establecer el shim de SummonerIconInventoryDTO.SummonerIconInventoryDTO()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Icon.Fakes.ShimSummonerIconInventoryDTO.ConstructorSummonerIconInventoryDTOCallback">
            <summary>Establecer el shim de SummonerIconInventoryDTO.SummonerIconInventoryDTO(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Icon.Fakes.ShimSummonerIconInventoryDTO.ConstructorTypedObject">
            <summary>Establecer el shim de SummonerIconInventoryDTO.SummonerIconInventoryDTO(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Icon.Fakes.ShimSummonerIconInventoryDTO.DoCallbackTypedObject">
            <summary>Establecer el shim de SummonerIconInventoryDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Icon.Fakes.ShimSummonerIconInventoryDTO.SummonerIconsGet">
            <summary>Establecer el shim de SummonerIconInventoryDTO.get_SummonerIcons()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Icon.Fakes.ShimSummonerIconInventoryDTO.SummonerIconsSetListOfIcon">
            <summary>Establecer el shim de SummonerIconInventoryDTO.set_SummonerIcons(List`1&lt;Icon&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Icon.Fakes.ShimSummonerIconInventoryDTO.SummonerIdGet">
            <summary>Establecer el shim de SummonerIconInventoryDTO.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Icon.Fakes.ShimSummonerIconInventoryDTO.SummonerIdSetDouble">
            <summary>Establecer el shim de SummonerIconInventoryDTO.set_SummonerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Icon.Fakes.ShimSummonerIconInventoryDTO.TypeNameGet">
            <summary>Establecer el shim de SummonerIconInventoryDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Icon.Fakes.ShimSummonerIconInventoryDTO.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Icon.Fakes.ShimSummonerIconInventoryDTO.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de SummonerIconInventoryDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Icon.Fakes.ShimSummonerIconInventoryDTO.AllInstances.SummonerIconsGet">
            <summary>Establecer el shim de SummonerIconInventoryDTO.get_SummonerIcons()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Icon.Fakes.ShimSummonerIconInventoryDTO.AllInstances.SummonerIconsSetListOfIcon">
            <summary>Establecer el shim de SummonerIconInventoryDTO.set_SummonerIcons(List`1&lt;Icon&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Icon.Fakes.ShimSummonerIconInventoryDTO.AllInstances.SummonerIdGet">
            <summary>Establecer el shim de SummonerIconInventoryDTO.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Icon.Fakes.ShimSummonerIconInventoryDTO.AllInstances.SummonerIdSetDouble">
            <summary>Establecer el shim de SummonerIconInventoryDTO.set_SummonerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Icon.Fakes.ShimSummonerIconInventoryDTO.AllInstances.TypeNameGet">
            <summary>Establecer el shim de SummonerIconInventoryDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Icon.Fakes.StubSummonerIconInventoryDTO">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Summoner.Icon.SummonerIconInventoryDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Icon.Fakes.StubSummonerIconInventoryDTO.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Icon.Fakes.StubSummonerIconInventoryDTO.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Icon.Fakes.StubSummonerIconInventoryDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.Icon.SummonerIconInventoryDTO.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Icon.Fakes.StubSummonerIconInventoryDTO.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de SummonerIconInventoryDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Icon.Fakes.StubSummonerIconInventoryDTO.DoCallbackTypedObject">
            <summary>Establecer el stub de SummonerIconInventoryDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Icon.Fakes.StubSummonerIconInventoryDTO.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubSummonerIconInventoryDTO</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Icon.Fakes.StubSummonerIconInventoryDTO.TypeNameGet">
            <summary>Establecer el stub de SummonerIconInventoryDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Icon.Fakes.StubSummonerIconInventoryDTO.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Icon.Fakes.StubSummonerIconInventoryDTO.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Icon.Fakes.StubSummonerIconInventoryDTO.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Icon.Fakes.StubSummonerIconInventoryDTO.TypeName">
            <summary>Establecer el stub de SummonerIconInventoryDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookDTO">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.MasteryBookDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookDTO.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.MasteryBookDTO)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookDTO.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookDTO.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookDTO.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookDTO.BookPagesGet">
            <summary>Establecer el shim de MasteryBookDTO.get_BookPages()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookDTO.BookPagesJsonGet">
            <summary>Establecer el shim de MasteryBookDTO.get_BookPagesJson()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookDTO.BookPagesJsonSetObject">
            <summary>Establecer el shim de MasteryBookDTO.set_BookPagesJson(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookDTO.BookPagesSetListOfMasteryBookPageDTO">
            <summary>Establecer el shim de MasteryBookDTO.set_BookPages(List`1&lt;MasteryBookPageDTO&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookDTO.Constructor">
            <summary>Establecer el shim de MasteryBookDTO.MasteryBookDTO()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookDTO.ConstructorMasteryBookDTOCallback">
            <summary>Establecer el shim de MasteryBookDTO.MasteryBookDTO(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookDTO.ConstructorTypedObject">
            <summary>Establecer el shim de MasteryBookDTO.MasteryBookDTO(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookDTO.DateStringGet">
            <summary>Establecer el shim de MasteryBookDTO.get_DateString()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookDTO.DateStringSetString">
            <summary>Establecer el shim de MasteryBookDTO.set_DateString(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookDTO.DoCallbackTypedObject">
            <summary>Establecer el shim de MasteryBookDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookDTO.SummonerIdGet">
            <summary>Establecer el shim de MasteryBookDTO.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookDTO.SummonerIdSetDouble">
            <summary>Establecer el shim de MasteryBookDTO.set_SummonerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookDTO.TypeNameGet">
            <summary>Establecer el shim de MasteryBookDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookDTO.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookDTO.AllInstances.BookPagesGet">
            <summary>Establecer el shim de MasteryBookDTO.get_BookPages()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookDTO.AllInstances.BookPagesJsonGet">
            <summary>Establecer el shim de MasteryBookDTO.get_BookPagesJson()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookDTO.AllInstances.BookPagesJsonSetObject">
            <summary>Establecer el shim de MasteryBookDTO.set_BookPagesJson(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookDTO.AllInstances.BookPagesSetListOfMasteryBookPageDTO">
            <summary>Establecer el shim de MasteryBookDTO.set_BookPages(List`1&lt;MasteryBookPageDTO&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookDTO.AllInstances.DateStringGet">
            <summary>Establecer el shim de MasteryBookDTO.get_DateString()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookDTO.AllInstances.DateStringSetString">
            <summary>Establecer el shim de MasteryBookDTO.set_DateString(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookDTO.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de MasteryBookDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookDTO.AllInstances.SummonerIdGet">
            <summary>Establecer el shim de MasteryBookDTO.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookDTO.AllInstances.SummonerIdSetDouble">
            <summary>Establecer el shim de MasteryBookDTO.set_SummonerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookDTO.AllInstances.TypeNameGet">
            <summary>Establecer el shim de MasteryBookDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookPageDTO">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.MasteryBookPageDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookPageDTO.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookPageDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.MasteryBookPageDTO)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookPageDTO.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookPageDTO.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookPageDTO.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookPageDTO.Constructor">
            <summary>Establecer el shim de MasteryBookPageDTO.MasteryBookPageDTO()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookPageDTO.ConstructorMasteryBookPageDTOCallback">
            <summary>Establecer el shim de MasteryBookPageDTO.MasteryBookPageDTO(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookPageDTO.ConstructorTypedObject">
            <summary>Establecer el shim de MasteryBookPageDTO.MasteryBookPageDTO(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookPageDTO.CreateDateGet">
            <summary>Establecer el shim de MasteryBookPageDTO.get_CreateDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookPageDTO.CreateDateSetObject">
            <summary>Establecer el shim de MasteryBookPageDTO.set_CreateDate(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookPageDTO.CurrentGet">
            <summary>Establecer el shim de MasteryBookPageDTO.get_Current()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookPageDTO.CurrentSetBoolean">
            <summary>Establecer el shim de MasteryBookPageDTO.set_Current(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookPageDTO.DoCallbackTypedObject">
            <summary>Establecer el shim de MasteryBookPageDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookPageDTO.NameGet">
            <summary>Establecer el shim de MasteryBookPageDTO.get_Name()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookPageDTO.NameSetString">
            <summary>Establecer el shim de MasteryBookPageDTO.set_Name(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookPageDTO.PageIdGet">
            <summary>Establecer el shim de MasteryBookPageDTO.get_PageId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookPageDTO.PageIdSetDouble">
            <summary>Establecer el shim de MasteryBookPageDTO.set_PageId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookPageDTO.SummonerIdGet">
            <summary>Establecer el shim de MasteryBookPageDTO.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookPageDTO.SummonerIdSetDouble">
            <summary>Establecer el shim de MasteryBookPageDTO.set_SummonerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookPageDTO.TalentEntriesGet">
            <summary>Establecer el shim de MasteryBookPageDTO.get_TalentEntries()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookPageDTO.TalentEntriesSetListOfTalentEntry">
            <summary>Establecer el shim de MasteryBookPageDTO.set_TalentEntries(List`1&lt;TalentEntry&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookPageDTO.TypeNameGet">
            <summary>Establecer el shim de MasteryBookPageDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookPageDTO.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookPageDTO.AllInstances.CreateDateGet">
            <summary>Establecer el shim de MasteryBookPageDTO.get_CreateDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookPageDTO.AllInstances.CreateDateSetObject">
            <summary>Establecer el shim de MasteryBookPageDTO.set_CreateDate(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookPageDTO.AllInstances.CurrentGet">
            <summary>Establecer el shim de MasteryBookPageDTO.get_Current()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookPageDTO.AllInstances.CurrentSetBoolean">
            <summary>Establecer el shim de MasteryBookPageDTO.set_Current(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookPageDTO.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de MasteryBookPageDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookPageDTO.AllInstances.NameGet">
            <summary>Establecer el shim de MasteryBookPageDTO.get_Name()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookPageDTO.AllInstances.NameSetString">
            <summary>Establecer el shim de MasteryBookPageDTO.set_Name(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookPageDTO.AllInstances.PageIdGet">
            <summary>Establecer el shim de MasteryBookPageDTO.get_PageId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookPageDTO.AllInstances.PageIdSetDouble">
            <summary>Establecer el shim de MasteryBookPageDTO.set_PageId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookPageDTO.AllInstances.SummonerIdGet">
            <summary>Establecer el shim de MasteryBookPageDTO.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookPageDTO.AllInstances.SummonerIdSetDouble">
            <summary>Establecer el shim de MasteryBookPageDTO.set_SummonerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookPageDTO.AllInstances.TalentEntriesGet">
            <summary>Establecer el shim de MasteryBookPageDTO.get_TalentEntries()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookPageDTO.AllInstances.TalentEntriesSetListOfTalentEntry">
            <summary>Establecer el shim de MasteryBookPageDTO.set_TalentEntries(List`1&lt;TalentEntry&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimMasteryBookPageDTO.AllInstances.TypeNameGet">
            <summary>Establecer el shim de MasteryBookPageDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimTalentEntry">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.TalentEntry</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimTalentEntry.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimTalentEntry.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.TalentEntry)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimTalentEntry.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimTalentEntry.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimTalentEntry.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimTalentEntry.Constructor">
            <summary>Establecer el shim de TalentEntry.TalentEntry()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimTalentEntry.ConstructorTalentEntryCallback">
            <summary>Establecer el shim de TalentEntry.TalentEntry(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimTalentEntry.ConstructorTypedObject">
            <summary>Establecer el shim de TalentEntry.TalentEntry(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimTalentEntry.DoCallbackTypedObject">
            <summary>Establecer el shim de TalentEntry.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimTalentEntry.RankGet">
            <summary>Establecer el shim de TalentEntry.get_Rank()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimTalentEntry.RankSetInt32">
            <summary>Establecer el shim de TalentEntry.set_Rank(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimTalentEntry.SummonerIdGet">
            <summary>Establecer el shim de TalentEntry.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimTalentEntry.SummonerIdSetDouble">
            <summary>Establecer el shim de TalentEntry.set_SummonerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimTalentEntry.TalentGet">
            <summary>Establecer el shim de TalentEntry.get_Talent()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimTalentEntry.TalentIdGet">
            <summary>Establecer el shim de TalentEntry.get_TalentId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimTalentEntry.TalentIdSetInt32">
            <summary>Establecer el shim de TalentEntry.set_TalentId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimTalentEntry.TalentSetTalent">
            <summary>Establecer el shim de TalentEntry.set_Talent(Talent value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimTalentEntry.TypeNameGet">
            <summary>Establecer el shim de TalentEntry.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimTalentEntry.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimTalentEntry.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de TalentEntry.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimTalentEntry.AllInstances.RankGet">
            <summary>Establecer el shim de TalentEntry.get_Rank()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimTalentEntry.AllInstances.RankSetInt32">
            <summary>Establecer el shim de TalentEntry.set_Rank(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimTalentEntry.AllInstances.SummonerIdGet">
            <summary>Establecer el shim de TalentEntry.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimTalentEntry.AllInstances.SummonerIdSetDouble">
            <summary>Establecer el shim de TalentEntry.set_SummonerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimTalentEntry.AllInstances.TalentGet">
            <summary>Establecer el shim de TalentEntry.get_Talent()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimTalentEntry.AllInstances.TalentIdGet">
            <summary>Establecer el shim de TalentEntry.get_TalentId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimTalentEntry.AllInstances.TalentIdSetInt32">
            <summary>Establecer el shim de TalentEntry.set_TalentId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimTalentEntry.AllInstances.TalentSetTalent">
            <summary>Establecer el shim de TalentEntry.set_Talent(Talent value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.ShimTalentEntry.AllInstances.TypeNameGet">
            <summary>Establecer el shim de TalentEntry.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.StubMasteryBookDTO">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.MasteryBookDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.StubMasteryBookDTO.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.StubMasteryBookDTO.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.StubMasteryBookDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.MasteryBookDTO.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.StubMasteryBookDTO.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de MasteryBookDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.StubMasteryBookDTO.DoCallbackTypedObject">
            <summary>Establecer el stub de MasteryBookDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.StubMasteryBookDTO.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubMasteryBookDTO</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.StubMasteryBookDTO.TypeNameGet">
            <summary>Establecer el stub de MasteryBookDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.StubMasteryBookDTO.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.StubMasteryBookDTO.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.StubMasteryBookDTO.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.StubMasteryBookDTO.TypeName">
            <summary>Establecer el stub de MasteryBookDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.StubMasteryBookPageDTO">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.MasteryBookPageDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.StubMasteryBookPageDTO.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.StubMasteryBookPageDTO.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.StubMasteryBookPageDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.MasteryBookPageDTO.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.StubMasteryBookPageDTO.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de MasteryBookPageDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.StubMasteryBookPageDTO.DoCallbackTypedObject">
            <summary>Establecer el stub de MasteryBookPageDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.StubMasteryBookPageDTO.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubMasteryBookPageDTO</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.StubMasteryBookPageDTO.TypeNameGet">
            <summary>Establecer el stub de MasteryBookPageDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.StubMasteryBookPageDTO.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.StubMasteryBookPageDTO.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.StubMasteryBookPageDTO.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.StubMasteryBookPageDTO.TypeName">
            <summary>Establecer el stub de MasteryBookPageDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.StubTalentEntry">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.TalentEntry</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.StubTalentEntry.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.StubTalentEntry.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.StubTalentEntry.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.TalentEntry.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.StubTalentEntry.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de TalentEntry.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.StubTalentEntry.DoCallbackTypedObject">
            <summary>Establecer el stub de TalentEntry.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.StubTalentEntry.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubTalentEntry</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.StubTalentEntry.TypeNameGet">
            <summary>Establecer el stub de TalentEntry.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.StubTalentEntry.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.StubTalentEntry.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.StubTalentEntry.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Masterybook.Fakes.StubTalentEntry.TypeName">
            <summary>Establecer el stub de TalentEntry.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRune">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Summoner.Runes.SummonerRune</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRune.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRune.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.Runes.SummonerRune)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRune.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRune.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRune.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRune.Constructor">
            <summary>Establecer el shim de SummonerRune.SummonerRune()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRune.ConstructorSummonerRuneCallback">
            <summary>Establecer el shim de SummonerRune.SummonerRune(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRune.ConstructorTypedObject">
            <summary>Establecer el shim de SummonerRune.SummonerRune(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRune.DoCallbackTypedObject">
            <summary>Establecer el shim de SummonerRune.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRune.PurchaseDateGet">
            <summary>Establecer el shim de SummonerRune.get_PurchaseDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRune.PurchaseDateSetDateTime">
            <summary>Establecer el shim de SummonerRune.set_PurchaseDate(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRune.PurchasedGet">
            <summary>Establecer el shim de SummonerRune.get_Purchased()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRune.PurchasedSetDateTime">
            <summary>Establecer el shim de SummonerRune.set_Purchased(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRune.QuantityGet">
            <summary>Establecer el shim de SummonerRune.get_Quantity()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRune.QuantitySetInt32">
            <summary>Establecer el shim de SummonerRune.set_Quantity(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRune.RuneGet">
            <summary>Establecer el shim de SummonerRune.get_Rune()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRune.RuneIdGet">
            <summary>Establecer el shim de SummonerRune.get_RuneId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRune.RuneIdSetInt32">
            <summary>Establecer el shim de SummonerRune.set_RuneId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRune.RuneSetRune">
            <summary>Establecer el shim de SummonerRune.set_Rune(Rune value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRune.SummonerIdGet">
            <summary>Establecer el shim de SummonerRune.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRune.SummonerIdSetDouble">
            <summary>Establecer el shim de SummonerRune.set_SummonerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRune.TypeNameGet">
            <summary>Establecer el shim de SummonerRune.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRune.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRune.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de SummonerRune.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRune.AllInstances.PurchaseDateGet">
            <summary>Establecer el shim de SummonerRune.get_PurchaseDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRune.AllInstances.PurchaseDateSetDateTime">
            <summary>Establecer el shim de SummonerRune.set_PurchaseDate(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRune.AllInstances.PurchasedGet">
            <summary>Establecer el shim de SummonerRune.get_Purchased()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRune.AllInstances.PurchasedSetDateTime">
            <summary>Establecer el shim de SummonerRune.set_Purchased(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRune.AllInstances.QuantityGet">
            <summary>Establecer el shim de SummonerRune.get_Quantity()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRune.AllInstances.QuantitySetInt32">
            <summary>Establecer el shim de SummonerRune.set_Quantity(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRune.AllInstances.RuneGet">
            <summary>Establecer el shim de SummonerRune.get_Rune()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRune.AllInstances.RuneIdGet">
            <summary>Establecer el shim de SummonerRune.get_RuneId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRune.AllInstances.RuneIdSetInt32">
            <summary>Establecer el shim de SummonerRune.set_RuneId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRune.AllInstances.RuneSetRune">
            <summary>Establecer el shim de SummonerRune.set_Rune(Rune value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRune.AllInstances.SummonerIdGet">
            <summary>Establecer el shim de SummonerRune.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRune.AllInstances.SummonerIdSetDouble">
            <summary>Establecer el shim de SummonerRune.set_SummonerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRune.AllInstances.TypeNameGet">
            <summary>Establecer el shim de SummonerRune.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRuneInventory">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Summoner.Runes.SummonerRuneInventory</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRuneInventory.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRuneInventory.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.Runes.SummonerRuneInventory)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRuneInventory.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRuneInventory.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRuneInventory.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRuneInventory.Constructor">
            <summary>Establecer el shim de SummonerRuneInventory.SummonerRuneInventory()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRuneInventory.ConstructorSummonerRuneInventoryCallback">
            <summary>Establecer el shim de SummonerRuneInventory.SummonerRuneInventory(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRuneInventory.ConstructorTypedObject">
            <summary>Establecer el shim de SummonerRuneInventory.SummonerRuneInventory(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRuneInventory.DateStringGet">
            <summary>Establecer el shim de SummonerRuneInventory.get_DateString()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRuneInventory.DateStringSetString">
            <summary>Establecer el shim de SummonerRuneInventory.set_DateString(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRuneInventory.DoCallbackTypedObject">
            <summary>Establecer el shim de SummonerRuneInventory.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRuneInventory.SummonerIdGet">
            <summary>Establecer el shim de SummonerRuneInventory.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRuneInventory.SummonerIdSetDouble">
            <summary>Establecer el shim de SummonerRuneInventory.set_SummonerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRuneInventory.SummonerRunesGet">
            <summary>Establecer el shim de SummonerRuneInventory.get_SummonerRunes()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRuneInventory.SummonerRunesJsonGet">
            <summary>Establecer el shim de SummonerRuneInventory.get_SummonerRunesJson()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRuneInventory.SummonerRunesJsonSetObject">
            <summary>Establecer el shim de SummonerRuneInventory.set_SummonerRunesJson(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRuneInventory.SummonerRunesSetListOfSummonerRune">
            <summary>Establecer el shim de SummonerRuneInventory.set_SummonerRunes(List`1&lt;SummonerRune&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRuneInventory.TypeNameGet">
            <summary>Establecer el shim de SummonerRuneInventory.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRuneInventory.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRuneInventory.AllInstances.DateStringGet">
            <summary>Establecer el shim de SummonerRuneInventory.get_DateString()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRuneInventory.AllInstances.DateStringSetString">
            <summary>Establecer el shim de SummonerRuneInventory.set_DateString(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRuneInventory.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de SummonerRuneInventory.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRuneInventory.AllInstances.SummonerIdGet">
            <summary>Establecer el shim de SummonerRuneInventory.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRuneInventory.AllInstances.SummonerIdSetDouble">
            <summary>Establecer el shim de SummonerRuneInventory.set_SummonerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRuneInventory.AllInstances.SummonerRunesGet">
            <summary>Establecer el shim de SummonerRuneInventory.get_SummonerRunes()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRuneInventory.AllInstances.SummonerRunesJsonGet">
            <summary>Establecer el shim de SummonerRuneInventory.get_SummonerRunesJson()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRuneInventory.AllInstances.SummonerRunesJsonSetObject">
            <summary>Establecer el shim de SummonerRuneInventory.set_SummonerRunesJson(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRuneInventory.AllInstances.SummonerRunesSetListOfSummonerRune">
            <summary>Establecer el shim de SummonerRuneInventory.set_SummonerRunes(List`1&lt;SummonerRune&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.ShimSummonerRuneInventory.AllInstances.TypeNameGet">
            <summary>Establecer el shim de SummonerRuneInventory.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.StubSummonerRune">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Summoner.Runes.SummonerRune</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.StubSummonerRune.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.StubSummonerRune.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.StubSummonerRune.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.Runes.SummonerRune.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.StubSummonerRune.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de SummonerRune.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.StubSummonerRune.DoCallbackTypedObject">
            <summary>Establecer el stub de SummonerRune.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.StubSummonerRune.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubSummonerRune</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.StubSummonerRune.TypeNameGet">
            <summary>Establecer el stub de SummonerRune.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.StubSummonerRune.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.StubSummonerRune.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.StubSummonerRune.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.StubSummonerRune.TypeName">
            <summary>Establecer el stub de SummonerRune.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.StubSummonerRuneInventory">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Summoner.Runes.SummonerRuneInventory</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.StubSummonerRuneInventory.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.StubSummonerRuneInventory.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.StubSummonerRuneInventory.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.Runes.SummonerRuneInventory.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.StubSummonerRuneInventory.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de SummonerRuneInventory.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.StubSummonerRuneInventory.DoCallbackTypedObject">
            <summary>Establecer el stub de SummonerRuneInventory.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.StubSummonerRuneInventory.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubSummonerRuneInventory</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.StubSummonerRuneInventory.TypeNameGet">
            <summary>Establecer el stub de SummonerRuneInventory.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.StubSummonerRuneInventory.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.StubSummonerRuneInventory.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.StubSummonerRuneInventory.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Runes.Fakes.StubSummonerRuneInventory.TypeName">
            <summary>Establecer el stub de SummonerRuneInventory.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSlotEntry">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.SlotEntry</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSlotEntry.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSlotEntry.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.SlotEntry)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSlotEntry.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSlotEntry.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSlotEntry.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSlotEntry.Constructor">
            <summary>Establecer el shim de SlotEntry.SlotEntry()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSlotEntry.ConstructorSlotEntryCallback">
            <summary>Establecer el shim de SlotEntry.SlotEntry(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSlotEntry.ConstructorTypedObject">
            <summary>Establecer el shim de SlotEntry.SlotEntry(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSlotEntry.DoCallbackTypedObject">
            <summary>Establecer el shim de SlotEntry.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSlotEntry.RuneIdGet">
            <summary>Establecer el shim de SlotEntry.get_RuneId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSlotEntry.RuneIdSetInt32">
            <summary>Establecer el shim de SlotEntry.set_RuneId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSlotEntry.RuneSlotIdGet">
            <summary>Establecer el shim de SlotEntry.get_RuneSlotId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSlotEntry.RuneSlotIdSetInt32">
            <summary>Establecer el shim de SlotEntry.set_RuneSlotId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSlotEntry.TypeNameGet">
            <summary>Establecer el shim de SlotEntry.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSlotEntry.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSlotEntry.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de SlotEntry.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSlotEntry.AllInstances.RuneIdGet">
            <summary>Establecer el shim de SlotEntry.get_RuneId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSlotEntry.AllInstances.RuneIdSetInt32">
            <summary>Establecer el shim de SlotEntry.set_RuneId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSlotEntry.AllInstances.RuneSlotIdGet">
            <summary>Establecer el shim de SlotEntry.get_RuneSlotId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSlotEntry.AllInstances.RuneSlotIdSetInt32">
            <summary>Establecer el shim de SlotEntry.set_RuneSlotId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSlotEntry.AllInstances.TypeNameGet">
            <summary>Establecer el shim de SlotEntry.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookDTO">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.SpellBookDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookDTO.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.SpellBookDTO)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookDTO.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookDTO.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookDTO.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookDTO.BookPagesGet">
            <summary>Establecer el shim de SpellBookDTO.get_BookPages()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookDTO.BookPagesJsonGet">
            <summary>Establecer el shim de SpellBookDTO.get_BookPagesJson()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookDTO.BookPagesJsonSetObject">
            <summary>Establecer el shim de SpellBookDTO.set_BookPagesJson(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookDTO.BookPagesSetListOfSpellBookPageDTO">
            <summary>Establecer el shim de SpellBookDTO.set_BookPages(List`1&lt;SpellBookPageDTO&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookDTO.Constructor">
            <summary>Establecer el shim de SpellBookDTO.SpellBookDTO()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookDTO.ConstructorSpellBookDTOCallback">
            <summary>Establecer el shim de SpellBookDTO.SpellBookDTO(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookDTO.ConstructorTypedObject">
            <summary>Establecer el shim de SpellBookDTO.SpellBookDTO(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookDTO.DateStringGet">
            <summary>Establecer el shim de SpellBookDTO.get_DateString()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookDTO.DateStringSetString">
            <summary>Establecer el shim de SpellBookDTO.set_DateString(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookDTO.DoCallbackTypedObject">
            <summary>Establecer el shim de SpellBookDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookDTO.SummonerIdGet">
            <summary>Establecer el shim de SpellBookDTO.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookDTO.SummonerIdSetDouble">
            <summary>Establecer el shim de SpellBookDTO.set_SummonerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookDTO.TypeNameGet">
            <summary>Establecer el shim de SpellBookDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookDTO.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookDTO.AllInstances.BookPagesGet">
            <summary>Establecer el shim de SpellBookDTO.get_BookPages()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookDTO.AllInstances.BookPagesJsonGet">
            <summary>Establecer el shim de SpellBookDTO.get_BookPagesJson()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookDTO.AllInstances.BookPagesJsonSetObject">
            <summary>Establecer el shim de SpellBookDTO.set_BookPagesJson(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookDTO.AllInstances.BookPagesSetListOfSpellBookPageDTO">
            <summary>Establecer el shim de SpellBookDTO.set_BookPages(List`1&lt;SpellBookPageDTO&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookDTO.AllInstances.DateStringGet">
            <summary>Establecer el shim de SpellBookDTO.get_DateString()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookDTO.AllInstances.DateStringSetString">
            <summary>Establecer el shim de SpellBookDTO.set_DateString(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookDTO.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de SpellBookDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookDTO.AllInstances.SummonerIdGet">
            <summary>Establecer el shim de SpellBookDTO.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookDTO.AllInstances.SummonerIdSetDouble">
            <summary>Establecer el shim de SpellBookDTO.set_SummonerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookDTO.AllInstances.TypeNameGet">
            <summary>Establecer el shim de SpellBookDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookPageDTO">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.SpellBookPageDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookPageDTO.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookPageDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.SpellBookPageDTO)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookPageDTO.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookPageDTO.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookPageDTO.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookPageDTO.Constructor">
            <summary>Establecer el shim de SpellBookPageDTO.SpellBookPageDTO()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookPageDTO.ConstructorSpellBookPageDTOCallback">
            <summary>Establecer el shim de SpellBookPageDTO.SpellBookPageDTO(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookPageDTO.ConstructorTypedObject">
            <summary>Establecer el shim de SpellBookPageDTO.SpellBookPageDTO(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookPageDTO.CreateDateGet">
            <summary>Establecer el shim de SpellBookPageDTO.get_CreateDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookPageDTO.CreateDateSetDateTime">
            <summary>Establecer el shim de SpellBookPageDTO.set_CreateDate(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookPageDTO.CurrentGet">
            <summary>Establecer el shim de SpellBookPageDTO.get_Current()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookPageDTO.CurrentSetBoolean">
            <summary>Establecer el shim de SpellBookPageDTO.set_Current(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookPageDTO.DoCallbackTypedObject">
            <summary>Establecer el shim de SpellBookPageDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookPageDTO.NameGet">
            <summary>Establecer el shim de SpellBookPageDTO.get_Name()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookPageDTO.NameSetString">
            <summary>Establecer el shim de SpellBookPageDTO.set_Name(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookPageDTO.PageIdGet">
            <summary>Establecer el shim de SpellBookPageDTO.get_PageId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookPageDTO.PageIdSetInt32">
            <summary>Establecer el shim de SpellBookPageDTO.set_PageId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookPageDTO.SlotEntriesGet">
            <summary>Establecer el shim de SpellBookPageDTO.get_SlotEntries()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookPageDTO.SlotEntriesSetListOfSlotEntry">
            <summary>Establecer el shim de SpellBookPageDTO.set_SlotEntries(List`1&lt;SlotEntry&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookPageDTO.SummonerIdGet">
            <summary>Establecer el shim de SpellBookPageDTO.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookPageDTO.SummonerIdSetInt32">
            <summary>Establecer el shim de SpellBookPageDTO.set_SummonerId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookPageDTO.TypeNameGet">
            <summary>Establecer el shim de SpellBookPageDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookPageDTO.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookPageDTO.AllInstances.CreateDateGet">
            <summary>Establecer el shim de SpellBookPageDTO.get_CreateDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookPageDTO.AllInstances.CreateDateSetDateTime">
            <summary>Establecer el shim de SpellBookPageDTO.set_CreateDate(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookPageDTO.AllInstances.CurrentGet">
            <summary>Establecer el shim de SpellBookPageDTO.get_Current()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookPageDTO.AllInstances.CurrentSetBoolean">
            <summary>Establecer el shim de SpellBookPageDTO.set_Current(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookPageDTO.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de SpellBookPageDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookPageDTO.AllInstances.NameGet">
            <summary>Establecer el shim de SpellBookPageDTO.get_Name()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookPageDTO.AllInstances.NameSetString">
            <summary>Establecer el shim de SpellBookPageDTO.set_Name(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookPageDTO.AllInstances.PageIdGet">
            <summary>Establecer el shim de SpellBookPageDTO.get_PageId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookPageDTO.AllInstances.PageIdSetInt32">
            <summary>Establecer el shim de SpellBookPageDTO.set_PageId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookPageDTO.AllInstances.SlotEntriesGet">
            <summary>Establecer el shim de SpellBookPageDTO.get_SlotEntries()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookPageDTO.AllInstances.SlotEntriesSetListOfSlotEntry">
            <summary>Establecer el shim de SpellBookPageDTO.set_SlotEntries(List`1&lt;SlotEntry&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookPageDTO.AllInstances.SummonerIdGet">
            <summary>Establecer el shim de SpellBookPageDTO.get_SummonerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookPageDTO.AllInstances.SummonerIdSetInt32">
            <summary>Establecer el shim de SpellBookPageDTO.set_SummonerId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.ShimSpellBookPageDTO.AllInstances.TypeNameGet">
            <summary>Establecer el shim de SpellBookPageDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.StubSlotEntry">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.SlotEntry</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.StubSlotEntry.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.StubSlotEntry.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.StubSlotEntry.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.SlotEntry.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.StubSlotEntry.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de SlotEntry.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.StubSlotEntry.DoCallbackTypedObject">
            <summary>Establecer el stub de SlotEntry.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.StubSlotEntry.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubSlotEntry</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.StubSlotEntry.TypeNameGet">
            <summary>Establecer el stub de SlotEntry.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.StubSlotEntry.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.StubSlotEntry.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.StubSlotEntry.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.StubSlotEntry.TypeName">
            <summary>Establecer el stub de SlotEntry.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.StubSpellBookDTO">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.SpellBookDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.StubSpellBookDTO.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.StubSpellBookDTO.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.StubSpellBookDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.SpellBookDTO.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.StubSpellBookDTO.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de SpellBookDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.StubSpellBookDTO.DoCallbackTypedObject">
            <summary>Establecer el stub de SpellBookDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.StubSpellBookDTO.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubSpellBookDTO</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.StubSpellBookDTO.TypeNameGet">
            <summary>Establecer el stub de SpellBookDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.StubSpellBookDTO.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.StubSpellBookDTO.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.StubSpellBookDTO.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.StubSpellBookDTO.TypeName">
            <summary>Establecer el stub de SpellBookDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.StubSpellBookPageDTO">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.SpellBookPageDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.StubSpellBookPageDTO.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.StubSpellBookPageDTO.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.StubSpellBookPageDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.SpellBookPageDTO.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.StubSpellBookPageDTO.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de SpellBookPageDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.StubSpellBookPageDTO.DoCallbackTypedObject">
            <summary>Establecer el stub de SpellBookPageDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.StubSpellBookPageDTO.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubSpellBookPageDTO</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.StubSpellBookPageDTO.TypeNameGet">
            <summary>Establecer el stub de SpellBookPageDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.StubSpellBookPageDTO.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.StubSpellBookPageDTO.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.StubSpellBookPageDTO.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Summoner.Spellbook.Fakes.StubSpellBookPageDTO.TypeName">
            <summary>Establecer el stub de SpellBookPageDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Systemstate.ClientSystemStatesNotification</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.#ctor(PVPNetConnect.RiotObjects.Platform.Systemstate.ClientSystemStatesNotification)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AdvancedTutorialEnabledGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_AdvancedTutorialEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AdvancedTutorialEnabledSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_AdvancedTutorialEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.ArchivedStatsEnabledGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_ArchivedStatsEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.ArchivedStatsEnabledSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_ArchivedStatsEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.BuddyNotesEnabledGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_BuddyNotesEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.BuddyNotesEnabledSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_BuddyNotesEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.ChampionTradeThroughLCDSGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_ChampionTradeThroughLCDS()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.ChampionTradeThroughLCDSSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_ChampionTradeThroughLCDS(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.ClientHeartBeatRateSecondsGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_ClientHeartBeatRateSeconds()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.ClientHeartBeatRateSecondsSetInt32">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_ClientHeartBeatRateSeconds(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.Constructor">
            <summary>Establecer el shim de ClientSystemStatesNotification.ClientSystemStatesNotification()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.ConstructorClientSystemStatesNotificationCallback">
            <summary>Establecer el shim de ClientSystemStatesNotification.ClientSystemStatesNotification(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.ConstructorTypedObject">
            <summary>Establecer el shim de ClientSystemStatesNotification.ClientSystemStatesNotification(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.DisplayPromoGamesPlayedEnabledGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_DisplayPromoGamesPlayedEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.DisplayPromoGamesPlayedEnabledSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_DisplayPromoGamesPlayedEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.DoCallbackTypedObject">
            <summary>Establecer el shim de ClientSystemStatesNotification.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.EnabledQueueIdsListGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_EnabledQueueIdsList()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.EnabledQueueIdsListSetInt32Array">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_EnabledQueueIdsList(Int32[] value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.FreeToPlayChampionIdListGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_FreeToPlayChampionIdList()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.FreeToPlayChampionIdListSetInt32Array">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_FreeToPlayChampionIdList(Int32[] value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.GameMapEnabledDTOListGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_GameMapEnabledDTOList()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.GameMapEnabledDTOListSetListOfDictionaryOfStringObject">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_GameMapEnabledDTOList(List`1&lt;Dictionary`2&lt;String,Object&gt;&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.InactiveAramSpellIdListGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_InactiveAramSpellIdList()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.InactiveAramSpellIdListSetInt32Array">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_InactiveAramSpellIdList(Int32[] value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.InactiveChampionIdListGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_InactiveChampionIdList()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.InactiveChampionIdListSetObjectArray">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_InactiveChampionIdList(Object[] value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.InactiveClassicSpellIdListGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_InactiveClassicSpellIdList()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.InactiveClassicSpellIdListSetInt32Array">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_InactiveClassicSpellIdList(Int32[] value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.InactiveOdinSpellIdListGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_InactiveOdinSpellIdList()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.InactiveOdinSpellIdListSetInt32Array">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_InactiveOdinSpellIdList(Int32[] value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.InactiveSpellIdListGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_InactiveSpellIdList()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.InactiveSpellIdListSetInt32Array">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_InactiveSpellIdList(Int32[] value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.InactiveTutorialSpellIdListGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_InactiveTutorialSpellIdList()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.InactiveTutorialSpellIdListSetInt32Array">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_InactiveTutorialSpellIdList(Int32[] value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.KnownGeographicGameServerRegionsGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_KnownGeographicGameServerRegions()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.KnownGeographicGameServerRegionsSetStringArray">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_KnownGeographicGameServerRegions(String[] value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.KudosEnabledGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_KudosEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.KudosEnabledSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_KudosEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.LeagueServiceEnabledGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_LeagueServiceEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.LeagueServiceEnabledSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_LeagueServiceEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.LeaguesDecayMessagingEnabledGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_LeaguesDecayMessagingEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.LeaguesDecayMessagingEnabledSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_LeaguesDecayMessagingEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.LocaleSpecificChatRoomsEnabledGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_LocaleSpecificChatRoomsEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.LocaleSpecificChatRoomsEnabledSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_LocaleSpecificChatRoomsEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.MasteryPageOnServerGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_MasteryPageOnServer()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.MasteryPageOnServerSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_MasteryPageOnServer(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.MaxMasteryPagesOnServerGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_MaxMasteryPagesOnServer()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.MaxMasteryPagesOnServerSetInt32">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_MaxMasteryPagesOnServer(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.MinNumPlayersForPracticeGameGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_MinNumPlayersForPracticeGame()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.MinNumPlayersForPracticeGameSetInt32">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_MinNumPlayersForPracticeGame(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.ModularGameModeEnabledGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_ModularGameModeEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.ModularGameModeEnabledSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_ModularGameModeEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.ObservableCustomGameModesGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_ObservableCustomGameModes()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.ObservableCustomGameModesSetString">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_ObservableCustomGameModes(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.ObservableGameModesGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_ObservableGameModes()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.ObservableGameModesSetStringArray">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_ObservableGameModes(String[] value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.ObserverModeEnabledGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_ObserverModeEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.ObserverModeEnabledSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_ObserverModeEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.PracticeGameEnabledGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_PracticeGameEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.PracticeGameEnabledSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_PracticeGameEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.PracticeGameTypeConfigIdListGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_PracticeGameTypeConfigIdList()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.PracticeGameTypeConfigIdListSetInt32Array">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_PracticeGameTypeConfigIdList(Int32[] value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.QueueThrottleDTOGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_QueueThrottleDTO()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.QueueThrottleDTOSetDictionaryOfStringObject">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_QueueThrottleDTO(Dictionary`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.ReplayServiceAddressGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_ReplayServiceAddress()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.ReplayServiceAddressSetString">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_ReplayServiceAddress(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.ReplaySystemStatesGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_ReplaySystemStates()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.ReplaySystemStatesSetDictionaryOfStringObject">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_ReplaySystemStates(Dictionary`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.RiotDataServiceDataSendProbabilityGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_RiotDataServiceDataSendProbability()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.RiotDataServiceDataSendProbabilitySetInt32">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_RiotDataServiceDataSendProbability(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.RuneUniquePerSpellBookGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_RuneUniquePerSpellBook()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.RuneUniquePerSpellBookSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_RuneUniquePerSpellBook(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.SendFeedbackEventsEnabledGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_SendFeedbackEventsEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.SendFeedbackEventsEnabledSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_SendFeedbackEventsEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.SocialIntegrationEnabledGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_SocialIntegrationEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.SocialIntegrationEnabledSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_SocialIntegrationEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.SpectatorSlotLimitGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_SpectatorSlotLimit()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.SpectatorSlotLimitSetInt32">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_SpectatorSlotLimit(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.StoreCustomerEnabledGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_StoreCustomerEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.StoreCustomerEnabledSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_StoreCustomerEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.TeamServiceEnabledGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_TeamServiceEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.TeamServiceEnabledSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_TeamServiceEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.TournamentSendStatsEnabledGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_TournamentSendStatsEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.TournamentSendStatsEnabledSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_TournamentSendStatsEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.TribunalEnabledGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_TribunalEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.TribunalEnabledSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_TribunalEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.TypeNameGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.UnobtainableChampionSkinIDListGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_UnobtainableChampionSkinIDList()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.UnobtainableChampionSkinIDListSetInt32Array">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_UnobtainableChampionSkinIDList(Int32[] value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.AdvancedTutorialEnabledGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_AdvancedTutorialEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.AdvancedTutorialEnabledSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_AdvancedTutorialEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.ArchivedStatsEnabledGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_ArchivedStatsEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.ArchivedStatsEnabledSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_ArchivedStatsEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.BuddyNotesEnabledGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_BuddyNotesEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.BuddyNotesEnabledSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_BuddyNotesEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.ChampionTradeThroughLCDSGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_ChampionTradeThroughLCDS()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.ChampionTradeThroughLCDSSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_ChampionTradeThroughLCDS(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.ClientHeartBeatRateSecondsGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_ClientHeartBeatRateSeconds()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.ClientHeartBeatRateSecondsSetInt32">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_ClientHeartBeatRateSeconds(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.DisplayPromoGamesPlayedEnabledGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_DisplayPromoGamesPlayedEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.DisplayPromoGamesPlayedEnabledSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_DisplayPromoGamesPlayedEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de ClientSystemStatesNotification.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.EnabledQueueIdsListGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_EnabledQueueIdsList()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.EnabledQueueIdsListSetInt32Array">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_EnabledQueueIdsList(Int32[] value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.FreeToPlayChampionIdListGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_FreeToPlayChampionIdList()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.FreeToPlayChampionIdListSetInt32Array">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_FreeToPlayChampionIdList(Int32[] value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.GameMapEnabledDTOListGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_GameMapEnabledDTOList()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.GameMapEnabledDTOListSetListOfDictionaryOfStringObject">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_GameMapEnabledDTOList(List`1&lt;Dictionary`2&lt;String,Object&gt;&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.InactiveAramSpellIdListGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_InactiveAramSpellIdList()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.InactiveAramSpellIdListSetInt32Array">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_InactiveAramSpellIdList(Int32[] value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.InactiveChampionIdListGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_InactiveChampionIdList()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.InactiveChampionIdListSetObjectArray">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_InactiveChampionIdList(Object[] value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.InactiveClassicSpellIdListGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_InactiveClassicSpellIdList()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.InactiveClassicSpellIdListSetInt32Array">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_InactiveClassicSpellIdList(Int32[] value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.InactiveOdinSpellIdListGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_InactiveOdinSpellIdList()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.InactiveOdinSpellIdListSetInt32Array">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_InactiveOdinSpellIdList(Int32[] value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.InactiveSpellIdListGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_InactiveSpellIdList()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.InactiveSpellIdListSetInt32Array">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_InactiveSpellIdList(Int32[] value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.InactiveTutorialSpellIdListGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_InactiveTutorialSpellIdList()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.InactiveTutorialSpellIdListSetInt32Array">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_InactiveTutorialSpellIdList(Int32[] value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.KnownGeographicGameServerRegionsGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_KnownGeographicGameServerRegions()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.KnownGeographicGameServerRegionsSetStringArray">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_KnownGeographicGameServerRegions(String[] value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.KudosEnabledGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_KudosEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.KudosEnabledSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_KudosEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.LeagueServiceEnabledGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_LeagueServiceEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.LeagueServiceEnabledSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_LeagueServiceEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.LeaguesDecayMessagingEnabledGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_LeaguesDecayMessagingEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.LeaguesDecayMessagingEnabledSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_LeaguesDecayMessagingEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.LocaleSpecificChatRoomsEnabledGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_LocaleSpecificChatRoomsEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.LocaleSpecificChatRoomsEnabledSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_LocaleSpecificChatRoomsEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.MasteryPageOnServerGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_MasteryPageOnServer()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.MasteryPageOnServerSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_MasteryPageOnServer(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.MaxMasteryPagesOnServerGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_MaxMasteryPagesOnServer()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.MaxMasteryPagesOnServerSetInt32">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_MaxMasteryPagesOnServer(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.MinNumPlayersForPracticeGameGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_MinNumPlayersForPracticeGame()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.MinNumPlayersForPracticeGameSetInt32">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_MinNumPlayersForPracticeGame(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.ModularGameModeEnabledGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_ModularGameModeEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.ModularGameModeEnabledSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_ModularGameModeEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.ObservableCustomGameModesGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_ObservableCustomGameModes()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.ObservableCustomGameModesSetString">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_ObservableCustomGameModes(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.ObservableGameModesGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_ObservableGameModes()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.ObservableGameModesSetStringArray">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_ObservableGameModes(String[] value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.ObserverModeEnabledGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_ObserverModeEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.ObserverModeEnabledSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_ObserverModeEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.PracticeGameEnabledGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_PracticeGameEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.PracticeGameEnabledSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_PracticeGameEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.PracticeGameTypeConfigIdListGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_PracticeGameTypeConfigIdList()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.PracticeGameTypeConfigIdListSetInt32Array">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_PracticeGameTypeConfigIdList(Int32[] value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.QueueThrottleDTOGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_QueueThrottleDTO()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.QueueThrottleDTOSetDictionaryOfStringObject">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_QueueThrottleDTO(Dictionary`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.ReplayServiceAddressGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_ReplayServiceAddress()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.ReplayServiceAddressSetString">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_ReplayServiceAddress(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.ReplaySystemStatesGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_ReplaySystemStates()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.ReplaySystemStatesSetDictionaryOfStringObject">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_ReplaySystemStates(Dictionary`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.RiotDataServiceDataSendProbabilityGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_RiotDataServiceDataSendProbability()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.RiotDataServiceDataSendProbabilitySetInt32">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_RiotDataServiceDataSendProbability(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.RuneUniquePerSpellBookGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_RuneUniquePerSpellBook()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.RuneUniquePerSpellBookSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_RuneUniquePerSpellBook(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.SendFeedbackEventsEnabledGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_SendFeedbackEventsEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.SendFeedbackEventsEnabledSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_SendFeedbackEventsEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.SocialIntegrationEnabledGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_SocialIntegrationEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.SocialIntegrationEnabledSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_SocialIntegrationEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.SpectatorSlotLimitGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_SpectatorSlotLimit()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.SpectatorSlotLimitSetInt32">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_SpectatorSlotLimit(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.StoreCustomerEnabledGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_StoreCustomerEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.StoreCustomerEnabledSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_StoreCustomerEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.TeamServiceEnabledGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_TeamServiceEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.TeamServiceEnabledSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_TeamServiceEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.TournamentSendStatsEnabledGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_TournamentSendStatsEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.TournamentSendStatsEnabledSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_TournamentSendStatsEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.TribunalEnabledGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_TribunalEnabled()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.TribunalEnabledSetBoolean">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_TribunalEnabled(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.TypeNameGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.UnobtainableChampionSkinIDListGet">
            <summary>Establecer el shim de ClientSystemStatesNotification.get_UnobtainableChampionSkinIDList()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.ShimClientSystemStatesNotification.AllInstances.UnobtainableChampionSkinIDListSetInt32Array">
            <summary>Establecer el shim de ClientSystemStatesNotification.set_UnobtainableChampionSkinIDList(Int32[] value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.StubClientSystemStatesNotification">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Systemstate.ClientSystemStatesNotification</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.StubClientSystemStatesNotification.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.StubClientSystemStatesNotification.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.StubClientSystemStatesNotification.#ctor(PVPNetConnect.RiotObjects.Platform.Systemstate.ClientSystemStatesNotification.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.StubClientSystemStatesNotification.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de ClientSystemStatesNotification.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.StubClientSystemStatesNotification.DoCallbackTypedObject">
            <summary>Establecer el stub de ClientSystemStatesNotification.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.StubClientSystemStatesNotification.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubClientSystemStatesNotification</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.StubClientSystemStatesNotification.TypeNameGet">
            <summary>Establecer el stub de ClientSystemStatesNotification.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.StubClientSystemStatesNotification.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.StubClientSystemStatesNotification.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.StubClientSystemStatesNotification.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Systemstate.Fakes.StubClientSystemStatesNotification.TypeName">
            <summary>Establecer el stub de ClientSystemStatesNotification.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimPotentialTradersDTO">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Trade.PotentialTradersDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimPotentialTradersDTO.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimPotentialTradersDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Trade.PotentialTradersDTO)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimPotentialTradersDTO.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimPotentialTradersDTO.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimPotentialTradersDTO.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimPotentialTradersDTO.Constructor">
            <summary>Establecer el shim de PotentialTradersDTO.PotentialTradersDTO()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimPotentialTradersDTO.ConstructorPotentialTradersDTOCallback">
            <summary>Establecer el shim de PotentialTradersDTO.PotentialTradersDTO(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimPotentialTradersDTO.ConstructorTypedObject">
            <summary>Establecer el shim de PotentialTradersDTO.PotentialTradersDTO(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimPotentialTradersDTO.DoCallbackTypedObject">
            <summary>Establecer el shim de PotentialTradersDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimPotentialTradersDTO.PotentialTradersGet">
            <summary>Establecer el shim de PotentialTradersDTO.get_PotentialTraders()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimPotentialTradersDTO.PotentialTradersSetListOfString">
            <summary>Establecer el shim de PotentialTradersDTO.set_PotentialTraders(List`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimPotentialTradersDTO.TypeNameGet">
            <summary>Establecer el shim de PotentialTradersDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimPotentialTradersDTO.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimPotentialTradersDTO.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de PotentialTradersDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimPotentialTradersDTO.AllInstances.PotentialTradersGet">
            <summary>Establecer el shim de PotentialTradersDTO.get_PotentialTraders()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimPotentialTradersDTO.AllInstances.PotentialTradersSetListOfString">
            <summary>Establecer el shim de PotentialTradersDTO.set_PotentialTraders(List`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimPotentialTradersDTO.AllInstances.TypeNameGet">
            <summary>Establecer el shim de PotentialTradersDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimTradeContractDTO">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Platform.Trade.TradeContractDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimTradeContractDTO.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimTradeContractDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Trade.TradeContractDTO)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimTradeContractDTO.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimTradeContractDTO.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimTradeContractDTO.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimTradeContractDTO.Constructor">
            <summary>Establecer el shim de TradeContractDTO.TradeContractDTO()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimTradeContractDTO.ConstructorTradeContractDTOCallback">
            <summary>Establecer el shim de TradeContractDTO.TradeContractDTO(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimTradeContractDTO.ConstructorTypedObject">
            <summary>Establecer el shim de TradeContractDTO.TradeContractDTO(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimTradeContractDTO.DoCallbackTypedObject">
            <summary>Establecer el shim de TradeContractDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimTradeContractDTO.RequesterChampionIdGet">
            <summary>Establecer el shim de TradeContractDTO.get_RequesterChampionId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimTradeContractDTO.RequesterChampionIdSetDouble">
            <summary>Establecer el shim de TradeContractDTO.set_RequesterChampionId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimTradeContractDTO.RequesterInternalSummonerNameGet">
            <summary>Establecer el shim de TradeContractDTO.get_RequesterInternalSummonerName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimTradeContractDTO.RequesterInternalSummonerNameSetString">
            <summary>Establecer el shim de TradeContractDTO.set_RequesterInternalSummonerName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimTradeContractDTO.ResponderChampionIdGet">
            <summary>Establecer el shim de TradeContractDTO.get_ResponderChampionId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimTradeContractDTO.ResponderChampionIdSetDouble">
            <summary>Establecer el shim de TradeContractDTO.set_ResponderChampionId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimTradeContractDTO.ResponderInternalSummonerNameGet">
            <summary>Establecer el shim de TradeContractDTO.get_ResponderInternalSummonerName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimTradeContractDTO.ResponderInternalSummonerNameSetString">
            <summary>Establecer el shim de TradeContractDTO.set_ResponderInternalSummonerName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimTradeContractDTO.StateGet">
            <summary>Establecer el shim de TradeContractDTO.get_State()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimTradeContractDTO.StateSetString">
            <summary>Establecer el shim de TradeContractDTO.set_State(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimTradeContractDTO.TypeNameGet">
            <summary>Establecer el shim de TradeContractDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimTradeContractDTO.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimTradeContractDTO.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de TradeContractDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimTradeContractDTO.AllInstances.RequesterChampionIdGet">
            <summary>Establecer el shim de TradeContractDTO.get_RequesterChampionId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimTradeContractDTO.AllInstances.RequesterChampionIdSetDouble">
            <summary>Establecer el shim de TradeContractDTO.set_RequesterChampionId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimTradeContractDTO.AllInstances.RequesterInternalSummonerNameGet">
            <summary>Establecer el shim de TradeContractDTO.get_RequesterInternalSummonerName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimTradeContractDTO.AllInstances.RequesterInternalSummonerNameSetString">
            <summary>Establecer el shim de TradeContractDTO.set_RequesterInternalSummonerName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimTradeContractDTO.AllInstances.ResponderChampionIdGet">
            <summary>Establecer el shim de TradeContractDTO.get_ResponderChampionId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimTradeContractDTO.AllInstances.ResponderChampionIdSetDouble">
            <summary>Establecer el shim de TradeContractDTO.set_ResponderChampionId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimTradeContractDTO.AllInstances.ResponderInternalSummonerNameGet">
            <summary>Establecer el shim de TradeContractDTO.get_ResponderInternalSummonerName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimTradeContractDTO.AllInstances.ResponderInternalSummonerNameSetString">
            <summary>Establecer el shim de TradeContractDTO.set_ResponderInternalSummonerName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimTradeContractDTO.AllInstances.StateGet">
            <summary>Establecer el shim de TradeContractDTO.get_State()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimTradeContractDTO.AllInstances.StateSetString">
            <summary>Establecer el shim de TradeContractDTO.set_State(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.ShimTradeContractDTO.AllInstances.TypeNameGet">
            <summary>Establecer el shim de TradeContractDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.StubPotentialTradersDTO">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Trade.PotentialTradersDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.StubPotentialTradersDTO.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.StubPotentialTradersDTO.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.StubPotentialTradersDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Trade.PotentialTradersDTO.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.StubPotentialTradersDTO.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de PotentialTradersDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.StubPotentialTradersDTO.DoCallbackTypedObject">
            <summary>Establecer el stub de PotentialTradersDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.StubPotentialTradersDTO.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPotentialTradersDTO</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.StubPotentialTradersDTO.TypeNameGet">
            <summary>Establecer el stub de PotentialTradersDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.StubPotentialTradersDTO.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.StubPotentialTradersDTO.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.StubPotentialTradersDTO.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.StubPotentialTradersDTO.TypeName">
            <summary>Establecer el stub de PotentialTradersDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.StubTradeContractDTO">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Platform.Trade.TradeContractDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.StubTradeContractDTO.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.StubTradeContractDTO.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.StubTradeContractDTO.#ctor(PVPNetConnect.RiotObjects.Platform.Trade.TradeContractDTO.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.StubTradeContractDTO.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de TradeContractDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.StubTradeContractDTO.DoCallbackTypedObject">
            <summary>Establecer el stub de TradeContractDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.StubTradeContractDTO.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubTradeContractDTO</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.StubTradeContractDTO.TypeNameGet">
            <summary>Establecer el stub de TradeContractDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.StubTradeContractDTO.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.StubTradeContractDTO.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.StubTradeContractDTO.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Platform.Trade.Fakes.StubTradeContractDTO.TypeName">
            <summary>Establecer el stub de TradeContractDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimPlayerDTO">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Team.Dto.PlayerDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimPlayerDTO.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimPlayerDTO.#ctor(PVPNetConnect.RiotObjects.Team.Dto.PlayerDTO)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimPlayerDTO.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimPlayerDTO.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimPlayerDTO.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimPlayerDTO.Constructor">
            <summary>Establecer el shim de PlayerDTO.PlayerDTO()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimPlayerDTO.ConstructorPlayerDTOCallback">
            <summary>Establecer el shim de PlayerDTO.PlayerDTO(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimPlayerDTO.ConstructorTypedObject">
            <summary>Establecer el shim de PlayerDTO.PlayerDTO(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimPlayerDTO.CreatedTeamsGet">
            <summary>Establecer el shim de PlayerDTO.get_CreatedTeams()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimPlayerDTO.CreatedTeamsSetListOfObject">
            <summary>Establecer el shim de PlayerDTO.set_CreatedTeams(List`1&lt;Object&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimPlayerDTO.DoCallbackTypedObject">
            <summary>Establecer el shim de PlayerDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimPlayerDTO.PlayerIdGet">
            <summary>Establecer el shim de PlayerDTO.get_PlayerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimPlayerDTO.PlayerIdSetDouble">
            <summary>Establecer el shim de PlayerDTO.set_PlayerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimPlayerDTO.PlayerTeamsGet">
            <summary>Establecer el shim de PlayerDTO.get_PlayerTeams()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimPlayerDTO.PlayerTeamsSetListOfObject">
            <summary>Establecer el shim de PlayerDTO.set_PlayerTeams(List`1&lt;Object&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimPlayerDTO.TeamsSummaryGet">
            <summary>Establecer el shim de PlayerDTO.get_TeamsSummary()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimPlayerDTO.TeamsSummarySetListOfObject">
            <summary>Establecer el shim de PlayerDTO.set_TeamsSummary(List`1&lt;Object&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimPlayerDTO.TypeNameGet">
            <summary>Establecer el shim de PlayerDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimPlayerDTO.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimPlayerDTO.AllInstances.CreatedTeamsGet">
            <summary>Establecer el shim de PlayerDTO.get_CreatedTeams()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimPlayerDTO.AllInstances.CreatedTeamsSetListOfObject">
            <summary>Establecer el shim de PlayerDTO.set_CreatedTeams(List`1&lt;Object&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimPlayerDTO.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de PlayerDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimPlayerDTO.AllInstances.PlayerIdGet">
            <summary>Establecer el shim de PlayerDTO.get_PlayerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimPlayerDTO.AllInstances.PlayerIdSetDouble">
            <summary>Establecer el shim de PlayerDTO.set_PlayerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimPlayerDTO.AllInstances.PlayerTeamsGet">
            <summary>Establecer el shim de PlayerDTO.get_PlayerTeams()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimPlayerDTO.AllInstances.PlayerTeamsSetListOfObject">
            <summary>Establecer el shim de PlayerDTO.set_PlayerTeams(List`1&lt;Object&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimPlayerDTO.AllInstances.TeamsSummaryGet">
            <summary>Establecer el shim de PlayerDTO.get_TeamsSummary()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimPlayerDTO.AllInstances.TeamsSummarySetListOfObject">
            <summary>Establecer el shim de PlayerDTO.set_TeamsSummary(List`1&lt;Object&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimPlayerDTO.AllInstances.TypeNameGet">
            <summary>Establecer el shim de PlayerDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimRosterDTO">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Team.Dto.RosterDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimRosterDTO.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimRosterDTO.#ctor(PVPNetConnect.RiotObjects.Team.Dto.RosterDTO)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimRosterDTO.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimRosterDTO.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimRosterDTO.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimRosterDTO.Constructor">
            <summary>Establecer el shim de RosterDTO.RosterDTO()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimRosterDTO.ConstructorRosterDTOCallback">
            <summary>Establecer el shim de RosterDTO.RosterDTO(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimRosterDTO.ConstructorTypedObject">
            <summary>Establecer el shim de RosterDTO.RosterDTO(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimRosterDTO.DoCallbackTypedObject">
            <summary>Establecer el shim de RosterDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimRosterDTO.MemberListGet">
            <summary>Establecer el shim de RosterDTO.get_MemberList()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimRosterDTO.MemberListSetListOfTeamMemberInfoDTO">
            <summary>Establecer el shim de RosterDTO.set_MemberList(List`1&lt;TeamMemberInfoDTO&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimRosterDTO.OwnerIdGet">
            <summary>Establecer el shim de RosterDTO.get_OwnerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimRosterDTO.OwnerIdSetDouble">
            <summary>Establecer el shim de RosterDTO.set_OwnerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimRosterDTO.TypeNameGet">
            <summary>Establecer el shim de RosterDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimRosterDTO.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimRosterDTO.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de RosterDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimRosterDTO.AllInstances.MemberListGet">
            <summary>Establecer el shim de RosterDTO.get_MemberList()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimRosterDTO.AllInstances.MemberListSetListOfTeamMemberInfoDTO">
            <summary>Establecer el shim de RosterDTO.set_MemberList(List`1&lt;TeamMemberInfoDTO&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimRosterDTO.AllInstances.OwnerIdGet">
            <summary>Establecer el shim de RosterDTO.get_OwnerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimRosterDTO.AllInstances.OwnerIdSetDouble">
            <summary>Establecer el shim de RosterDTO.set_OwnerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimRosterDTO.AllInstances.TypeNameGet">
            <summary>Establecer el shim de RosterDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Team.Dto.TeamDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.#ctor(PVPNetConnect.RiotObjects.Team.Dto.TeamDTO)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.Constructor">
            <summary>Establecer el shim de TeamDTO.TeamDTO()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.ConstructorTeamDTOCallback">
            <summary>Establecer el shim de TeamDTO.TeamDTO(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.ConstructorTypedObject">
            <summary>Establecer el shim de TeamDTO.TeamDTO(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.CreateDateGet">
            <summary>Establecer el shim de TeamDTO.get_CreateDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.CreateDateSetDateTime">
            <summary>Establecer el shim de TeamDTO.set_CreateDate(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.DoCallbackTypedObject">
            <summary>Establecer el shim de TeamDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.LastGameDateGet">
            <summary>Establecer el shim de TeamDTO.get_LastGameDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.LastGameDateSetObject">
            <summary>Establecer el shim de TeamDTO.set_LastGameDate(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.LastJoinDateGet">
            <summary>Establecer el shim de TeamDTO.get_LastJoinDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.LastJoinDateSetDateTime">
            <summary>Establecer el shim de TeamDTO.set_LastJoinDate(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.MatchHistoryGet">
            <summary>Establecer el shim de TeamDTO.get_MatchHistory()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.MatchHistorySetListOfObject">
            <summary>Establecer el shim de TeamDTO.set_MatchHistory(List`1&lt;Object&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.MessageOfDayGet">
            <summary>Establecer el shim de TeamDTO.get_MessageOfDay()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.MessageOfDaySetObject">
            <summary>Establecer el shim de TeamDTO.set_MessageOfDay(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.ModifyDateGet">
            <summary>Establecer el shim de TeamDTO.get_ModifyDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.ModifyDateSetDateTime">
            <summary>Establecer el shim de TeamDTO.set_ModifyDate(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.NameGet">
            <summary>Establecer el shim de TeamDTO.get_Name()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.NameSetString">
            <summary>Establecer el shim de TeamDTO.set_Name(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.RosterGet">
            <summary>Establecer el shim de TeamDTO.get_Roster()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.RosterSetRosterDTO">
            <summary>Establecer el shim de TeamDTO.set_Roster(RosterDTO value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.SecondLastJoinDateGet">
            <summary>Establecer el shim de TeamDTO.get_SecondLastJoinDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.SecondLastJoinDateSetDateTime">
            <summary>Establecer el shim de TeamDTO.set_SecondLastJoinDate(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.SecondsUntilEligibleForDeletionGet">
            <summary>Establecer el shim de TeamDTO.get_SecondsUntilEligibleForDeletion()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.SecondsUntilEligibleForDeletionSetDouble">
            <summary>Establecer el shim de TeamDTO.set_SecondsUntilEligibleForDeletion(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.StatusGet">
            <summary>Establecer el shim de TeamDTO.get_Status()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.StatusSetString">
            <summary>Establecer el shim de TeamDTO.set_Status(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.TagGet">
            <summary>Establecer el shim de TeamDTO.get_Tag()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.TagSetString">
            <summary>Establecer el shim de TeamDTO.set_Tag(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.TeamIdGet">
            <summary>Establecer el shim de TeamDTO.get_TeamId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.TeamIdSetTeamId">
            <summary>Establecer el shim de TeamDTO.set_TeamId(TeamId value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.TeamStatSummaryGet">
            <summary>Establecer el shim de TeamDTO.get_TeamStatSummary()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.TeamStatSummarySetTeamStatSummary">
            <summary>Establecer el shim de TeamDTO.set_TeamStatSummary(TeamStatSummary value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.ThirdLastJoinDateGet">
            <summary>Establecer el shim de TeamDTO.get_ThirdLastJoinDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.ThirdLastJoinDateSetDateTime">
            <summary>Establecer el shim de TeamDTO.set_ThirdLastJoinDate(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.TypeNameGet">
            <summary>Establecer el shim de TeamDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.AllInstances.CreateDateGet">
            <summary>Establecer el shim de TeamDTO.get_CreateDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.AllInstances.CreateDateSetDateTime">
            <summary>Establecer el shim de TeamDTO.set_CreateDate(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de TeamDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.AllInstances.LastGameDateGet">
            <summary>Establecer el shim de TeamDTO.get_LastGameDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.AllInstances.LastGameDateSetObject">
            <summary>Establecer el shim de TeamDTO.set_LastGameDate(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.AllInstances.LastJoinDateGet">
            <summary>Establecer el shim de TeamDTO.get_LastJoinDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.AllInstances.LastJoinDateSetDateTime">
            <summary>Establecer el shim de TeamDTO.set_LastJoinDate(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.AllInstances.MatchHistoryGet">
            <summary>Establecer el shim de TeamDTO.get_MatchHistory()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.AllInstances.MatchHistorySetListOfObject">
            <summary>Establecer el shim de TeamDTO.set_MatchHistory(List`1&lt;Object&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.AllInstances.MessageOfDayGet">
            <summary>Establecer el shim de TeamDTO.get_MessageOfDay()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.AllInstances.MessageOfDaySetObject">
            <summary>Establecer el shim de TeamDTO.set_MessageOfDay(Object value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.AllInstances.ModifyDateGet">
            <summary>Establecer el shim de TeamDTO.get_ModifyDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.AllInstances.ModifyDateSetDateTime">
            <summary>Establecer el shim de TeamDTO.set_ModifyDate(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.AllInstances.NameGet">
            <summary>Establecer el shim de TeamDTO.get_Name()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.AllInstances.NameSetString">
            <summary>Establecer el shim de TeamDTO.set_Name(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.AllInstances.RosterGet">
            <summary>Establecer el shim de TeamDTO.get_Roster()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.AllInstances.RosterSetRosterDTO">
            <summary>Establecer el shim de TeamDTO.set_Roster(RosterDTO value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.AllInstances.SecondLastJoinDateGet">
            <summary>Establecer el shim de TeamDTO.get_SecondLastJoinDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.AllInstances.SecondLastJoinDateSetDateTime">
            <summary>Establecer el shim de TeamDTO.set_SecondLastJoinDate(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.AllInstances.SecondsUntilEligibleForDeletionGet">
            <summary>Establecer el shim de TeamDTO.get_SecondsUntilEligibleForDeletion()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.AllInstances.SecondsUntilEligibleForDeletionSetDouble">
            <summary>Establecer el shim de TeamDTO.set_SecondsUntilEligibleForDeletion(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.AllInstances.StatusGet">
            <summary>Establecer el shim de TeamDTO.get_Status()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.AllInstances.StatusSetString">
            <summary>Establecer el shim de TeamDTO.set_Status(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.AllInstances.TagGet">
            <summary>Establecer el shim de TeamDTO.get_Tag()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.AllInstances.TagSetString">
            <summary>Establecer el shim de TeamDTO.set_Tag(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.AllInstances.TeamIdGet">
            <summary>Establecer el shim de TeamDTO.get_TeamId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.AllInstances.TeamIdSetTeamId">
            <summary>Establecer el shim de TeamDTO.set_TeamId(TeamId value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.AllInstances.TeamStatSummaryGet">
            <summary>Establecer el shim de TeamDTO.get_TeamStatSummary()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.AllInstances.TeamStatSummarySetTeamStatSummary">
            <summary>Establecer el shim de TeamDTO.set_TeamStatSummary(TeamStatSummary value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.AllInstances.ThirdLastJoinDateGet">
            <summary>Establecer el shim de TeamDTO.get_ThirdLastJoinDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.AllInstances.ThirdLastJoinDateSetDateTime">
            <summary>Establecer el shim de TeamDTO.set_ThirdLastJoinDate(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamDTO.AllInstances.TypeNameGet">
            <summary>Establecer el shim de TeamDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamMemberInfoDTO">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Team.Dto.TeamMemberInfoDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamMemberInfoDTO.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamMemberInfoDTO.#ctor(PVPNetConnect.RiotObjects.Team.Dto.TeamMemberInfoDTO)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamMemberInfoDTO.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamMemberInfoDTO.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamMemberInfoDTO.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamMemberInfoDTO.Constructor">
            <summary>Establecer el shim de TeamMemberInfoDTO.TeamMemberInfoDTO()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamMemberInfoDTO.ConstructorTeamMemberInfoDTOCallback">
            <summary>Establecer el shim de TeamMemberInfoDTO.TeamMemberInfoDTO(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamMemberInfoDTO.ConstructorTypedObject">
            <summary>Establecer el shim de TeamMemberInfoDTO.TeamMemberInfoDTO(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamMemberInfoDTO.DoCallbackTypedObject">
            <summary>Establecer el shim de TeamMemberInfoDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamMemberInfoDTO.InviteDateGet">
            <summary>Establecer el shim de TeamMemberInfoDTO.get_InviteDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamMemberInfoDTO.InviteDateSetDateTime">
            <summary>Establecer el shim de TeamMemberInfoDTO.set_InviteDate(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamMemberInfoDTO.JoinDateGet">
            <summary>Establecer el shim de TeamMemberInfoDTO.get_JoinDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamMemberInfoDTO.JoinDateSetDateTime">
            <summary>Establecer el shim de TeamMemberInfoDTO.set_JoinDate(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamMemberInfoDTO.PlayerIdGet">
            <summary>Establecer el shim de TeamMemberInfoDTO.get_PlayerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamMemberInfoDTO.PlayerIdSetDouble">
            <summary>Establecer el shim de TeamMemberInfoDTO.set_PlayerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamMemberInfoDTO.PlayerNameGet">
            <summary>Establecer el shim de TeamMemberInfoDTO.get_PlayerName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamMemberInfoDTO.PlayerNameSetString">
            <summary>Establecer el shim de TeamMemberInfoDTO.set_PlayerName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamMemberInfoDTO.StatusGet">
            <summary>Establecer el shim de TeamMemberInfoDTO.get_Status()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamMemberInfoDTO.StatusSetString">
            <summary>Establecer el shim de TeamMemberInfoDTO.set_Status(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamMemberInfoDTO.TypeNameGet">
            <summary>Establecer el shim de TeamMemberInfoDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamMemberInfoDTO.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamMemberInfoDTO.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de TeamMemberInfoDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamMemberInfoDTO.AllInstances.InviteDateGet">
            <summary>Establecer el shim de TeamMemberInfoDTO.get_InviteDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamMemberInfoDTO.AllInstances.InviteDateSetDateTime">
            <summary>Establecer el shim de TeamMemberInfoDTO.set_InviteDate(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamMemberInfoDTO.AllInstances.JoinDateGet">
            <summary>Establecer el shim de TeamMemberInfoDTO.get_JoinDate()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamMemberInfoDTO.AllInstances.JoinDateSetDateTime">
            <summary>Establecer el shim de TeamMemberInfoDTO.set_JoinDate(DateTime value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamMemberInfoDTO.AllInstances.PlayerIdGet">
            <summary>Establecer el shim de TeamMemberInfoDTO.get_PlayerId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamMemberInfoDTO.AllInstances.PlayerIdSetDouble">
            <summary>Establecer el shim de TeamMemberInfoDTO.set_PlayerId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamMemberInfoDTO.AllInstances.PlayerNameGet">
            <summary>Establecer el shim de TeamMemberInfoDTO.get_PlayerName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamMemberInfoDTO.AllInstances.PlayerNameSetString">
            <summary>Establecer el shim de TeamMemberInfoDTO.set_PlayerName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamMemberInfoDTO.AllInstances.StatusGet">
            <summary>Establecer el shim de TeamMemberInfoDTO.get_Status()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamMemberInfoDTO.AllInstances.StatusSetString">
            <summary>Establecer el shim de TeamMemberInfoDTO.set_Status(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.ShimTeamMemberInfoDTO.AllInstances.TypeNameGet">
            <summary>Establecer el shim de TeamMemberInfoDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubPlayerDTO">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Team.Dto.PlayerDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubPlayerDTO.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubPlayerDTO.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubPlayerDTO.#ctor(PVPNetConnect.RiotObjects.Team.Dto.PlayerDTO.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubPlayerDTO.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de PlayerDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubPlayerDTO.DoCallbackTypedObject">
            <summary>Establecer el stub de PlayerDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubPlayerDTO.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPlayerDTO</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubPlayerDTO.TypeNameGet">
            <summary>Establecer el stub de PlayerDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubPlayerDTO.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubPlayerDTO.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubPlayerDTO.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubPlayerDTO.TypeName">
            <summary>Establecer el stub de PlayerDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubRosterDTO">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Team.Dto.RosterDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubRosterDTO.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubRosterDTO.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubRosterDTO.#ctor(PVPNetConnect.RiotObjects.Team.Dto.RosterDTO.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubRosterDTO.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de RosterDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubRosterDTO.DoCallbackTypedObject">
            <summary>Establecer el stub de RosterDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubRosterDTO.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubRosterDTO</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubRosterDTO.TypeNameGet">
            <summary>Establecer el stub de RosterDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubRosterDTO.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubRosterDTO.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubRosterDTO.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubRosterDTO.TypeName">
            <summary>Establecer el stub de RosterDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubTeamDTO">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Team.Dto.TeamDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubTeamDTO.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubTeamDTO.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubTeamDTO.#ctor(PVPNetConnect.RiotObjects.Team.Dto.TeamDTO.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubTeamDTO.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de TeamDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubTeamDTO.DoCallbackTypedObject">
            <summary>Establecer el stub de TeamDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubTeamDTO.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubTeamDTO</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubTeamDTO.TypeNameGet">
            <summary>Establecer el stub de TeamDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubTeamDTO.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubTeamDTO.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubTeamDTO.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubTeamDTO.TypeName">
            <summary>Establecer el stub de TeamDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubTeamMemberInfoDTO">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Team.Dto.TeamMemberInfoDTO</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubTeamMemberInfoDTO.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubTeamMemberInfoDTO.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubTeamMemberInfoDTO.#ctor(PVPNetConnect.RiotObjects.Team.Dto.TeamMemberInfoDTO.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubTeamMemberInfoDTO.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de TeamMemberInfoDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubTeamMemberInfoDTO.DoCallbackTypedObject">
            <summary>Establecer el stub de TeamMemberInfoDTO.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubTeamMemberInfoDTO.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubTeamMemberInfoDTO</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubTeamMemberInfoDTO.TypeNameGet">
            <summary>Establecer el stub de TeamMemberInfoDTO.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubTeamMemberInfoDTO.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubTeamMemberInfoDTO.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubTeamMemberInfoDTO.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Dto.Fakes.StubTeamMemberInfoDTO.TypeName">
            <summary>Establecer el stub de TeamMemberInfoDTO.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Team.Fakes.ShimCreatedTeam">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Team.CreatedTeam</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Fakes.ShimCreatedTeam.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Fakes.ShimCreatedTeam.#ctor(PVPNetConnect.RiotObjects.Team.CreatedTeam)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Fakes.ShimCreatedTeam.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Fakes.ShimCreatedTeam.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimCreatedTeam.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimCreatedTeam.Constructor">
            <summary>Establecer el shim de CreatedTeam.CreatedTeam()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimCreatedTeam.ConstructorCreatedTeamCallback">
            <summary>Establecer el shim de CreatedTeam.CreatedTeam(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimCreatedTeam.ConstructorTypedObject">
            <summary>Establecer el shim de CreatedTeam.CreatedTeam(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimCreatedTeam.DoCallbackTypedObject">
            <summary>Establecer el shim de CreatedTeam.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimCreatedTeam.TeamIdGet">
            <summary>Establecer el shim de CreatedTeam.get_TeamId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimCreatedTeam.TeamIdSetTeamId">
            <summary>Establecer el shim de CreatedTeam.set_TeamId(TeamId value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimCreatedTeam.TimeStampGet">
            <summary>Establecer el shim de CreatedTeam.get_TimeStamp()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimCreatedTeam.TimeStampSetDouble">
            <summary>Establecer el shim de CreatedTeam.set_TimeStamp(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimCreatedTeam.TypeNameGet">
            <summary>Establecer el shim de CreatedTeam.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Team.Fakes.ShimCreatedTeam.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimCreatedTeam.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de CreatedTeam.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimCreatedTeam.AllInstances.TeamIdGet">
            <summary>Establecer el shim de CreatedTeam.get_TeamId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimCreatedTeam.AllInstances.TeamIdSetTeamId">
            <summary>Establecer el shim de CreatedTeam.set_TeamId(TeamId value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimCreatedTeam.AllInstances.TimeStampGet">
            <summary>Establecer el shim de CreatedTeam.get_TimeStamp()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimCreatedTeam.AllInstances.TimeStampSetDouble">
            <summary>Establecer el shim de CreatedTeam.set_TimeStamp(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimCreatedTeam.AllInstances.TypeNameGet">
            <summary>Establecer el shim de CreatedTeam.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamId">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Team.TeamId</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamId.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamId.#ctor(PVPNetConnect.RiotObjects.Team.TeamId)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamId.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamId.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamId.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamId.Constructor">
            <summary>Establecer el shim de TeamId.TeamId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamId.ConstructorTeamIdCallback">
            <summary>Establecer el shim de TeamId.TeamId(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamId.ConstructorTypedObject">
            <summary>Establecer el shim de TeamId.TeamId(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamId.DoCallbackTypedObject">
            <summary>Establecer el shim de TeamId.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamId.FullIdGet">
            <summary>Establecer el shim de TeamId.get_FullId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamId.FullIdSetString">
            <summary>Establecer el shim de TeamId.set_FullId(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamId.TypeNameGet">
            <summary>Establecer el shim de TeamId.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamId.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamId.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de TeamId.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamId.AllInstances.FullIdGet">
            <summary>Establecer el shim de TeamId.get_FullId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamId.AllInstances.FullIdSetString">
            <summary>Establecer el shim de TeamId.set_FullId(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamId.AllInstances.TypeNameGet">
            <summary>Establecer el shim de TeamId.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamInfo">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Team.TeamInfo</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamInfo.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamInfo.#ctor(PVPNetConnect.RiotObjects.Team.TeamInfo)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamInfo.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamInfo.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamInfo.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamInfo.Constructor">
            <summary>Establecer el shim de TeamInfo.TeamInfo()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamInfo.ConstructorTeamInfoCallback">
            <summary>Establecer el shim de TeamInfo.TeamInfo(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamInfo.ConstructorTypedObject">
            <summary>Establecer el shim de TeamInfo.TeamInfo(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamInfo.DoCallbackTypedObject">
            <summary>Establecer el shim de TeamInfo.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamInfo.MemberStatusGet">
            <summary>Establecer el shim de TeamInfo.get_MemberStatus()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamInfo.MemberStatusSetString">
            <summary>Establecer el shim de TeamInfo.set_MemberStatus(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamInfo.MemberStatusStringGet">
            <summary>Establecer el shim de TeamInfo.get_MemberStatusString()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamInfo.MemberStatusStringSetString">
            <summary>Establecer el shim de TeamInfo.set_MemberStatusString(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamInfo.NameGet">
            <summary>Establecer el shim de TeamInfo.get_Name()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamInfo.NameSetString">
            <summary>Establecer el shim de TeamInfo.set_Name(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamInfo.SecondsUntilEligibleForDeletionGet">
            <summary>Establecer el shim de TeamInfo.get_SecondsUntilEligibleForDeletion()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamInfo.SecondsUntilEligibleForDeletionSetDouble">
            <summary>Establecer el shim de TeamInfo.set_SecondsUntilEligibleForDeletion(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamInfo.TagGet">
            <summary>Establecer el shim de TeamInfo.get_Tag()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamInfo.TagSetString">
            <summary>Establecer el shim de TeamInfo.set_Tag(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamInfo.TeamIdGet">
            <summary>Establecer el shim de TeamInfo.get_TeamId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamInfo.TeamIdSetTeamId">
            <summary>Establecer el shim de TeamInfo.set_TeamId(TeamId value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamInfo.TypeNameGet">
            <summary>Establecer el shim de TeamInfo.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamInfo.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamInfo.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de TeamInfo.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamInfo.AllInstances.MemberStatusGet">
            <summary>Establecer el shim de TeamInfo.get_MemberStatus()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamInfo.AllInstances.MemberStatusSetString">
            <summary>Establecer el shim de TeamInfo.set_MemberStatus(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamInfo.AllInstances.MemberStatusStringGet">
            <summary>Establecer el shim de TeamInfo.get_MemberStatusString()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamInfo.AllInstances.MemberStatusStringSetString">
            <summary>Establecer el shim de TeamInfo.set_MemberStatusString(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamInfo.AllInstances.NameGet">
            <summary>Establecer el shim de TeamInfo.get_Name()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamInfo.AllInstances.NameSetString">
            <summary>Establecer el shim de TeamInfo.set_Name(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamInfo.AllInstances.SecondsUntilEligibleForDeletionGet">
            <summary>Establecer el shim de TeamInfo.get_SecondsUntilEligibleForDeletion()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamInfo.AllInstances.SecondsUntilEligibleForDeletionSetDouble">
            <summary>Establecer el shim de TeamInfo.set_SecondsUntilEligibleForDeletion(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamInfo.AllInstances.TagGet">
            <summary>Establecer el shim de TeamInfo.get_Tag()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamInfo.AllInstances.TagSetString">
            <summary>Establecer el shim de TeamInfo.set_Tag(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamInfo.AllInstances.TeamIdGet">
            <summary>Establecer el shim de TeamInfo.get_TeamId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamInfo.AllInstances.TeamIdSetTeamId">
            <summary>Establecer el shim de TeamInfo.set_TeamId(TeamId value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.ShimTeamInfo.AllInstances.TypeNameGet">
            <summary>Establecer el shim de TeamInfo.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Team.Fakes.StubCreatedTeam">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Team.CreatedTeam</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Fakes.StubCreatedTeam.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Fakes.StubCreatedTeam.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Fakes.StubCreatedTeam.#ctor(PVPNetConnect.RiotObjects.Team.CreatedTeam.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Fakes.StubCreatedTeam.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de CreatedTeam.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Team.Fakes.StubCreatedTeam.DoCallbackTypedObject">
            <summary>Establecer el stub de CreatedTeam.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Fakes.StubCreatedTeam.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubCreatedTeam</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Team.Fakes.StubCreatedTeam.TypeNameGet">
            <summary>Establecer el stub de CreatedTeam.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.StubCreatedTeam.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.StubCreatedTeam.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.StubCreatedTeam.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.StubCreatedTeam.TypeName">
            <summary>Establecer el stub de CreatedTeam.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Team.Fakes.StubTeamId">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Team.TeamId</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Fakes.StubTeamId.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Fakes.StubTeamId.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Fakes.StubTeamId.#ctor(PVPNetConnect.RiotObjects.Team.TeamId.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Fakes.StubTeamId.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de TeamId.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Team.Fakes.StubTeamId.DoCallbackTypedObject">
            <summary>Establecer el stub de TeamId.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Fakes.StubTeamId.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubTeamId</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Team.Fakes.StubTeamId.TypeNameGet">
            <summary>Establecer el stub de TeamId.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.StubTeamId.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.StubTeamId.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.StubTeamId.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.StubTeamId.TypeName">
            <summary>Establecer el stub de TeamId.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Team.Fakes.StubTeamInfo">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Team.TeamInfo</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Fakes.StubTeamInfo.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Fakes.StubTeamInfo.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Fakes.StubTeamInfo.#ctor(PVPNetConnect.RiotObjects.Team.TeamInfo.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Fakes.StubTeamInfo.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de TeamInfo.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Team.Fakes.StubTeamInfo.DoCallbackTypedObject">
            <summary>Establecer el stub de TeamInfo.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Fakes.StubTeamInfo.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubTeamInfo</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Team.Fakes.StubTeamInfo.TypeNameGet">
            <summary>Establecer el stub de TeamInfo.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.StubTeamInfo.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.StubTeamInfo.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.StubTeamInfo.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Fakes.StubTeamInfo.TypeName">
            <summary>Establecer el stub de TeamInfo.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Team.Stats.MatchHistorySummary</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.#ctor(PVPNetConnect.RiotObjects.Team.Stats.MatchHistorySummary)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.AssistsGet">
            <summary>Establecer el shim de MatchHistorySummary.get_Assists()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.AssistsSetInt32">
            <summary>Establecer el shim de MatchHistorySummary.set_Assists(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.Constructor">
            <summary>Establecer el shim de MatchHistorySummary.MatchHistorySummary()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.ConstructorMatchHistorySummaryCallback">
            <summary>Establecer el shim de MatchHistorySummary.MatchHistorySummary(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.ConstructorTypedObject">
            <summary>Establecer el shim de MatchHistorySummary.MatchHistorySummary(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.DateGet">
            <summary>Establecer el shim de MatchHistorySummary.get_Date()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.DateSetDouble">
            <summary>Establecer el shim de MatchHistorySummary.set_Date(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.DeathsGet">
            <summary>Establecer el shim de MatchHistorySummary.get_Deaths()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.DeathsSetInt32">
            <summary>Establecer el shim de MatchHistorySummary.set_Deaths(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.DoCallbackTypedObject">
            <summary>Establecer el shim de MatchHistorySummary.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.GameIdGet">
            <summary>Establecer el shim de MatchHistorySummary.get_GameId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.GameIdSetDouble">
            <summary>Establecer el shim de MatchHistorySummary.set_GameId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.GameModeGet">
            <summary>Establecer el shim de MatchHistorySummary.get_GameMode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.GameModeSetString">
            <summary>Establecer el shim de MatchHistorySummary.set_GameMode(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.InvalidGet">
            <summary>Establecer el shim de MatchHistorySummary.get_Invalid()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.InvalidSetBoolean">
            <summary>Establecer el shim de MatchHistorySummary.set_Invalid(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.KillsGet">
            <summary>Establecer el shim de MatchHistorySummary.get_Kills()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.KillsSetInt32">
            <summary>Establecer el shim de MatchHistorySummary.set_Kills(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.MapIdGet">
            <summary>Establecer el shim de MatchHistorySummary.get_MapId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.MapIdSetInt32">
            <summary>Establecer el shim de MatchHistorySummary.set_MapId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.OpposingTeamKillsGet">
            <summary>Establecer el shim de MatchHistorySummary.get_OpposingTeamKills()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.OpposingTeamKillsSetInt32">
            <summary>Establecer el shim de MatchHistorySummary.set_OpposingTeamKills(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.OpposingTeamNameGet">
            <summary>Establecer el shim de MatchHistorySummary.get_OpposingTeamName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.OpposingTeamNameSetString">
            <summary>Establecer el shim de MatchHistorySummary.set_OpposingTeamName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.TypeNameGet">
            <summary>Establecer el shim de MatchHistorySummary.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.WinGet">
            <summary>Establecer el shim de MatchHistorySummary.get_Win()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.WinSetBoolean">
            <summary>Establecer el shim de MatchHistorySummary.set_Win(Boolean value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.AllInstances.AssistsGet">
            <summary>Establecer el shim de MatchHistorySummary.get_Assists()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.AllInstances.AssistsSetInt32">
            <summary>Establecer el shim de MatchHistorySummary.set_Assists(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.AllInstances.DateGet">
            <summary>Establecer el shim de MatchHistorySummary.get_Date()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.AllInstances.DateSetDouble">
            <summary>Establecer el shim de MatchHistorySummary.set_Date(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.AllInstances.DeathsGet">
            <summary>Establecer el shim de MatchHistorySummary.get_Deaths()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.AllInstances.DeathsSetInt32">
            <summary>Establecer el shim de MatchHistorySummary.set_Deaths(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de MatchHistorySummary.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.AllInstances.GameIdGet">
            <summary>Establecer el shim de MatchHistorySummary.get_GameId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.AllInstances.GameIdSetDouble">
            <summary>Establecer el shim de MatchHistorySummary.set_GameId(Double value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.AllInstances.GameModeGet">
            <summary>Establecer el shim de MatchHistorySummary.get_GameMode()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.AllInstances.GameModeSetString">
            <summary>Establecer el shim de MatchHistorySummary.set_GameMode(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.AllInstances.InvalidGet">
            <summary>Establecer el shim de MatchHistorySummary.get_Invalid()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.AllInstances.InvalidSetBoolean">
            <summary>Establecer el shim de MatchHistorySummary.set_Invalid(Boolean value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.AllInstances.KillsGet">
            <summary>Establecer el shim de MatchHistorySummary.get_Kills()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.AllInstances.KillsSetInt32">
            <summary>Establecer el shim de MatchHistorySummary.set_Kills(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.AllInstances.MapIdGet">
            <summary>Establecer el shim de MatchHistorySummary.get_MapId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.AllInstances.MapIdSetInt32">
            <summary>Establecer el shim de MatchHistorySummary.set_MapId(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.AllInstances.OpposingTeamKillsGet">
            <summary>Establecer el shim de MatchHistorySummary.get_OpposingTeamKills()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.AllInstances.OpposingTeamKillsSetInt32">
            <summary>Establecer el shim de MatchHistorySummary.set_OpposingTeamKills(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.AllInstances.OpposingTeamNameGet">
            <summary>Establecer el shim de MatchHistorySummary.get_OpposingTeamName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.AllInstances.OpposingTeamNameSetString">
            <summary>Establecer el shim de MatchHistorySummary.set_OpposingTeamName(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.AllInstances.TypeNameGet">
            <summary>Establecer el shim de MatchHistorySummary.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.AllInstances.WinGet">
            <summary>Establecer el shim de MatchHistorySummary.get_Win()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimMatchHistorySummary.AllInstances.WinSetBoolean">
            <summary>Establecer el shim de MatchHistorySummary.set_Win(Boolean value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Team.Stats.TeamStatDetail</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.#ctor(PVPNetConnect.RiotObjects.Team.Stats.TeamStatDetail)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.AverageGamesPlayedGet">
            <summary>Establecer el shim de TeamStatDetail.get_AverageGamesPlayed()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.AverageGamesPlayedSetInt32">
            <summary>Establecer el shim de TeamStatDetail.set_AverageGamesPlayed(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.Constructor">
            <summary>Establecer el shim de TeamStatDetail.TeamStatDetail()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.ConstructorTeamStatDetailCallback">
            <summary>Establecer el shim de TeamStatDetail.TeamStatDetail(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.ConstructorTypedObject">
            <summary>Establecer el shim de TeamStatDetail.TeamStatDetail(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.DoCallbackTypedObject">
            <summary>Establecer el shim de TeamStatDetail.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.LossesGet">
            <summary>Establecer el shim de TeamStatDetail.get_Losses()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.LossesSetInt32">
            <summary>Establecer el shim de TeamStatDetail.set_Losses(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.MaxRatingGet">
            <summary>Establecer el shim de TeamStatDetail.get_MaxRating()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.MaxRatingSetInt32">
            <summary>Establecer el shim de TeamStatDetail.set_MaxRating(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.RatingGet">
            <summary>Establecer el shim de TeamStatDetail.get_Rating()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.RatingSetInt32">
            <summary>Establecer el shim de TeamStatDetail.set_Rating(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.SeedRatingGet">
            <summary>Establecer el shim de TeamStatDetail.get_SeedRating()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.SeedRatingSetInt32">
            <summary>Establecer el shim de TeamStatDetail.set_SeedRating(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.TeamIdGet">
            <summary>Establecer el shim de TeamStatDetail.get_TeamId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.TeamIdSetTeamId">
            <summary>Establecer el shim de TeamStatDetail.set_TeamId(TeamId value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.TeamIdStringGet">
            <summary>Establecer el shim de TeamStatDetail.get_TeamIdString()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.TeamIdStringSetString">
            <summary>Establecer el shim de TeamStatDetail.set_TeamIdString(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.TeamStatTypeGet">
            <summary>Establecer el shim de TeamStatDetail.get_TeamStatType()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.TeamStatTypeSetString">
            <summary>Establecer el shim de TeamStatDetail.set_TeamStatType(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.TeamStatTypeStringGet">
            <summary>Establecer el shim de TeamStatDetail.get_TeamStatTypeString()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.TeamStatTypeStringSetString">
            <summary>Establecer el shim de TeamStatDetail.set_TeamStatTypeString(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.TypeNameGet">
            <summary>Establecer el shim de TeamStatDetail.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.WinsGet">
            <summary>Establecer el shim de TeamStatDetail.get_Wins()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.WinsSetInt32">
            <summary>Establecer el shim de TeamStatDetail.set_Wins(Int32 value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.AllInstances.AverageGamesPlayedGet">
            <summary>Establecer el shim de TeamStatDetail.get_AverageGamesPlayed()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.AllInstances.AverageGamesPlayedSetInt32">
            <summary>Establecer el shim de TeamStatDetail.set_AverageGamesPlayed(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de TeamStatDetail.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.AllInstances.LossesGet">
            <summary>Establecer el shim de TeamStatDetail.get_Losses()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.AllInstances.LossesSetInt32">
            <summary>Establecer el shim de TeamStatDetail.set_Losses(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.AllInstances.MaxRatingGet">
            <summary>Establecer el shim de TeamStatDetail.get_MaxRating()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.AllInstances.MaxRatingSetInt32">
            <summary>Establecer el shim de TeamStatDetail.set_MaxRating(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.AllInstances.RatingGet">
            <summary>Establecer el shim de TeamStatDetail.get_Rating()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.AllInstances.RatingSetInt32">
            <summary>Establecer el shim de TeamStatDetail.set_Rating(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.AllInstances.SeedRatingGet">
            <summary>Establecer el shim de TeamStatDetail.get_SeedRating()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.AllInstances.SeedRatingSetInt32">
            <summary>Establecer el shim de TeamStatDetail.set_SeedRating(Int32 value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.AllInstances.TeamIdGet">
            <summary>Establecer el shim de TeamStatDetail.get_TeamId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.AllInstances.TeamIdSetTeamId">
            <summary>Establecer el shim de TeamStatDetail.set_TeamId(TeamId value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.AllInstances.TeamIdStringGet">
            <summary>Establecer el shim de TeamStatDetail.get_TeamIdString()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.AllInstances.TeamIdStringSetString">
            <summary>Establecer el shim de TeamStatDetail.set_TeamIdString(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.AllInstances.TeamStatTypeGet">
            <summary>Establecer el shim de TeamStatDetail.get_TeamStatType()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.AllInstances.TeamStatTypeSetString">
            <summary>Establecer el shim de TeamStatDetail.set_TeamStatType(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.AllInstances.TeamStatTypeStringGet">
            <summary>Establecer el shim de TeamStatDetail.get_TeamStatTypeString()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.AllInstances.TeamStatTypeStringSetString">
            <summary>Establecer el shim de TeamStatDetail.set_TeamStatTypeString(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.AllInstances.TypeNameGet">
            <summary>Establecer el shim de TeamStatDetail.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.AllInstances.WinsGet">
            <summary>Establecer el shim de TeamStatDetail.get_Wins()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatDetail.AllInstances.WinsSetInt32">
            <summary>Establecer el shim de TeamStatDetail.set_Wins(Int32 value)</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatSummary">
            <summary>Tipo de correcciones de compatibilidad (shim) de PVPNetConnect.RiotObjects.Team.Stats.TeamStatSummary</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatSummary.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatSummary.#ctor(PVPNetConnect.RiotObjects.Team.Stats.TeamStatSummary)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatSummary.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatSummary.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatSummary.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatSummary.Constructor">
            <summary>Establecer el shim de TeamStatSummary.TeamStatSummary()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatSummary.ConstructorTeamStatSummaryCallback">
            <summary>Establecer el shim de TeamStatSummary.TeamStatSummary(Callback callback)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatSummary.ConstructorTypedObject">
            <summary>Establecer el shim de TeamStatSummary.TeamStatSummary(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatSummary.DoCallbackTypedObject">
            <summary>Establecer el shim de TeamStatSummary.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatSummary.TeamIdGet">
            <summary>Establecer el shim de TeamStatSummary.get_TeamId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatSummary.TeamIdSetTeamId">
            <summary>Establecer el shim de TeamStatSummary.set_TeamId(TeamId value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatSummary.TeamIdStringGet">
            <summary>Establecer el shim de TeamStatSummary.get_TeamIdString()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatSummary.TeamIdStringSetString">
            <summary>Establecer el shim de TeamStatSummary.set_TeamIdString(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatSummary.TeamStatDetailsGet">
            <summary>Establecer el shim de TeamStatSummary.get_TeamStatDetails()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatSummary.TeamStatDetailsSetListOfTeamStatDetail">
            <summary>Establecer el shim de TeamStatSummary.set_TeamStatDetails(List`1&lt;TeamStatDetail&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatSummary.TypeNameGet">
            <summary>Establecer el shim de TeamStatSummary.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatSummary.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatSummary.AllInstances.DoCallbackTypedObject">
            <summary>Establecer el shim de TeamStatSummary.DoCallback(TypedObject result)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatSummary.AllInstances.TeamIdGet">
            <summary>Establecer el shim de TeamStatSummary.get_TeamId()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatSummary.AllInstances.TeamIdSetTeamId">
            <summary>Establecer el shim de TeamStatSummary.set_TeamId(TeamId value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatSummary.AllInstances.TeamIdStringGet">
            <summary>Establecer el shim de TeamStatSummary.get_TeamIdString()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatSummary.AllInstances.TeamIdStringSetString">
            <summary>Establecer el shim de TeamStatSummary.set_TeamIdString(String value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatSummary.AllInstances.TeamStatDetailsGet">
            <summary>Establecer el shim de TeamStatSummary.get_TeamStatDetails()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatSummary.AllInstances.TeamStatDetailsSetListOfTeamStatDetail">
            <summary>Establecer el shim de TeamStatSummary.set_TeamStatDetails(List`1&lt;TeamStatDetail&gt; value)</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.ShimTeamStatSummary.AllInstances.TypeNameGet">
            <summary>Establecer el shim de TeamStatSummary.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Team.Stats.Fakes.StubMatchHistorySummary">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Team.Stats.MatchHistorySummary</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Stats.Fakes.StubMatchHistorySummary.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Stats.Fakes.StubMatchHistorySummary.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Stats.Fakes.StubMatchHistorySummary.#ctor(PVPNetConnect.RiotObjects.Team.Stats.MatchHistorySummary.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Stats.Fakes.StubMatchHistorySummary.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de MatchHistorySummary.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Team.Stats.Fakes.StubMatchHistorySummary.DoCallbackTypedObject">
            <summary>Establecer el stub de MatchHistorySummary.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Stats.Fakes.StubMatchHistorySummary.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubMatchHistorySummary</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Team.Stats.Fakes.StubMatchHistorySummary.TypeNameGet">
            <summary>Establecer el stub de MatchHistorySummary.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.StubMatchHistorySummary.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.StubMatchHistorySummary.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.StubMatchHistorySummary.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.StubMatchHistorySummary.TypeName">
            <summary>Establecer el stub de MatchHistorySummary.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Team.Stats.Fakes.StubTeamStatDetail">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Team.Stats.TeamStatDetail</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Stats.Fakes.StubTeamStatDetail.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Stats.Fakes.StubTeamStatDetail.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Stats.Fakes.StubTeamStatDetail.#ctor(PVPNetConnect.RiotObjects.Team.Stats.TeamStatDetail.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Stats.Fakes.StubTeamStatDetail.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de TeamStatDetail.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Team.Stats.Fakes.StubTeamStatDetail.DoCallbackTypedObject">
            <summary>Establecer el stub de TeamStatDetail.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Stats.Fakes.StubTeamStatDetail.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubTeamStatDetail</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Team.Stats.Fakes.StubTeamStatDetail.TypeNameGet">
            <summary>Establecer el stub de TeamStatDetail.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.StubTeamStatDetail.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.StubTeamStatDetail.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.StubTeamStatDetail.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.StubTeamStatDetail.TypeName">
            <summary>Establecer el stub de TeamStatDetail.get_TypeName()</summary>
        </member>
        <member name="T:PVPNetConnect.RiotObjects.Team.Stats.Fakes.StubTeamStatSummary">
            <summary>Tipo stub de PVPNetConnect.RiotObjects.Team.Stats.TeamStatSummary</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Stats.Fakes.StubTeamStatSummary.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Stats.Fakes.StubTeamStatSummary.#ctor(PVPNetConnect.TypedObject)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Stats.Fakes.StubTeamStatSummary.#ctor(PVPNetConnect.RiotObjects.Team.Stats.TeamStatSummary.Callback)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Stats.Fakes.StubTeamStatSummary.DoCallback(PVPNetConnect.TypedObject)">
            <summary>Establecer el stub de TeamStatSummary.DoCallback(TypedObject result)</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Team.Stats.Fakes.StubTeamStatSummary.DoCallbackTypedObject">
            <summary>Establecer el stub de TeamStatSummary.DoCallback(TypedObject result)</summary>
        </member>
        <member name="M:PVPNetConnect.RiotObjects.Team.Stats.Fakes.StubTeamStatSummary.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubTeamStatSummary</summary>
        </member>
        <member name="F:PVPNetConnect.RiotObjects.Team.Stats.Fakes.StubTeamStatSummary.TypeNameGet">
            <summary>Establecer el stub de TeamStatSummary.get_TypeName()</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.StubTeamStatSummary.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.StubTeamStatSummary.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.StubTeamStatSummary.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:PVPNetConnect.RiotObjects.Team.Stats.Fakes.StubTeamStatSummary.TypeName">
            <summary>Establecer el stub de TeamStatSummary.get_TypeName()</summary>
        </member>
    </members>
</doc>
